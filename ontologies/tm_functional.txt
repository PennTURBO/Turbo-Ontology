Prefix(:=<http://transformunify.org/ontologies/turbo.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(ro:=<http://www.obofoundry.org/ro/ro.owl#>)
Prefix(ns3:=<http://www.ebi.ac.uk/efo/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(faldo:=<http://biohackathon.org/resource/faldo#>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)
Prefix(Thesaurus:=<http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>)
Prefix(ncbitaxon:=<http://purl.obolibrary.org/obo/ncbitaxon#>)
Prefix(ontologies:=<http://transformunify.org/ontologies/>)


Ontology(<http://transformunify.org/ontologies/turbo.owl>
Annotation(obo:IAO_0000232 "Why do some terms appear in Karma as their labels and some appear as their URIs?")
Annotation(dc:contributor "Chris Stoeckert")
Annotation(dc:contributor "Mark A. Miller")
Annotation(dc:license "")
Annotation(dc:source "OBO foundry ontologies, especially the ontology for biobanking, OBIB.")
Annotation(dc:title "The TURBO application ontology")
Annotation(rdfs:comment "This ontology is intended to support a semantic linked data reimplementation of biobank data, typically originating in a relational format.  The first implementation will be at the Penn Medicine Biobank.")
Annotation(rdfs:comment "flop")
Annotation(rdfs:comment "used ontodog to extract a base ontology view from OBI
used ontofox to get additional classes and properties from other OBO foundry ontologies

no longer attempting to import RDF and RDFS.  We have created some similar terms in the turbo namespace, like turbo:Statement.  It's not straightforward to use rdfs:label, rdf:type and rdf:Statement, etc. in Protege, Karma or LodLive... GraphDB visual exploration preferable now anyway?

HISTORICAL NOTES BELOW, MAY NOT BE ACCURATE ANYMORE:
the property \"denotes\" was extracted from OBIB, and the comments annotation has been removed because of a conflict with ISI's Karma software")

Declaration(Class(faldo:Position))
Declaration(Class(faldo:Region))
Declaration(Class(Thesaurus:C49474))
Declaration(Class(obo:BFO_0000001))
Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000006))
Declaration(Class(obo:BFO_0000008))
Declaration(Class(obo:BFO_0000011))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000024))
Declaration(Class(obo:BFO_0000027))
Declaration(Class(obo:BFO_0000028))
Declaration(Class(obo:BFO_0000030))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000035))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:BFO_0000148))
Declaration(Class(obo:CHEBI_16670))
Declaration(Class(obo:CHEBI_16991))
Declaration(Class(obo:CHEBI_23367))
Declaration(Class(obo:CHEBI_24431))
Declaration(Class(obo:CHEBI_33247))
Declaration(Class(obo:CHEBI_33250))
Declaration(Class(obo:CHEBI_33696))
Declaration(Class(obo:CHEBI_33697))
Declaration(Class(obo:CHEBI_33708))
Declaration(Class(obo:CHEBI_33839))
Declaration(Class(obo:CHEBI_50047))
Declaration(Class(obo:CL_0000000))
Declaration(Class(obo:CL_0000010))
Declaration(Class(obo:CL_0000578))
Declaration(Class(obo:DRON_00000001))
Declaration(Class(obo:DRON_00000005))
Declaration(Class(obo:DRON_00000028))
Declaration(Class(obo:DRON_00000030))
Declaration(Class(obo:DRON_00000031))
Declaration(Class(obo:ENVO_01000254))
Declaration(Class(obo:FMA_50707))
Declaration(Class(obo:GENO_0000133))
Declaration(Class(obo:GENO_0000135))
Declaration(Class(obo:GENO_0000136))
Declaration(Class(obo:GENO_0000391))
Declaration(Class(obo:GENO_0000481))
Declaration(Class(obo:GENO_0000501))
Declaration(Class(obo:GENO_0000516))
Declaration(Class(obo:GENO_0000659))
Declaration(Class(obo:GENO_0000660))
Declaration(Class(obo:GENO_0000701))
Declaration(Class(obo:GENO_0000702))
Declaration(Class(obo:GENO_0000788))
Declaration(Class(obo:GENO_0000815))
Declaration(Class(obo:GENO_0000875))
Declaration(Class(obo:GENO_0000876))
Declaration(Class(obo:GO_0008150))
Declaration(Class(obo:IAO_0000003))
Declaration(Class(obo:IAO_0000005))
Declaration(Class(obo:IAO_0000007))
Declaration(Class(obo:IAO_0000009))
Declaration(Class(obo:IAO_0000027))
Declaration(Class(obo:IAO_0000028))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000032))
Declaration(Class(obo:IAO_0000033))
Declaration(Class(obo:IAO_0000064))
Declaration(Class(obo:IAO_0000078))
Declaration(Class(obo:IAO_0000100))
Declaration(Class(obo:IAO_0000101))
Declaration(Class(obo:IAO_0000102))
Declaration(Class(obo:IAO_0000104))
Declaration(Class(obo:IAO_0000109))
Declaration(Class(obo:IAO_0000129))
Declaration(Class(obo:IAO_0000144))
Declaration(Class(obo:IAO_0000178))
Declaration(Class(obo:IAO_0000225))
Declaration(Class(obo:IAO_0000300))
Declaration(Class(obo:IAO_0000302))
Declaration(Class(obo:IAO_0000308))
Declaration(Class(obo:IAO_0000310))
Declaration(Class(obo:IAO_0000408))
Declaration(Class(obo:IAO_0000409))
Declaration(Class(obo:IAO_0000414))
Declaration(Class(obo:IAO_0000416))
Declaration(Class(obo:IAO_0000572))
Declaration(Class(obo:IAO_0000577))
Declaration(Class(obo:IAO_0000578))
Declaration(Class(obo:IAO_0000579))
Declaration(Class(obo:IAO_0000582))
Declaration(Class(obo:IAO_0000590))
Declaration(Class(obo:IAO_0020000))
Declaration(Class(obo:IAO_0020010))
Declaration(Class(obo:IAO_0020015))
Declaration(Class(obo:IAO_0020021))
Declaration(Class(obo:IAO_0020022))
Declaration(Class(obo:IAO_0020023))
Declaration(Class(obo:IAO_0020024))
Declaration(Class(obo:IAO_0021003))
Declaration(Class(obo:ICO_0000001))
Declaration(Class(obo:ICO_0000006))
Declaration(Class(obo:ICO_0000023))
Declaration(Class(obo:ICO_0000086))
Declaration(Class(obo:ICO_0000111))
Declaration(Class(obo:ICO_0000155))
Declaration(Class(obo:ICO_0000156))
Declaration(Class(obo:NCBITaxon_10239))
Declaration(Class(obo:NCBITaxon_117571))
Declaration(Class(obo:NCBITaxon_1437010))
Declaration(Class(obo:NCBITaxon_2))
Declaration(Class(obo:NCBITaxon_2157))
Declaration(Class(obo:NCBITaxon_2759))
Declaration(Class(obo:NCBITaxon_314146))
Declaration(Class(obo:NCBITaxon_314293))
Declaration(Class(obo:NCBITaxon_32523))
Declaration(Class(obo:NCBITaxon_32524))
Declaration(Class(obo:NCBITaxon_33154))
Declaration(Class(obo:NCBITaxon_33213))
Declaration(Class(obo:NCBITaxon_40674))
Declaration(Class(obo:NCBITaxon_7742))
Declaration(Class(obo:NCBITaxon_9606))
Declaration(Class(obo:OBIB_0000012))
Declaration(Class(obo:OBIB_0000017))
Declaration(Class(obo:OBIB_0000018))
Declaration(Class(obo:OBIB_0000026))
Declaration(Class(obo:OBIB_0000029))
Declaration(Class(obo:OBIB_0000079))
Declaration(Class(obo:OBIB_0000231))
Declaration(Class(obo:OBI_0000011))
Declaration(Class(obo:OBI_0000015))
Declaration(Class(obo:OBI_0000047))
Declaration(Class(obo:OBI_0000066))
Declaration(Class(obo:OBI_0000067))
Declaration(Class(obo:OBI_0000070))
Declaration(Class(obo:OBI_0000079))
Declaration(Class(obo:OBI_0000086))
Declaration(Class(obo:OBI_0000093))
Declaration(Class(obo:OBI_0000094))
Declaration(Class(obo:OBI_0000097))
Declaration(Class(obo:OBI_0000112))
Declaration(Class(obo:OBI_0000113))
Declaration(Class(obo:OBI_0000116))
Declaration(Class(obo:OBI_0000181))
Declaration(Class(obo:OBI_0000202))
Declaration(Class(obo:OBI_0000245))
Declaration(Class(obo:OBI_0000257))
Declaration(Class(obo:OBI_0000260))
Declaration(Class(obo:OBI_0000272))
Declaration(Class(obo:OBI_0000275))
Declaration(Class(obo:OBI_0000338))
Declaration(Class(obo:OBI_0000339))
Declaration(Class(obo:OBI_0000372))
Declaration(Class(obo:OBI_0000379))
Declaration(Class(obo:OBI_0000423))
Declaration(Class(obo:OBI_0000433))
Declaration(Class(obo:OBI_0000437))
Declaration(Class(obo:OBI_0000438))
Declaration(Class(obo:OBI_0000441))
Declaration(Class(obo:OBI_0000443))
Declaration(Class(obo:OBI_0000445))
Declaration(Class(obo:OBI_0000453))
Declaration(Class(obo:OBI_0000456))
Declaration(Class(obo:OBI_0000471))
Declaration(Class(obo:OBI_0000576))
Declaration(Class(obo:OBI_0000626))
Declaration(Class(obo:OBI_0000639))
Declaration(Class(obo:OBI_0000655))
Declaration(Class(obo:OBI_0000659))
Declaration(Class(obo:OBI_0000671))
Declaration(Class(obo:OBI_0000678))
Declaration(Class(obo:OBI_0000681))
Declaration(Class(obo:OBI_0000684))
Declaration(Class(obo:OBI_0000740))
Declaration(Class(obo:OBI_0000747))
Declaration(Class(obo:OBI_0000806))
Declaration(Class(obo:OBI_0000810))
Declaration(Class(obo:OBI_0000811))
Declaration(Class(obo:OBI_0000832))
Declaration(Class(obo:OBI_0000838))
Declaration(Class(obo:OBI_0000852))
Declaration(Class(obo:OBI_0000932))
Declaration(Class(obo:OBI_0000938))
Declaration(Class(obo:OBI_0000953))
Declaration(Class(obo:OBI_0000968))
Declaration(Class(obo:OBI_0000973))
Declaration(Class(obo:OBI_0001000))
Declaration(Class(obo:OBI_0001010))
Declaration(Class(obo:OBI_0001051))
Declaration(Class(obo:OBI_0001158))
Declaration(Class(obo:OBI_0001167))
Declaration(Class(obo:OBI_0001169))
Declaration(Class(obo:OBI_0001225))
Declaration(Class(obo:OBI_0001305))
Declaration(Class(obo:OBI_0001352))
Declaration(Class(obo:OBI_0001364))
Declaration(Class(obo:OBI_0001404))
Declaration(Class(obo:OBI_0001479))
Declaration(Class(obo:OBI_0001573))
Declaration(Class(obo:OBI_0001868))
Declaration(Class(obo:OBI_0001909))
Declaration(Class(obo:OBI_0001912))
Declaration(Class(obo:OBI_0001930))
Declaration(Class(obo:OBI_0001931))
Declaration(Class(obo:OBI_0001933))
Declaration(Class(obo:OBI_0002118))
Declaration(Class(obo:OBI_0002139))
Declaration(Class(obo:OBI_0002141))
Declaration(Class(obo:OBI_0002199))
Declaration(Class(obo:OBI_0100026))
Declaration(Class(obo:OBI_0100051))
Declaration(Class(obo:OBI_0100060))
Declaration(Class(obo:OBI_0200000))
Declaration(Class(obo:OBI_0200166))
Declaration(Class(obo:OBI_0302874))
Declaration(Class(obo:OBI_0302884))
Declaration(Class(obo:OBI_0302887))
Declaration(Class(obo:OBI_0302893))
Declaration(Class(obo:OBI_0302908))
Declaration(Class(obo:OBI_0302914))
Declaration(Class(obo:OBI_0400103))
Declaration(Class(obo:OBI_0400168))
Declaration(Class(obo:OBI_0500000))
Declaration(Class(obo:OBI_0600005))
Declaration(Class(obo:OBI_0600014))
Declaration(Class(obo:OBI_0600020))
Declaration(Class(obo:OBI_0600024))
Declaration(Class(obo:OBI_0600036))
Declaration(Class(obo:OBI_0600047))
Declaration(Class(obo:OBI_0666667))
Declaration(Class(obo:OBI_1110087))
Declaration(Class(obo:OGG_0000000001))
Declaration(Class(obo:OGG_0000000002))
Declaration(Class(obo:OGG_0000000003))
Declaration(Class(obo:OGG_0000000010))
Declaration(Class(obo:OGG_1000000002))
Declaration(Class(obo:OGG_1000002759))
Declaration(Class(obo:OGG_1000009606))
Declaration(Class(obo:OGG_2000000002))
Declaration(Class(obo:OGG_2000002759))
Declaration(Class(obo:OGG_2000009606))
Declaration(Class(obo:OGG_2060009606))
Declaration(Class(obo:OGG_3000000355))
Declaration(Class(obo:OGG_3000005788))
Declaration(Class(obo:OGMS_0000023))
Declaration(Class(obo:OGMS_0000045))
Declaration(Class(obo:OGMS_0000073))
Declaration(Class(obo:OGMS_0000090))
Declaration(Class(obo:OGMS_0000097))
Declaration(Class(obo:OMIABIS_0000000))
Declaration(Class(obo:OMIABIS_0000003))
Declaration(Class(obo:OMIABIS_0000010))
Declaration(Class(obo:OMIABIS_0000011))
Declaration(Class(obo:OMIABIS_0000012))
Declaration(Class(obo:OMIABIS_0000013))
Declaration(Class(obo:OMIABIS_0000036))
Declaration(Class(obo:OMIABIS_0000093))
Declaration(Class(obo:OMIABIS_0001009))
Declaration(Class(obo:OMIABIS_0001026))
Declaration(Class(obo:OMIABIS_0001046))
Declaration(Class(obo:OMIABIS_0001079))
Declaration(Class(obo:OMRSE_00000010))
Declaration(Class(obo:OMRSE_00000012))
Declaration(Class(obo:OMRSE_00000022))
Declaration(Class(obo:OMRSE_00000023))
Declaration(Class(obo:OMRSE_00000024))
Declaration(Class(obo:OMRSE_00000033))
Declaration(Class(obo:OMRSE_00000038))
Declaration(Class(obo:OMRSE_00000100))
Declaration(Class(obo:OMRSE_00000101))
Declaration(Class(obo:OMRSE_00000132))
Declaration(Class(obo:OMRSE_00000133))
Declaration(Class(obo:OMRSE_00000134))
Declaration(Class(obo:OMRSE_00000135))
Declaration(Class(obo:OMRSE_00000138))
Declaration(Class(obo:OMRSE_00000141))
Declaration(Class(obo:PATO_0000011))
Declaration(Class(obo:PATO_0000047))
Declaration(Class(obo:PATO_0000051))
Declaration(Class(obo:PATO_0000117))
Declaration(Class(obo:PATO_0000119))
Declaration(Class(obo:PATO_0000122))
Declaration(Class(obo:PATO_0000125))
Declaration(Class(obo:PATO_0000128))
Declaration(Class(obo:PATO_0000383))
Declaration(Class(obo:PATO_0000384))
Declaration(Class(obo:PATO_0000918))
Declaration(Class(obo:PATO_0001018))
Declaration(Class(obo:PATO_0001237))
Declaration(Class(obo:PATO_0001241))
Declaration(Class(obo:PATO_0001995))
Declaration(Class(obo:PDRO_0000001))
Declaration(Class(obo:PDRO_0000003))
Declaration(Class(obo:PDRO_0000005))
Declaration(Class(obo:PDRO_0000024))
Declaration(Class(obo:PDRO_0000044))
Declaration(Class(obo:PDRO_000006))
Declaration(Class(obo:PDRO_0000103))
Declaration(Class(obo:PDRO_0000106))
Declaration(Class(obo:PDRO_0000123))
Declaration(Class(obo:PDRO_0000127))
Declaration(Class(obo:PDRO_0000128))
Declaration(Class(obo:PDRO_0000129))
Declaration(Class(obo:PDRO_000019))
Declaration(Class(obo:PDRO_0010010))
Declaration(Class(obo:PDRO_0010018))
Declaration(Class(obo:PDRO_0010022))
Declaration(Class(obo:PDRO_0040002))
Declaration(Class(obo:PR_000000001))
Declaration(Class(obo:PR_000001006))
Declaration(Class(obo:PR_000001962))
Declaration(Class(obo:PR_000018263))
Declaration(Class(obo:PR_000025513))
Declaration(Class(obo:PR_000026291))
Declaration(Class(obo:PR_000036198))
Declaration(Class(obo:PR_000036199))
Declaration(Class(obo:PR_000036907))
Declaration(Class(obo:SO_0000001))
Declaration(Class(obo:SO_0000110))
Declaration(Class(obo:SO_0001026))
Declaration(Class(obo:SO_0002054))
Declaration(Class(obo:UBERON_0000105))
Declaration(Class(obo:UBERON_0000178))
Declaration(Class(obo:UBERON_0000463))
Declaration(Class(obo:UBERON_0000465))
Declaration(Class(obo:UBERON_0000477))
Declaration(Class(obo:UBERON_0000479))
Declaration(Class(obo:UBERON_0001013))
Declaration(Class(obo:UBERON_0007221))
Declaration(Class(obo:UO_0000001))
Declaration(Class(obo:UO_0000002))
Declaration(Class(obo:UO_0000003))
Declaration(Class(obo:UO_0000051))
Declaration(Class(obo:UO_0000095))
Declaration(Class(ontologies:TURBO_0000502))
Declaration(Class(ontologies:TURBO_0000503))
Declaration(Class(ontologies:TURBO_0000504))
Declaration(Class(ontologies:TURBO_0000505))
Declaration(Class(ontologies:TURBO_0000506))
Declaration(Class(ontologies:TURBO_0000508))
Declaration(Class(ontologies:TURBO_0000509))
Declaration(Class(ontologies:TURBO_0000510))
Declaration(Class(ontologies:TURBO_0000511))
Declaration(Class(ontologies:TURBO_0000512))
Declaration(Class(ontologies:TURBO_0000513))
Declaration(Class(ontologies:TURBO_0000522))
Declaration(Class(ontologies:TURBO_0000527))
Declaration(Class(ontologies:TURBO_0000530))
Declaration(Class(ontologies:TURBO_0000531))
Declaration(Class(ontologies:TURBO_0000532))
Declaration(Class(ontologies:TURBO_0000533))
Declaration(Class(ontologies:TURBO_0000534))
Declaration(Class(ontologies:TURBO_0000535))
Declaration(Class(ontologies:TURBO_0000543))
Declaration(Class(ontologies:TURBO_0000553))
Declaration(Class(ontologies:TURBO_0000554))
Declaration(Class(ontologies:TURBO_0000555))
Declaration(Class(ontologies:TURBO_0000556))
Declaration(Class(ontologies:TURBO_0000561))
Declaration(Class(ontologies:TURBO_0000562))
Declaration(Class(ontologies:TURBO_0000563))
Declaration(Class(ontologies:TURBO_0000564))
Declaration(Class(ontologies:TURBO_0000565))
Declaration(Class(ontologies:TURBO_0000566))
Declaration(Class(ontologies:TURBO_0000567))
Declaration(Class(ontologies:TURBO_0000568))
Declaration(Class(ontologies:TURBO_0000571))
Declaration(Class(ontologies:TURBO_0000572))
Declaration(Class(ontologies:TURBO_0000902))
Declaration(Class(ontologies:TURBO_0000903))
Declaration(Class(ontologies:TURBO_0000904))
Declaration(Class(ontologies:TURBO_0000905))
Declaration(Class(ontologies:TURBO_0000906))
Declaration(Class(ontologies:TURBO_0000907))
Declaration(Class(ontologies:TURBO_0000908))
Declaration(Class(ontologies:TURBO_0000909))
Declaration(Class(ontologies:TURBO_0000910))
Declaration(Class(ontologies:TURBO_0000911))
Declaration(Class(ontologies:TURBO_0000912))
Declaration(Class(ontologies:TURBO_0000913))
Declaration(Class(ontologies:TURBO_0000927))
Declaration(Class(ontologies:TURBO_0000931))
Declaration(Class(ontologies:TURBO_0000932))
Declaration(Class(ontologies:TURBO_0000933))
Declaration(Class(ontologies:TURBO_0000934))
Declaration(Class(ontologies:TURBO_0000935))
Declaration(Class(ontologies:TURBO_0000943))
Declaration(Class(ontologies:TURBO_0000961))
Declaration(Class(ontologies:TURBO_0001500))
Declaration(Class(ontologies:TURBO_0001501))
Declaration(Class(ontologies:TURBO_0001511))
Declaration(Class(ontologies:TURBO_0001520))
Declaration(Class(ontologies:TURBO_0001521))
Declaration(Class(ontologies:TURBO_0001531))
Declaration(Class(ontologies:TURBO_0001541))
Declaration(Class(ontologies:TURBO_0001542))
Declaration(Class(ontologies:TURBO_0001900))
Declaration(Class(ontologies:TURBO_0001901))
Declaration(Class(ontologies:TURBO_0001902))
Declaration(Class(ontologies:TURBO_0001903))
Declaration(Class(ontologies:TURBO_0001904))
Declaration(Class(ontologies:TURBO_0001905))
Declaration(Class(ontologies:TURBO_0001906))
Declaration(Class(ontologies:TURBO_0001907))
Declaration(Class(ontologies:TURBO_0001908))
Declaration(Class(ontologies:TURBO_0002500))
Declaration(Class(ontologies:TURBO_0002501))
Declaration(Class(ns3:EFO_0001799))
Declaration(Class(ns3:EFO_0004340))
Declaration(Class(ns3:EFO_0004950))
Declaration(Class(oboInOwl:DbXref))
Declaration(Class(oboInOwl:ObsoleteClass))
Declaration(Class(owl:Nothing))
Declaration(Class(owl:Thing))
Declaration(ObjectProperty(faldo:begin))
Declaration(ObjectProperty(faldo:end))
Declaration(ObjectProperty(faldo:location))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000052))
Declaration(ObjectProperty(obo:BFO_0000053))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000058))
Declaration(ObjectProperty(obo:BFO_0000059))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BFO_0000070))
Declaration(ObjectProperty(obo:BFO_0000083))
Declaration(ObjectProperty(obo:BFO_0000108))
Declaration(ObjectProperty(obo:BFO_0000117))
Declaration(ObjectProperty(obo:BFO_0000118))
Declaration(ObjectProperty(obo:BFO_0000123))
Declaration(ObjectProperty(obo:BFO_0000125))
Declaration(ObjectProperty(obo:BFO_0000126))
Declaration(ObjectProperty(obo:BFO_0000130))
Declaration(ObjectProperty(obo:BFO_0000132))
Declaration(ObjectProperty(obo:BFO_0000138))
Declaration(ObjectProperty(obo:BFO_0000139))
Declaration(ObjectProperty(obo:BFO_0000151))
Declaration(ObjectProperty(obo:BFO_0000152))
Declaration(ObjectProperty(obo:BFO_0000153))
Declaration(ObjectProperty(obo:BFO_0000154))
Declaration(ObjectProperty(obo:BFO_0000155))
Declaration(ObjectProperty(obo:BFO_0000156))
Declaration(ObjectProperty(obo:BFO_0000157))
Declaration(ObjectProperty(obo:BFO_0000158))
Declaration(ObjectProperty(obo:BFO_0000162))
Declaration(ObjectProperty(obo:BFO_0000168))
Declaration(ObjectProperty(obo:BFO_0000169))
Declaration(ObjectProperty(obo:BFO_0000176))
Declaration(ObjectProperty(obo:BFO_0000178))
Declaration(ObjectProperty(obo:BFO_0000186))
Declaration(ObjectProperty(obo:BFO_0000187))
Declaration(ObjectProperty(obo:GENO_0000239))
Declaration(ObjectProperty(obo:GENO_0000251))
Declaration(ObjectProperty(obo:GENO_0000683))
Declaration(ObjectProperty(obo:GENO_0000708))
Declaration(ObjectProperty(obo:IAO_0000039))
Declaration(ObjectProperty(obo:IAO_0000136))
Declaration(ObjectProperty(obo:IAO_0000142))
Declaration(ObjectProperty(obo:IAO_0000219))
Declaration(ObjectProperty(obo:IAO_0000221))
Declaration(ObjectProperty(obo:IAO_0000413))
Declaration(ObjectProperty(obo:IAO_0000417))
Declaration(ObjectProperty(obo:IAO_0000581))
Declaration(ObjectProperty(obo:IAO_0000583))
Declaration(ObjectProperty(obo:IAO_0020012))
Declaration(ObjectProperty(obo:IAO_0020018))
Declaration(ObjectProperty(obo:ICO_0000130))
Declaration(ObjectProperty(obo:ICO_0000132))
Declaration(ObjectProperty(obo:OBI_0000124))
Declaration(ObjectProperty(obo:OBI_0000293))
Declaration(ObjectProperty(obo:OBI_0000295))
Declaration(ObjectProperty(obo:OBI_0000299))
Declaration(ObjectProperty(obo:OBI_0000312))
Declaration(ObjectProperty(obo:OBI_0000417))
Declaration(ObjectProperty(obo:OBI_0000643))
Declaration(ObjectProperty(obo:OBI_0000833))
Declaration(ObjectProperty(obo:OBI_0000846))
Declaration(ObjectProperty(obo:OBI_0001688))
Declaration(ObjectProperty(obo:OBI_0001927))
Declaration(ObjectProperty(obo:OBI_0001938))
Declaration(ObjectProperty(obo:OGG_0000000014))
Declaration(ObjectProperty(obo:OGG_0000000016))
Declaration(ObjectProperty(obo:OMIABIS_0000008))
Declaration(ObjectProperty(obo:OMIABIS_0000009))
Declaration(ObjectProperty(obo:OMIABIS_0000048))
Declaration(ObjectProperty(obo:OMRSE_00000020))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:RO_0000059))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0001000))
Declaration(ObjectProperty(obo:RO_0001001))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002162))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002223))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002234))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(ontologies:TURBO_0000301))
Declaration(ObjectProperty(ontologies:TURBO_0000302))
Declaration(ObjectProperty(ontologies:TURBO_0000303))
Declaration(ObjectProperty(ro:has_proper_part))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(DataProperty(Thesaurus:code))
Declaration(DataProperty(obo:GENO_0000896))
Declaration(DataProperty(obo:IAO_0000004))
Declaration(DataProperty(obo:OBI_0001937))
Declaration(DataProperty(obo:OBI_0002135))
Declaration(DataProperty(ontologies:TURBO_0000601))
Declaration(DataProperty(ontologies:TURBO_0000602))
Declaration(DataProperty(ontologies:TURBO_0000603))
Declaration(DataProperty(ontologies:TURBO_0000604))
Declaration(DataProperty(ontologies:TURBO_0000605))
Declaration(DataProperty(ontologies:TURBO_0000606))
Declaration(DataProperty(ontologies:TURBO_0000607))
Declaration(DataProperty(ontologies:TURBO_0000608))
Declaration(DataProperty(ontologies:TURBO_0000609))
Declaration(DataProperty(ontologies:TURBO_0000610))
Declaration(DataProperty(ontologies:TURBO_0000621))
Declaration(DataProperty(ontologies:TURBO_0000623))
Declaration(DataProperty(ontologies:TURBO_0000624))
Declaration(DataProperty(ontologies:TURBO_0000625))
Declaration(DataProperty(ontologies:TURBO_0000626))
Declaration(DataProperty(ontologies:TURBO_0000627))
Declaration(DataProperty(ontologies:TURBO_0000628))
Declaration(DataProperty(ontologies:TURBO_0000629))
Declaration(DataProperty(ontologies:TURBO_0000630))
Declaration(DataProperty(ontologies:TURBO_0000635))
Declaration(DataProperty(ontologies:TURBO_0000641))
Declaration(DataProperty(ontologies:TURBO_0000643))
Declaration(DataProperty(ontologies:TURBO_0000644))
Declaration(DataProperty(ontologies:TURBO_0000645))
Declaration(DataProperty(ontologies:TURBO_0000646))
Declaration(DataProperty(ontologies:TURBO_0000647))
Declaration(DataProperty(ontologies:TURBO_0000648))
Declaration(DataProperty(ontologies:TURBO_0000649))
Declaration(DataProperty(ontologies:TURBO_0000650))
Declaration(DataProperty(ontologies:TURBO_0000655))
Declaration(DataProperty(ontologies:TURBO_0000661))
Declaration(DataProperty(ontologies:TURBO_0000662))
Declaration(DataProperty(ontologies:TURBO_0000663))
Declaration(DataProperty(ontologies:TURBO_0000670))
Declaration(DataProperty(ontologies:TURBO_0001600))
Declaration(DataProperty(ontologies:TURBO_0001601))
Declaration(DataProperty(ontologies:TURBO_0001603))
Declaration(DataProperty(ontologies:TURBO_0001608))
Declaration(DataProperty(ontologies:TURBO_0001609))
Declaration(DataProperty(ontologies:TURBO_0001610))
Declaration(DataProperty(ontologies:TURBO_0001641))
Declaration(DataProperty(ontologies:TURBO_0001642))
Declaration(DataProperty(ontologies:TURBO_0002603))
Declaration(DataProperty(ontologies:TURBO_0002608))
Declaration(DataProperty(ontologies:TURBO_0002609))
Declaration(DataProperty(ontologies:TURBO_0002610))
Declaration(DataProperty(ontologies:TURBO_0003600))
Declaration(DataProperty(ontologies:TURBO_0003603))
Declaration(DataProperty(ontologies:TURBO_0003608))
Declaration(DataProperty(ontologies:TURBO_0003609))
Declaration(DataProperty(ontologies:TURBO_0003610))
Declaration(DataProperty(ontologies:TURBO_0004600))
Declaration(DataProperty(ontologies:TURBO_0004601))
Declaration(DataProperty(ontologies:TURBO_0004602))
Declaration(DataProperty(ontologies:TURBO_0004603))
Declaration(DataProperty(ontologies:TURBO_0005600))
Declaration(DataProperty(ontologies:TURBO_0005601))
Declaration(DataProperty(ontologies:TURBO_0005611))
Declaration(DataProperty(ontologies:TURBO_0005612))
Declaration(DataProperty(ontologies:TURBO_0006510))
Declaration(DataProperty(ontologies:TURBO_0006511))
Declaration(DataProperty(ontologies:TURBO_0006512))
Declaration(DataProperty(ontologies:TURBO_0007600))
Declaration(DataProperty(ontologies:TURBO_0007601))
Declaration(DataProperty(ontologies:TURBO_0007602))
Declaration(DataProperty(ontologies:TURBO_0007603))
Declaration(DataProperty(ontologies:TURBO_0007604))
Declaration(DataProperty(ontologies:TURBO_0007605))
Declaration(DataProperty(ontologies:TURBO_0007606))
Declaration(DataProperty(ontologies:TURBO_0007607))
Declaration(DataProperty(ontologies:TURBO_0007608))
Declaration(DataProperty(owl:topDataProperty))
Declaration(NamedIndividual(Thesaurus:C71890))
Declaration(NamedIndividual(Thesaurus:C71892))
Declaration(NamedIndividual(obo:IAO_0000002))
Declaration(NamedIndividual(obo:IAO_0000103))
Declaration(NamedIndividual(obo:IAO_0000120))
Declaration(NamedIndividual(obo:IAO_0000121))
Declaration(NamedIndividual(obo:IAO_0000122))
Declaration(NamedIndividual(obo:IAO_0000123))
Declaration(NamedIndividual(obo:IAO_0000124))
Declaration(NamedIndividual(obo:IAO_0000125))
Declaration(NamedIndividual(obo:IAO_0000226))
Declaration(NamedIndividual(obo:IAO_0000227))
Declaration(NamedIndividual(obo:IAO_0000228))
Declaration(NamedIndividual(obo:IAO_0000229))
Declaration(NamedIndividual(obo:IAO_0000410))
Declaration(NamedIndividual(obo:IAO_0000420))
Declaration(NamedIndividual(obo:IAO_0000421))
Declaration(NamedIndividual(obo:IAO_0000423))
Declaration(NamedIndividual(obo:IAO_0000428))
Declaration(NamedIndividual(obo:RO_0001901))
Declaration(NamedIndividual(obo:iao.owl))
Declaration(NamedIndividual(obo:obi.owl))
Declaration(NamedIndividual(ontologies:TURBO_0000401))
Declaration(NamedIndividual(ontologies:TURBO_0000402))
Declaration(NamedIndividual(ontologies:TURBO_0000403))
Declaration(NamedIndividual(ontologies:TURBO_0000410))
Declaration(NamedIndividual(ontologies:TURBO_0000411))
Declaration(NamedIndividual(ontologies:TURBO_0000412))
Declaration(NamedIndividual(ontologies:TURBO_0000413))
Declaration(NamedIndividual(ontologies:TURBO_0000420))
Declaration(NamedIndividual(ontologies:TURBO_0000421))
Declaration(NamedIndividual(ontologies:TURBO_0000422))
Declaration(NamedIndividual(ontologies:TURBO_0000423))
Declaration(NamedIndividual(ontologies:TURBO_0000430))
Declaration(NamedIndividual(ontologies:TURBO_0000440))
Declaration(NamedIndividual(ontologies:TURBO_0000451))
Declaration(NamedIndividual(ontologies:TURBO_0000580))
Declaration(NamedIndividual(ontologies:TURBO_0000581))
Declaration(NamedIndividual(ontologies:TURBO_0000582))
Declaration(NamedIndividual(ontologies:TURBO_0000590))
Declaration(NamedIndividual(ontologies:TURBO_0000591))
Declaration(NamedIndividual(ontologies:TURBO_0000592))
Declaration(AnnotationProperty(protege:defaultLanguage))
Declaration(AnnotationProperty(obo:BFO_0000179))
Declaration(AnnotationProperty(obo:BFO_0000180))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000231))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000233))
Declaration(AnnotationProperty(obo:IAO_0000234))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:IAO_0000601))
Declaration(AnnotationProperty(obo:IAO_0000602))
Declaration(AnnotationProperty(obo:IAO_0100001))
Declaration(AnnotationProperty(obo:ICO_0000091))
Declaration(AnnotationProperty(obo:ICO_0000092))
Declaration(AnnotationProperty(obo:ICO_0000093))
Declaration(AnnotationProperty(obo:OBI_0001847))
Declaration(AnnotationProperty(obo:OBI_9991118))
Declaration(AnnotationProperty(obo:OGG_0000000004))
Declaration(AnnotationProperty(obo:OGG_0000000005))
Declaration(AnnotationProperty(obo:OGG_0000000006))
Declaration(AnnotationProperty(obo:OGG_0000000007))
Declaration(AnnotationProperty(obo:OGG_0000000008))
Declaration(AnnotationProperty(obo:OGG_0000000009))
Declaration(AnnotationProperty(obo:OGG_0000000015))
Declaration(AnnotationProperty(obo:OGG_0000000017))
Declaration(AnnotationProperty(obo:OGG_0000000018))
Declaration(AnnotationProperty(obo:OGG_0000000019))
Declaration(AnnotationProperty(obo:OGG_0000000029))
Declaration(AnnotationProperty(obo:OGG_0000000030))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002422))
Declaration(AnnotationProperty(obo:created_by))
Declaration(AnnotationProperty(obo:hasAlternativeId))
Declaration(AnnotationProperty(obo:hasDbXref))
Declaration(AnnotationProperty(obo:hasExactSynonym))
Declaration(AnnotationProperty(obo:hasOBONamespace))
Declaration(AnnotationProperty(obo:hasRelatedSynonym))
Declaration(AnnotationProperty(ncbitaxon:has_rank))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:date))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:format))
Declaration(AnnotationProperty(dc:license))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:subject))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(ontologies:TURBO_0000701))
Declaration(AnnotationProperty(ontologies:TURBO_0000702))
Declaration(AnnotationProperty(ontologies:TURBO_0001700))
Declaration(AnnotationProperty(ontologies:TURBO_0006500))
Declaration(AnnotationProperty(ontologies:TURBO_0006501))
Declaration(AnnotationProperty(ontologies:TURBO_0006600))
Declaration(AnnotationProperty(ontologies:TURBO_0006601))
Declaration(AnnotationProperty(ontologies:TURBO_0006602))
Declaration(AnnotationProperty(ns3:ICD9_definition_citation))
Declaration(AnnotationProperty(ns3:MSH_definition_citation))
Declaration(AnnotationProperty(ns3:NCI_Thesaurus_definition_citation))
Declaration(AnnotationProperty(ns3:SNOMEDCT_definition_citation))
Declaration(AnnotationProperty(ns3:alternative_term))
Declaration(AnnotationProperty(ns3:definition_citation))
Declaration(AnnotationProperty(ns3:gwas_trait))
Declaration(AnnotationProperty(oboInOwl:auto-generated-by))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:date))
Declaration(AnnotationProperty(oboInOwl:default-namespace))
Declaration(AnnotationProperty(oboInOwl:hasAlternativeId))
Declaration(AnnotationProperty(oboInOwl:hasBroadSynonym))
Declaration(AnnotationProperty(oboInOwl:hasDbXref))
Declaration(AnnotationProperty(oboInOwl:hasExactSynonym))
Declaration(AnnotationProperty(oboInOwl:hasNarrowSynonym))
Declaration(AnnotationProperty(oboInOwl:hasOBOFormatVersion))
Declaration(AnnotationProperty(oboInOwl:hasOBONamespace))
Declaration(AnnotationProperty(oboInOwl:hasRelatedSynonym))
Declaration(AnnotationProperty(oboInOwl:hasSynonym))
Declaration(AnnotationProperty(oboInOwl:hasURI))
Declaration(AnnotationProperty(oboInOwl:id))
Declaration(AnnotationProperty(oboInOwl:is_metadata_tag))
Declaration(AnnotationProperty(oboInOwl:saved-by))
Declaration(AnnotationProperty(oboInOwl:shorthand))
Declaration(AnnotationProperty(rdf:type))
Declaration(AnnotationProperty(rdfs:comment))
Declaration(AnnotationProperty(rdfs:isDefinedBy))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(rdfs:seeAlso))
Declaration(AnnotationProperty(owl:deprecated))
Declaration(AnnotationProperty(owl:qualifiedCardinality))
Declaration(AnnotationProperty(owl:versionInfo))
Declaration(AnnotationProperty(foaf:mbox))
Declaration(AnnotationProperty(foaf:page))
Declaration(Datatype(rdf:PlainLiteral))
Declaration(Datatype(rdfs:Literal))
Declaration(Datatype(xsd:anyURI))
Declaration(Datatype(xsd:boolean))
Declaration(Datatype(xsd:date))
Declaration(Datatype(xsd:dateTime))
Declaration(Datatype(xsd:datetime))
Declaration(Datatype(xsd:float))
Declaration(Datatype(xsd:nonNegativeInteger))
Declaration(Datatype(xsd:string))
Declaration(Datatype(owl:real))
############################
#   Annotation Properties
############################

# Annotation Property: obo:BFO_0000179 (BFO OWL specification label)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000179 "BFO OWL specification label"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000179 "Relates an entity in the ontology to the name of the variable that is used to represent it in the code that generates the BFO OWL file from the lispy specification."@en)
AnnotationAssertion(obo:IAO_0000232 obo:BFO_0000179 "Really of interest to developers only"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000179 "BFO OWL specification label")
AnnotationAssertion(rdfs:label obo:BFO_0000179 "BFO OWL specification label"@en)
SubAnnotationPropertyOf(obo:BFO_0000179 rdfs:label)

# Annotation Property: obo:BFO_0000180 (BFO CLIF specification label)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000180 "BFO CLIF specification label"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000180 "Relates an entity in the ontology to the term that is used to represent it in the the CLIF specification of BFO2"@en)
AnnotationAssertion(obo:IAO_0000119 obo:BFO_0000180 "Person:Alan Ruttenberg")
AnnotationAssertion(obo:IAO_0000232 obo:BFO_0000180 "Really of interest to developers only"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000180 "BFO CLIF specification label")
AnnotationAssertion(rdfs:label obo:BFO_0000180 "BFO CLIF specification label"@en)
SubAnnotationPropertyOf(obo:BFO_0000180 rdfs:label)

# Annotation Property: obo:IAO_0000111 (editor preferred label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred label")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred label"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000111 "editor preferred term~editor preferred label")
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000111 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000111 "The concise, meaningful, and human-friendly name for a class or property preferred by the ontology developers. (US-English)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000111 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000111 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000111 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred label")
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred label"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term")
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term~editor preferred label")

# Annotation Property: obo:IAO_0000112 (example of usage)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000112 "example"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000112 "example of usage"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000112 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000112 "A phrase describing how a class name should be used. May also include other kinds of examples that facilitate immediate understanding of a class semantics, such as widely known prototypical subclasses or instances of the class. Although essential for high level terms, examples for low level terms (e.g., Affymetrix HU133 array) are not"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000112 "A phrase describing how a term should be used and/or a citation to a work which uses it. May also include other kinds of examples that facilitate immediate understanding, such as widely know prototypes or instances of a class, or cases where a relation is said to hold."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000112 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000112 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000112 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage")
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)

# Annotation Property: obo:IAO_0000114 (has curation status)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000114 "has curation status"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000114 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000114 "OBI_0000281"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status")
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status"@en)

# Annotation Property: obo:IAO_0000115 (textual definition)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "definition"^^xsd:string)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "textual definition")
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000115 "textual definition"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "English language definitions of what NCI means by the concept. These are limited to 1024 characters. They may also include information about the definition's source and attribution in a form that can easily be interpreted by software.")
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official OBI definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000115 "The official definition, explaining the meaning of a class or property. Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000115 "2012-04-05: 
Barry Smith

The official OBI definition, explaining the meaning of a class or property: 'Shall be Aristotelian, formalized and normalized. Can be augmented with colloquial definitions'  is terrible.

Can you fix to something like:

A statement of necessary and sufficient conditions explaining the meaning of an expression referring to a class or property.

Alan Ruttenberg

Your proposed definition is a reasonable candidate, except that it is very common that necessary and sufficient conditions are not given. Mostly they are necessary, occasionally they are necessary and sufficient or just sufficient. Often they use terms that are not themselves defined and so they effectively can't be evaluated by those criteria. 

On the specifics of the proposed definition:

We don't have definitions of 'meaning' or 'expression' or 'property'. For 'reference' in the intended sense I think we use the term 'denotation'. For 'expression', I think we you mean symbol, or identifier. For 'meaning' it differs for class and property. For class we want documentation that let's the intended reader determine whether an entity is instance of the class, or not. For property we want documentation that let's the intended reader determine, given a pair of potential relata, whether the assertion that the relation holds is true. The 'intended reader' part suggests that we also specify who, we expect, would be able to understand the definition, and also generalizes over human and computer reader to include textual and logical definition. 

Personally, I am more comfortable weakening definition to documentation, with instructions as to what is desirable. 

We also have the outstanding issue of how to aim different definitions to different audiences. A clinical audience reading chebi wants a different sort of definition documentation/definition from a chemistry trained audience, and similarly there is a need for a definition that is adequate for an ontologist to work with.  "@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000115 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000115 "DEFINITION")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000115 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000115 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition")
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "textual definition")
AnnotationAssertion(rdfs:label obo:IAO_0000115 "textual definition"^^xsd:string)

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000116 "An administrative note intended for its editor. It may not be included in the publication version of the ontology, so it should contain nothing necessary for end users to understand the ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000116 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000116 "GROUP:OBI:<http://purl.obfoundry.org/obo/obi>"@en)
AnnotationAssertion(oboInOwl:hasDbXref obo:IAO_0000116 "IAO:0000116"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:IAO_0000116 "uberon"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:IAO_0000116 "editor_note"^^xsd:string)
AnnotationAssertion(oboInOwl:is_metadata_tag obo:IAO_0000116 "1"^^xsd:integer)
AnnotationAssertion(oboInOwl:is_metadata_tag obo:IAO_0000116 "true"^^xsd:boolean)
AnnotationAssertion(oboInOwl:shorthand obo:IAO_0000116 "editor_note"^^xsd:string)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000116 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note")
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"^^xsd:string)

# Annotation Property: obo:IAO_0000117 (term editor)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000117 "definition editor"@en)
AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000117 "term editor"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000117 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000117 "Name of editor entering the definition in the file. The definition editor is a point of contact for information regarding the term. The definition editor may be, but is not always, the author of the definition, which may have been worked upon by several people"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000117 "Name of editor entering the term in the file. The term editor is a point of contact for information regarding the term. The term editor may be, but is not always, the author of the definition, which may have been worked upon by several people"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000117 "20110707, MC: label update to term editor and definition modified accordingly. See http://code.google.com/p/information-artifact-ontology/issues/detail?id=115."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000117 "20110707, MC: label update to term editor and definition modified accordingly. See https://github.com/information-artifact-ontology/IAO/issues/115."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000117 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000117 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000117 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "definition editor")
AnnotationAssertion(rdfs:label obo:IAO_0000117 "definition editor"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "definition editor"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor")
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)

# Annotation Property: obo:IAO_0000118 (alternative term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000118 "alternative term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000118 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000118 "An alternative name for a class or property which means the same thing as the preferred name (semantically equivalent)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000118 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000118 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000118 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term")
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)

# Annotation Property: obo:IAO_0000119 (definition source)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000119 "definition source"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000119 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000119 "formal citation, e.g. identifier in external database to indicate / attribute source(s) for the definition. Free text indicate / attribute source(s) for the definition. EXAMPLE: Author Name, URI, MeSH Term C04, PUBMED ID, Wiki uri on 31.01.2007"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000119 "PERSON:Daniel Schober"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "Discussion on obo-discuss mailing-list, see http://bit.ly/hgm99w"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000119 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000119 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source")
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"^^xsd:string)

# Annotation Property: obo:IAO_0000231 (has obsolescence reason)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000231 "has obsolescence reason"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000231 "Relates an annotation property to an obsolescence reason. The values of obsolescence reasons come from a list of predefined terms, instances of the class obsolescence reason specification."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000231 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000231 "has obsolescence reason"@en)

# Annotation Property: obo:IAO_0000232 (curator note)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000232 "curator note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000232 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000232 "An administrative note of use for a curator but of no use for a user"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000232 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(oboInOwl:hasDbXref obo:IAO_0000232 "IAO:0000232"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:IAO_0000232 "uberon"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:IAO_0000232 "curator_notes"^^xsd:string)
AnnotationAssertion(oboInOwl:is_metadata_tag obo:IAO_0000232 "1"^^xsd:integer)
AnnotationAssertion(oboInOwl:shorthand obo:IAO_0000232 "curator_notes"^^xsd:string)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000232 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note")
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator notes"^^xsd:string)

# Annotation Property: obo:IAO_0000233 (term tracker item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000233 "term tracker item")
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000233 "the URI for an OBI Terms ticket at sourceforge, such as https://sourceforge.net/p/obi/obi-terms/772/")
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000233 "An IRI or similar locator for a request or discussion of an ontology term.")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000233 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000233 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg")
AnnotationAssertion(rdfs:comment obo:IAO_0000233 "The 'tracker item' can associate a tracker with a specific ontology term.")
AnnotationAssertion(rdfs:label obo:IAO_0000233 "term tracker item"@en)

# Annotation Property: obo:IAO_0000234 (ontology term requester)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000234 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000234 "The name of the person, project, or organization that motivated inclusion of an ontology term by requesting its addition.")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000234 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000234 "Person: Jie Zheng, Chris Stoeckert, Alan Ruttenberg")
AnnotationAssertion(rdfs:comment obo:IAO_0000234 "The 'term requester' can credit the person, organization or project who request the ontology term.")
AnnotationAssertion(rdfs:label obo:IAO_0000234 "ontology term requester"@en)

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000412 "imported from"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000412 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000412 "For external terms/classes, the ontology from which the term was imported"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000412 "PERSON:Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000412 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000412 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from")
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)

# Annotation Property: obo:IAO_0000600 (elucidation)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000600 "elucidation"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000600 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000600 "Person:Barry Smith"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000600 "Primitive terms in a highest-level ontology such as BFO are terms which are so basic to our understanding of reality that there is no way of defining them in a non-circular fashion. For these, therefore, we can provide only elucidations, supplemented by examples and by axioms"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000600 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000600 "elucidation")
AnnotationAssertion(rdfs:label obo:IAO_0000600 "elucidation"@en)

# Annotation Property: obo:IAO_0000601 (has associated axiom(nl))

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000601 "has associated axiom(nl)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000601 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000601 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000601 "An axiom associated with a term expressed using natural language"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000601 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000601 "has associated axiom(nl)")
AnnotationAssertion(rdfs:label obo:IAO_0000601 "has associated axiom(nl)"@en)

# Annotation Property: obo:IAO_0000602 (has associated axiom(fol))

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000602 "has associated axiom(fol)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000602 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000602 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000600 obo:IAO_0000602 "An axiom expressed in first order logic using CLIF syntax"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000602 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000602 "has associated axiom(fol)")
AnnotationAssertion(rdfs:label obo:IAO_0000602 "has associated axiom(fol)"@en)

# Annotation Property: obo:IAO_0100001 (term replaced by)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0100001 "term replaced by"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0100001 "Add as annotation triples in the granting ontology"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0100001 "Use on obsolete terms, relating the term to another term that can be used as a substitute"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0100001 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)

# Annotation Property: obo:ICO_0000091 (term_mapping_to_UMLS)

AnnotationAssertion(rdfs:label obo:ICO_0000091 "term_mapping_to_UMLS"@en)
SubAnnotationPropertyOf(obo:ICO_0000091 rdfs:seeAlso)

# Annotation Property: obo:ICO_0000092 (term_mapping_to_NCIT)

AnnotationAssertion(rdfs:label obo:ICO_0000092 "term_mapping_to_NCIT"@en)
SubAnnotationPropertyOf(obo:ICO_0000092 rdfs:seeAlso)

# Annotation Property: obo:ICO_0000093 (term_mapping_to_HL7v3)

AnnotationAssertion(rdfs:label obo:ICO_0000093 "term_mapping_to_HL7v3"@en)
SubAnnotationPropertyOf(obo:ICO_0000093 rdfs:seeAlso)

# Annotation Property: obo:OBI_0001847 (ISA alternative term)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001847 "ISA alternative term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001847 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001847 "An alternative term used by the ISA tools project (http://isa-tools.org).")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001847 "Requested by Alejandra Gonzalez-Beltran
https://sourceforge.net/tracker/?func=detail&aid=3603413&group_id=177891&atid=886178")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001847 "Person: Alejandra Gonzalez-Beltran")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001847 "Person: Philippe Rocca-Serra")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001847 "ISA tools project (http://isa-tools.org)")
AnnotationAssertion(rdfs:label obo:OBI_0001847 "ISA alternative term"@en)
SubAnnotationPropertyOf(obo:OBI_0001847 obo:IAO_0000118)

# Annotation Property: obo:OBI_9991118 (IEDB alternative term)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_9991118 "IEDB alternative term"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_9991118 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_9991118 "An alternative term used by the IEDB."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_9991118 "PERSON:Randi Vita, Jason Greenbaum, Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_9991118 "IEDB"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_9991118 "IEDB alternative term"^^xsd:string)
SubAnnotationPropertyOf(obo:OBI_9991118 obo:IAO_0000118)

# Annotation Property: obo:OGG_0000000004 (symbol from nomenclature authority)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000004 "the symbol assigned by the nomenclature authority")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000004 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000004 "symbol from nomenclature authority"@en)

# Annotation Property: obo:OGG_0000000005 (full name from nomenclature authority)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000005 "the full name assigned by the nomenclature authority")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000005 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000005 "full name from nomenclature authority"@en)

# Annotation Property: obo:OGG_0000000006 (NCBI GeneID)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000006 "A GeneID in the NCBI Gene database ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000006 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000006 "NCBI GeneID"@en)

# Annotation Property: obo:OGG_0000000007 (NCBI LocusTag)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000007 "the NCBI LocusTag name of a gene ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000007 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000007 "NCBI LocusTag"@en)

# Annotation Property: obo:OGG_0000000008 (gene map location)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000008 "the map location of a gene")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000008 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000008 "gene map location"@en)

# Annotation Property: obo:OGG_0000000009 (modification date)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000009 "a date of content modification")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000009 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000009 "modification date"@en)

# Annotation Property: obo:OGG_0000000015 (organism NCBITaxon ID)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000015 "The NCBITaxon ontology ID of an organism.")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000015 "Oliver He, Yue Liu")
AnnotationAssertion(rdfs:label obo:OGG_0000000015 "organism NCBITaxon ID"@en)

# Annotation Property: obo:OGG_0000000017 (chromosome ID of gene)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000017 "A chromosome ID where a gene is located.")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000017 "Oliver He")
AnnotationAssertion(rdfs:label obo:OGG_0000000017 "chromosome ID of gene"@en)

# Annotation Property: obo:OGG_0000000018 (type of gene)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000018 "an annotation property that specifies the type of a gene")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000018 "Oliver He")
AnnotationAssertion(rdfs:label obo:OGG_0000000018 "type of gene"@en)

# Annotation Property: obo:OGG_0000000019 (nomenclature status)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000019 "an annotation property that specifies a nomenclature status")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000019 "Oliver He")
AnnotationAssertion(rdfs:label obo:OGG_0000000019 "nomenclature status"@en)

# Annotation Property: obo:OGG_0000000029 (has GO association)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000029 "an annotation property that shows the GO information associated with a specific gene. ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000029 "Yongqun He")
AnnotationAssertion(rdfs:comment obo:OGG_0000000029 "YH: use the convention: 
GO_ID (EC: xx; Qualifier: xx; PMID: xxxxx;)
where GO_ID is a GO ID, EC is the Evidence Code, Qualifier is a specific association type, and PMID is a PubMed ID of a paper that supports the gene-GO association. ")
AnnotationAssertion(rdfs:label obo:OGG_0000000029 "has GO association"@en)
AnnotationPropertyDomain(obo:OGG_0000000029 obo:OGG_0000000002)

# Annotation Property: obo:OGG_0000000030 (has PubMed association)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000030 "An annotation property that represents a gene's association with PubMed publication(s). ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000030 "Yongqun He")
AnnotationAssertion(rdfs:comment obo:OGG_0000000030 "YH: use the format: 
PMID: pmid1, pmid2, ...
where pmid1 and pmid2 are specfic PubMed IDs (PMIDs). ")
AnnotationAssertion(rdfs:label obo:OGG_0000000030 "has PubMed association"@en)

# Annotation Property: obo:RO_0001900 (temporal interpretation)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001900 "temporal interpretation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001900 "An assertion that holds between an OWL Object Property and a temporal interpretation that elucidates how OWL Class Axioms that use this property are to be interpreted in a temporal context.")
AnnotationAssertion(rdfs:label obo:RO_0001900 "temporal interpretation"@en)
AnnotationAssertion(foaf:page obo:RO_0001900 "https://code.google.com/p/obo-relations/wiki/ROAndTime"^^xsd:anyURI)
AnnotationAssertion(foaf:page obo:RO_0001900 "https://github.com/oborel/obo-relations/wiki/ROAndTime"^^xsd:anyURI)
SubAnnotationPropertyOf(obo:RO_0001900 obo:RO_0002422)

# Annotation Property: obo:RO_0002422 (logical macro assertion on an object property)

AnnotationAssertion(rdfs:label obo:RO_0002422 "logical macro assertion on an object property")

# Annotation Property: ncbitaxon:has_rank (has_rank)

AnnotationAssertion(obo:IAO_0000115 ncbitaxon:has_rank "A metadata relation between a class and its taxonomic rank (eg species, family)"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace ncbitaxon:has_rank "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace ncbitaxon:has_rank "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(rdfs:label ncbitaxon:has_rank "has_rank")
AnnotationAssertion(rdfs:label ncbitaxon:has_rank "has_rank"^^xsd:string)

# Annotation Property: dc:contributor (Contributor)

AnnotationAssertion(dc:description dc:contributor "Examples of a Contributor include a person, an 
         organisation, or a service.  Typically, the name of a 
         Contributor should be used to indicate the entity."@en-us)
AnnotationAssertion(rdfs:comment dc:contributor "An entity responsible for making contributions to the
         content of the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:contributor <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:contributor "Contributor")
AnnotationAssertion(rdfs:label dc:contributor "Contributor"@en-us)

# Annotation Property: dc:creator (creator)

AnnotationAssertion(dc:description dc:creator "Examples of a Creator include a person, an organisation,
         or a service.  Typically, the name of a Creator should 
         be used to indicate the entity."@en-us)
AnnotationAssertion(rdfs:comment dc:creator "An entity primarily responsible for making the content 
         of the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:creator <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:creator "Creator")
AnnotationAssertion(rdfs:label dc:creator "Creator"@en-us)
AnnotationAssertion(rdfs:label dc:creator "creator")

# Annotation Property: dc:date (Date)

AnnotationAssertion(dc:description dc:date "Typically, Date will be associated with the creation or
         availability of the resource.  Recommended best practice
         for encoding the date value is defined in a profile of
         ISO 8601 [W3CDTF] and follows the YYYY-MM-DD format."@en-us)
AnnotationAssertion(rdfs:comment dc:date "A date associated with an event in the life cycle of the
         resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:date <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:date "Date")
AnnotationAssertion(rdfs:label dc:date "Date"@en-us)

# Annotation Property: dc:description (Description)

AnnotationAssertion(dc:description dc:description "Description may include but is not limited to: an abstract,
         table of contents, reference to a graphical representation
         of content or a free-text account of the content."@en-us)
AnnotationAssertion(rdfs:comment dc:description "An account of the content of the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:description <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:description "Description")
AnnotationAssertion(rdfs:label dc:description "Description"@en-us)

# Annotation Property: dc:format (Format)

AnnotationAssertion(dc:description dc:format "Typically, Format may include the media-type or dimensions of
         the resource. Format may be used to determine the software,
         hardware or other equipment needed to display or operate the
         resource. Examples of dimensions include size and duration.
         Recommended best practice is to select a value from a
         controlled vocabulary (for example, the list of Internet Media
         Types [MIME] defining computer media formats)."@en-us)
AnnotationAssertion(rdfs:comment dc:format "The physical or digital manifestation of the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:format <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:format "Format")
AnnotationAssertion(rdfs:label dc:format "Format"@en-us)

# Annotation Property: dc:source (Source)

AnnotationAssertion(dc:description dc:source "The present resource may be derived from the Source resource
         in whole or in part.  Recommended best practice is to reference
         the resource by means of a string or number conforming to a
         formal identification system."@en-us)
AnnotationAssertion(rdfs:comment dc:source "A reference to a resource from which the present resource
         is derived."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:source <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:source "Source")
AnnotationAssertion(rdfs:label dc:source "Source"@en-us)

# Annotation Property: dc:subject (Subject and Keywords)

AnnotationAssertion(dc:description dc:subject "Typically, a Subject will be expressed as keywords,
         key phrases or classification codes that describe a topic
         of the resource.  Recommended best practice is to select 
         a value from a controlled vocabulary or formal 
         classification scheme."@en-us)
AnnotationAssertion(rdfs:comment dc:subject "The topic of the content of the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:subject <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:subject "Subject and Keywords")
AnnotationAssertion(rdfs:label dc:subject "Subject and Keywords"@en-us)

# Annotation Property: dc:title (Title)

AnnotationAssertion(dc:description dc:title "
        Typically, a Title will be a name by which the resource is
         formally known.
    "@en-us)
AnnotationAssertion(rdfs:comment dc:title "A name given to the resource."@en-us)
AnnotationAssertion(rdfs:isDefinedBy dc:title <http://purl.org/dc/elements/1.1/>)
AnnotationAssertion(rdfs:label dc:title "Title")
AnnotationAssertion(rdfs:label dc:title "Title"@en-us)

# Annotation Property: ontologies:TURBO_0000701 (interdependent with shortcut)

AnnotationAssertion(dc:creator ontologies:TURBO_0000701 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000701 "2017-09-05T17:02:53Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000701 "shortcutsInterdependent")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000701 "it would not make sense, or may even be impossible, to expand one of these shortcuts without the other.  For example, both a ScEnc2DiagCoe and ScEnc2DiagCodeRegText shortcut are require to create a fully-formed CRID for a diagnosis code serving as the output of a health care encounter planned process

In general, if a shortcut triple appears in the absence of its interdependencies, the turbo expansion method should throw an exception.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000701 "interdependent with shortcut")

# Annotation Property: ontologies:TURBO_0000702 (retires)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000702 "Links a 'retired placeholder' to to the corresponding class that is subject to 'referent tracking'

X retires Y means that an instance of class Y will appear as an instance of class X after 'referent tracking'")
AnnotationAssertion(dc:creator ontologies:TURBO_0000702 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000702 "2018-01-31T13:29:27Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000702 "retires")

# Annotation Property: ontologies:TURBO_0001700 (replaced with IUI)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0001700 "replaced with IUI"@en)
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001700 "the subject of this property has been demoted in the course of referent tracking, and the corresponding entity in reality is now better known by the following IUI:")
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001700 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:contributor ontologies:TURBO_0001700 "suggested by Heather Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0001700 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0001700 "2017-04-12T14:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001700 "replacedWithIUI")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001700 "replaced with IUI"@en)
SubAnnotationPropertyOf(ontologies:TURBO_0001700 obo:IAO_0100001)

# Annotation Property: ontologies:TURBO_0006500 (referent tracked?)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0006500 "referent tracked?"@en)
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0006500 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0006500 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0006500 "2017-04-12T14:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006500 "reftracked")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006500 "assert as true for individuals that have been referent tracked

this property should only be true for references that serve as Instance Unique Identiifiers, or IUIs")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006500 "referent tracked?"@en)
AnnotationPropertyRange(ontologies:TURBO_0006500 xsd:boolean)
AnnotationPropertyDomain(ontologies:TURBO_0006500 obo:BFO_0000001)

# Annotation Property: ontologies:TURBO_0006501 (conclusionated?)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0006501 "this data item is the output of a turbo conclusionation process")
AnnotationAssertion(dc:creator ontologies:TURBO_0006501 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0006501 "2017-10-05T18:34:04Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006501 "conclusionated")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006501 "conclusionated?")
AnnotationPropertyRange(ontologies:TURBO_0006501 xsd:boolean)
AnnotationPropertyDomain(ontologies:TURBO_0006501 obo:BFO_0000001)

# Annotation Property: ontologies:TURBO_0006600 (previous URI text)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006600 "previousUriText")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006600 "20170905:  current intention for referent tracking:

:Person1 and :PersonID1 are instantiated by Karma because there is a PersonID column in some table, with a value of 1 on some row.

If there are other Persons in the triplestore denoted by IDs with the value 1, then referent tracking may say that they are, in reality, the same person. 

In that case, a new URI would be created, based on a UUID.  That URI should have a \"previous URI string\" relationship with \":Person1\"

NEW URIS should be created for EACH of the Karma-instantiated person instances, with a “replaced with URI” relationship with the new UUID URI for the referent tracked Person. They should each also have \"previous URI string\" relationship with the string equivalent of whatever their URIs were, like “:Person1” or “:PersonOne”")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006600 "previous URI text")
AnnotationPropertyRange(ontologies:TURBO_0006600 xsd:string)
AnnotationPropertyDomain(ontologies:TURBO_0006600 obo:BFO_0000001)

# Annotation Property: ontologies:TURBO_0006601 (pre-expansion URI text)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0006601 "the previousUriText value of the resource had served as input into the expansion process that resulted in this resource/URI")
AnnotationAssertion(dc:creator ontologies:TURBO_0006601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0006601 "2017-09-27T17:38:47Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006601 "preExpUriString")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006601 "pre-expansion URI text")
SubAnnotationPropertyOf(ontologies:TURBO_0006601 ontologies:TURBO_0006600)
AnnotationPropertyRange(ontologies:TURBO_0006601 xsd:string)
AnnotationPropertyDomain(ontologies:TURBO_0006601 obo:BFO_0000001)

# Annotation Property: ontologies:TURBO_0006602 (pre-reftracking URI text)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0006602 "the previousUriText value of the resource had served as input into the referent tracking process that resulted in this resource/URI")
AnnotationAssertion(dc:creator ontologies:TURBO_0006602 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0006602 "2017-09-27T17:39:47Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006602 "preReftrackUriString")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006602 "pre-reftracking URI text")
SubAnnotationPropertyOf(ontologies:TURBO_0006602 ontologies:TURBO_0006600)
AnnotationPropertyRange(ontologies:TURBO_0006602 xsd:string)
AnnotationPropertyDomain(ontologies:TURBO_0006602 obo:BFO_0000001)

# Annotation Property: oboInOwl:hasAlternativeId (has_alternative_id)

AnnotationAssertion(rdfs:label oboInOwl:hasAlternativeId "has_alternative_id")
AnnotationAssertion(rdfs:label oboInOwl:hasAlternativeId "has_alternative_id"^^xsd:string)

# Annotation Property: oboInOwl:hasBroadSynonym (has_broad_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasBroadSynonym "has_broad_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasDbXref (has_dbxref)

AnnotationAssertion(oboInOwl:hasDbXref oboInOwl:hasDbXref _:genid2)
AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference")
AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "database_cross_reference"^^xsd:string)
AnnotationAssertion(rdfs:label oboInOwl:hasDbXref "has_dbxref"@en)

# Annotation Property: oboInOwl:hasExactSynonym (has_exact_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has_exact_synonym")
AnnotationAssertion(rdfs:label oboInOwl:hasExactSynonym "has_exact_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasNarrowSynonym (has_narrow_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasNarrowSynonym "has_narrow_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasOBOFormatVersion (has_obo_format_version)

AnnotationAssertion(rdfs:label oboInOwl:hasOBOFormatVersion "has_obo_format_version"^^xsd:string)

# Annotation Property: oboInOwl:hasOBONamespace (has_obo_namespace)

AnnotationAssertion(rdfs:label oboInOwl:hasOBONamespace "has_obo_namespace")
AnnotationAssertion(rdfs:label oboInOwl:hasOBONamespace "has_obo_namespace"^^xsd:string)

# Annotation Property: oboInOwl:hasRelatedSynonym (has_related_synonym)

AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has_related_synonym")
AnnotationAssertion(rdfs:label oboInOwl:hasRelatedSynonym "has_related_synonym"^^xsd:string)

# Annotation Property: oboInOwl:hasURI (has_URI)

AnnotationAssertion(rdfs:label oboInOwl:hasURI "has_URI"@en)

# Annotation Property: oboInOwl:shorthand (shorthand)

AnnotationAssertion(obo:IAO_0000111 oboInOwl:shorthand "shorthand"^^xsd:string)
AnnotationAssertion(oboInOwl:shorthand oboInOwl:shorthand "shorthand")
AnnotationAssertion(rdfs:comment oboInOwl:shorthand "The TURBO ontology is moving away from human-readable URIs towards the OBO Foundry practice of NAMESPACE_XXXXXXX identifiers, where the X's are numerical digits.

Our software developers would like to continue using mnemonics to refer to ontology terms.  Presumably this will be implemented with sameAs or equivalentClass/equivalentProperty relationships.

This has_mnemonic datatype property has been created to facilitate and maintain these relationships, most likely with some SPARQL construct statements.")
AnnotationAssertion(rdfs:label oboInOwl:shorthand "shorthand")
AnnotationAssertion(rdfs:label oboInOwl:shorthand "shorthand"^^xsd:string)

# Annotation Property: rdfs:label (label)

AnnotationAssertion(obo:IAO_0000111 rdfs:label "label")
AnnotationAssertion(rdfs:label rdfs:label "label")


############################
#   Object Properties
############################

# Object Property: faldo:begin (begin)

AnnotationAssertion(obo:IAO_0000412 faldo:begin obo:geno.owl)
AnnotationAssertion(rdfs:label faldo:begin "begin"@en)
SubObjectPropertyOf(faldo:begin obo:GENO_0000708)

# Object Property: faldo:end (end)

AnnotationAssertion(obo:IAO_0000412 faldo:end obo:geno.owl)
AnnotationAssertion(rdfs:label faldo:end "end"@en)
SubObjectPropertyOf(faldo:end obo:GENO_0000708)

# Object Property: faldo:location (location)

AnnotationAssertion(obo:IAO_0000412 faldo:location obo:geno.owl)
AnnotationAssertion(rdfs:label faldo:location "location"@en)
SubObjectPropertyOf(faldo:location obo:GENO_0000708)

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:ro.owl)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "is part of")
AnnotationAssertion(rdfs:label obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
EquivalentObjectProperties(obo:BFO_0000050 ObjectInverseOf(obo:BFO_0000051))
SubObjectPropertyOf(obo:BFO_0000050 obo:RO_0002131)
SubObjectPropertyOf(obo:BFO_0000050 owl:topObjectProperty)
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)
ObjectPropertyDomain(obo:BFO_0000050 obo:BFO_0000001)
ObjectPropertyDomain(obo:BFO_0000050 owl:Thing)
ObjectPropertyRange(obo:BFO_0000050 obo:BFO_0000001)
ObjectPropertyRange(obo:BFO_0000050 owl:Thing)

# Object Property: obo:BFO_0000051 (has_part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See https://code.google.com/p/obo-relations/wiki/ROAndTime"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:ro.owl)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(oboInOwl:hasDbXref obo:BFO_0000051 "BFO:0000051"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BFO_0000051 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:BFO_0000051 "has_part"^^xsd:string)
AnnotationAssertion(oboInOwl:shorthand obo:BFO_0000051 "has_part"^^xsd:string)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part")
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has_part"^^xsd:string)
EquivalentObjectProperties(obo:BFO_0000051 ObjectInverseOf(obo:BFO_0000050))
SubObjectPropertyOf(obo:BFO_0000051 obo:RO_0002131)
SubObjectPropertyOf(obo:BFO_0000051 owl:topObjectProperty)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000052 (inheres in at all times)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000052 "inheres-in_at")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000052 "inheresInAt")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000052 "b inheres_in c at t =Def. b is a dependent continuant & c is an independent continuant that is not a spatial region & b s-depends_on c at t. (axiom label in BFO2 Reference: [051-002])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000052 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'inheres in at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'inheres in@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000052 "BFO 2 Reference: Inherence is a subrelation of s-depends_on which holds between a dependent continuant and an independent continuant that is not a spatial region. Since dependent continuants cannot migrate from one independent continuant bearer to another, it follows that if b s-depends_on independent continuant c at some time, then b s-depends_on c at all times at which a exists. Inherence is in this sense redundantly time-indexed.For example, consider the particular instance of openness inhering in my mouth at t as I prepare to take a bite out of a donut, followed by a closedness at t+1 when I bite the donut and start chewing. The openness instance is then shortlived, and to say that it s-depends_on my mouth at all times at which this openness exists, means: at all times during this short life. Every time you make a fist, you make a new (instance of the universal) fist. (Every time your hand has the fist-shaped quality, there is created a new instance of the universal fist-shaped quality.)"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000052 "BFO2 Reference: independent continuant that is not a spatial region")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000052 "BFO2 Reference: specifically dependent continuant")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000052 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000052 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000052 "(iff (inheresInAt a b t) (and (DependentContinuant a) (IndependentContinuant b) (not (SpatialRegion b)) (specificallyDependsOnAt a b t))) // axiom label in BFO2 CLIF: [051-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000052 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000052 "inheres in at all times"@en)
SubObjectPropertyOf(obo:BFO_0000052 obo:BFO_0000070)
ObjectPropertyDomain(obo:BFO_0000052 obo:BFO_0000020)
ObjectPropertyRange(obo:BFO_0000052 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006)))

# Object Property: obo:BFO_0000053 (is bearer of)

AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000053 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000053 "http://purl.obolibrary.org/obo/omrse.owl"^^xsd:string)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000053 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000053 "is bearer of"@en)
SubObjectPropertyOf(obo:BFO_0000053 owl:topObjectProperty)

# Object Property: obo:BFO_0000054 (realized in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this disease is realized in this disease course"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this fragility is realized in this shattering"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this investigator role is realized in this investigation"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 obo:ro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000054 "http://purl.obolibrary.org/obo/ro.owl"^^xsd:string)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000054 "[copied from inverse property 'realizes'] to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000054 "Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000054 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
EquivalentObjectProperties(obo:BFO_0000054 ObjectInverseOf(obo:BFO_0000055))
SubObjectPropertyOf(obo:BFO_0000054 owl:topObjectProperty)
InverseObjectProperties(obo:BFO_0000054 obo:BFO_0000055)
ObjectPropertyDomain(obo:BFO_0000054 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000054 obo:BFO_0000015)

# Object Property: obo:BFO_0000055 (realizes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this disease course realizes this disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this investigation realizes this investigator role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this shattering realizes this fragility"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 obo:ro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000055 "http://purl.obolibrary.org/obo/ro.owl"^^xsd:string)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000055 "to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000055 "Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:bfo.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
EquivalentObjectProperties(obo:BFO_0000055 ObjectInverseOf(obo:BFO_0000054))
SubObjectPropertyOf(obo:BFO_0000055 owl:topObjectProperty)
ObjectPropertyDomain(obo:BFO_0000055 obo:BFO_0000015)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000017)

# Object Property: obo:BFO_0000058 (concretized by at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000058 "concretized-by_st")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000058 "[copied from inverse property 'concretizes at some time'] You may concretize a piece of software by installing it in your computer")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000058 "[copied from inverse property 'concretizes at some time'] You may concretize a recipe that you find in a cookbook by turning it into a plan which exists as a realizable dependent continuant in your head.")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000058 "[copied from inverse property 'concretizes at some time'] you may concretize a poem as a pattern of memory traces in your head")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000058 "[copied from inverse property 'concretizes at some time'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'concretizes at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'concretizes@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000058 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000058 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000058 "[copied from inverse property 'concretizes at some time'] b concretizes c at t means: b is a specifically dependent continuant & c is a generically dependent continuant & for some independent continuant that is not a spatial region d, b s-depends_on d at t & c g-depends on d at t & if c migrates from bearer d to another bearer e than a copy of b will be created in e. (axiom label in BFO2 Reference: [075-002])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000058 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000058 "concretized by at some time"@en)
InverseObjectProperties(obo:BFO_0000058 obo:BFO_0000059)
ObjectPropertyDomain(obo:BFO_0000058 obo:BFO_0000031)
ObjectPropertyRange(obo:BFO_0000058 obo:BFO_0000020)

# Object Property: obo:BFO_0000059 (concretizes at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000059 "concretizes_st")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000059 "concretizesAt")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000059 "You may concretize a piece of software by installing it in your computer"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000059 "You may concretize a recipe that you find in a cookbook by turning it into a plan which exists as a realizable dependent continuant in your head."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000059 "you may concretize a poem as a pattern of memory traces in your head"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000059 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'concretizes at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'concretizes@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000059 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000059 "b concretizes c at t means: b is a specifically dependent continuant & c is a generically dependent continuant & for some independent continuant that is not a spatial region d, b s-depends_on d at t & c g-depends on d at t & if c migrates from bearer d to another bearer e than a copy of b will be created in e. (axiom label in BFO2 Reference: [075-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000059 "if b g-depends on c at some time t, then there is some d, such that d concretizes b at t and d s-depends_on c at t. (axiom label in BFO2 Reference: [076-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000059 "(forall (x y t) (if (concretizesAt x y t) (and (SpecificallyDependentContinuant x) (GenericallyDependentContinuant y) (exists (z) (and (IndependentContinuant z) (specificallyDependsOnAt x z t) (genericallyDependsOnAt y z t)))))) // axiom label in BFO2 CLIF: [075-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000059 "(forall (x y t) (if (genericallyDependsOnAt x y t) (exists (z) (and (concretizesAt z x t) (specificallyDependsOnAt z y t))))) // axiom label in BFO2 CLIF: [076-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000059 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000059 "concretizes at some time"@en)
ObjectPropertyDomain(obo:BFO_0000059 obo:BFO_0000020)
ObjectPropertyRange(obo:BFO_0000059 obo:BFO_0000031)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000062 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000062)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000063 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)

# Object Property: obo:BFO_0000070 (specifically depends on at all times)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000070 "s-depends-on_at")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000070 "specificallyDependsOn")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "A pain s-depends_on the organism that is experiencing the pain"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "a gait s-depends_on the walking object. (All at some specific time.)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "a shape s-depends_on the shaped object"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of a dependent continuant on an independent continuant: an instance of headache s-depends_on some head"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of a dependent continuant on an independent continuant: an instance of temperature s-depends_on some organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of a process on something: a process of cell death s-depends_on a cell"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of a process on something: an instance of seeing (a relational process) s-depends_on some organism and on some seen entity, which may be an occurrent or a continuant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of one occurrent on another: a process of answering a question is dependent on a prior process of asking a question"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of one occurrent on another: a process of obeying a command is dependent on a prior process of issuing a command"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of hitting a ball with a cricket bat"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of paying cash to a merchant in exchange for a bag of figs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "reciprocal s-dependence between occurrents: a process of buying and the associated process of selling"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "reciprocal s-dependence between occurrents: a process of increasing the volume of a portion of gas while temperature remains constant and the associated process of  decreasing the pressure exerted by the gas"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "reciprocal s-dependence between occurrents: in a game of chess the process of playing with the white pieces is mutually dependent on the process of playing with the black pieces"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "the one-sided dependence of an occurrent on an independent continuant: football match on the players, the ground, the ball"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "the one-sided dependence of an occurrent on an independent continuant: handwave on a hand"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "the three-sided reciprocal s-dependence of the hue, saturation and brightness of a color [45"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "the three-sided reciprocal s-dependence of the pitch, timbre and volume of a tone [45"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000070 "the two-sided reciprocal s-dependence of the roles of husband and wife [20"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000070 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'specifically depends on at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'specifically depends on@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000070 "BFO 2 Reference: An entity – for example an act of communication or a game of football – can s-depends_on more than one entity. Complex phenomena for example in the psychological and social realms (such as inferring, commanding and requesting) or in the realm of multi-organismal biological processes (such as infection and resistance), will involve multiple families of dependence relations, involving both continuants and occurrents [1, 4, 28"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000070 "BFO 2 Reference: S-dependence is just one type of dependence among many; it is what, in the literature, is referred to as ‘existential dependence’ [87, 46, 65, 20"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000070 "BFO 2 Reference: the relation of s-depends_on does not in every case require simultaneous existence of its relata. Note the difference between such cases and the cases of continuant universals defined historically: the act of answering depends existentially on the prior act of questioning; the human being who was baptized or who answered a question does not himself depend existentially on the prior act of baptism or answering. He would still exist even if these acts had never taken place."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000070 "BFO2 Reference: specifically dependent continuant\\; process; process boundary")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000070 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000070 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000070 "To say that b s-depends_on a at t is to say that b and c do not share common parts & b is of its nature such that it cannot exist unless c exists & b is not a boundary of c and b is not a site of which c is the host [64"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000070 "If b is s-depends_on something at some time, then b is not a material entity. (axiom label in BFO2 Reference: [052-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000070 "If b s-depends_on something at t, then there is some c, which is an independent continuant and not a spatial region, such that b s-depends_on c at t. (axiom label in BFO2 Reference: [136-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000070 "If occurrent b s-depends_on some independent continuant c at t, then b s-depends_on c at every time at which b exists. (axiom label in BFO2 Reference: [015-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000070 "an entity does not s-depend_on any of its (continuant or occurrent) parts or on anything it is part of. (axiom label in BFO2 Reference: [013-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000070 "if b s-depends_on c at t & c s-depends_on d at t then b s-depends_on d at t. (axiom label in BFO2 Reference: [054-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000070 "(forall (x y t) (if (and (Entity x) (or (continuantPartOfAt y x t) (continuantPartOfAt x y t) (occurrentPartOf x y) (occurrentPartOf y x))) (not (specificallyDependsOnAt x y t)))) // axiom label in BFO2 CLIF: [013-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000070 "(forall (x y t) (if (and (Occurrent x) (IndependentContinuant y) (specificallyDependsOnAt x y t)) (forall (t_1) (if (existsAt x t_1) (specificallyDependsOnAt x y t_1))))) // axiom label in BFO2 CLIF: [015-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000070 "(forall (x y t) (if (specificallyDependsOnAt x y t) (exists (z) (and (IndependentContinuant z) (not (SpatialRegion z)) (specificallyDependsOnAt x z t))))) // axiom label in BFO2 CLIF: [136-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000070 "(forall (x y z t) (if (and (specificallyDependsOnAt x y t) (specificallyDependsOnAt y z t)) (specificallyDependsOnAt x z t))) // axiom label in BFO2 CLIF: [054-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000070 "(forall (x) (if (exists (y t) (specificallyDependsOnAt x y t)) (not (MaterialEntity x)))) // axiom label in BFO2 CLIF: [052-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000070 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000070 "specifically depends on at all times"@en)
SubObjectPropertyOf(obo:BFO_0000070 obo:BFO_0000169)

# Object Property: obo:BFO_0000083 (occupies spatial region at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000083 "located-at-r_st")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000083 "occupiesSpatialRegionAt")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000083 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'occupies spatial region at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'occupies spatial region@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000083 "BFO2 Reference: independent continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000083 "BFO2 Reference: spatial region")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000083 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000083 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000083 "b occupies_spatial_region r at t means that r is a spatial region in which independent continuant b is exactly located (axiom label in BFO2 Reference: [041-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000083 "every region r is occupies_spatial_region r at all times. (axiom label in BFO2 Reference: [042-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000083 "if b occupies_spatial_region r at t & b continuant_part_of b at t, then there is some r which is continuant_part_of r at t such that b  occupies_spatial_region r at t. (axiom label in BFO2 Reference: [043-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000083 "(forall (r t) (if (Region r) (occupiesSpatialRegionAt r r t))) // axiom label in BFO2 CLIF: [042-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000083 "(forall (x r t) (if (occupiesSpatialRegionAt x r t) (and (SpatialRegion r) (IndependentContinuant x)))) // axiom label in BFO2 CLIF: [041-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000083 "(forall (x y r_1 t) (if (and (occupiesSpatialRegionAt x r_1 t) (continuantPartOfAt y x t)) (exists (r_2) (and (continuantPartOfAt r_2 r_1 t) (occupiesSpatialRegionAt y r_2 t))))) // axiom label in BFO2 CLIF: [043-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000083 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000083 "occupies spatial region at some time"@en)
InverseObjectProperties(obo:BFO_0000083 obo:BFO_0000123)
ObjectPropertyDomain(obo:BFO_0000083 obo:BFO_0000004)
ObjectPropertyRange(obo:BFO_0000083 obo:BFO_0000006)

# Object Property: obo:BFO_0000108 (exists at)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000108 "exists-at")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000108 "existsAt")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000108 "BFO2 Reference: entity")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000108 "BFO2 Reference: temporal region")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000108 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000108 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000108 "b exists_at t means: b is an entity which exists at some temporal region t. (axiom label in BFO2 Reference: [118-002])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000108 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000108 "exists at"@en)
InverseObjectProperties(obo:BFO_0000108 obo:BFO_0000157)
ObjectPropertyDomain(obo:BFO_0000108 obo:BFO_0000001)
ObjectPropertyRange(obo:BFO_0000108 obo:BFO_0000008)

# Object Property: obo:BFO_0000117 (has occurrent part)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000117 "o-has-part")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000117 "hasOccurrentPart")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] Mary’s 5th birthday occurrent_part_of Mary’s life")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] The process of a footballer’s heart beating once is an occurrent part but not a temporal_part of a game of football.")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] the first set of the tennis match occurrent_part_of the tennis match.")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000117 "b has_occurrent_part c = Def. c occurrent_part_of b. (axiom label in BFO2 Reference: [007-001])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] BFO 2 Reference: a (continuant or occurrent) part of itself. We appreciate that this is counterintuitive for some users, since it implies for example that President Obama is a part of himself. However it brings benefits in simplifying the logical formalism, and it captures an important feature of identity, namely that it is the limit case of mereological inclusion.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] BFO2 Reference: occurrent")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000117 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000117 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000117 "[copied from inverse property 'part of occurrent'] b occurrent_part_of c =Def. b is a part of c & b and c are occurrents. (axiom label in BFO2 Reference: [003-002])")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000117 "(iff (hasOccurrentPart a b) (occurrentPartOf b a)) // axiom label in BFO2 CLIF: [007-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000117 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000117 "has occurrent part"@en)
InverseObjectProperties(obo:BFO_0000117 obo:BFO_0000132)
TransitiveObjectProperty(obo:BFO_0000117)
ObjectPropertyDomain(obo:BFO_0000117 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000117 obo:BFO_0000003)

# Object Property: obo:BFO_0000118 (has proper occurrent part)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000118 "o-has-ppart")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000118 "hasProperOccurrentPart")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000118 "[copied from inverse property 'proper part of occurrent'] b proper_occurrent_part_of c =Def. b occurrent_part_of c & b and c are not identical. (axiom label in BFO2 Reference: [005-001])")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000118 "b has_proper_occurrent_part c = Def. c proper_occurrent_part_of b. [XXX-001"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000118 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000118 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000118 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000118 "has proper occurrent part"@en)
SubObjectPropertyOf(obo:BFO_0000118 obo:BFO_0000117)
InverseObjectProperties(obo:BFO_0000118 obo:BFO_0000138)
TransitiveObjectProperty(obo:BFO_0000118)
ObjectPropertyDomain(obo:BFO_0000118 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000118 obo:BFO_0000003)

# Object Property: obo:BFO_0000123 (has spatial occupant at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000123 "r-location-of_st")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000123 "[copied from inverse property 'occupies spatial region at some time'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'occupies spatial region at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'occupies spatial region@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000123 "[copied from inverse property 'occupies spatial region at some time'] BFO2 Reference: independent continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000123 "[copied from inverse property 'occupies spatial region at some time'] BFO2 Reference: spatial region")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000123 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000123 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000123 "[copied from inverse property 'occupies spatial region at some time'] b occupies_spatial_region r at t means that r is a spatial region in which independent continuant b is exactly located (axiom label in BFO2 Reference: [041-002])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000123 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000123 "has spatial occupant at some time"@en)
ObjectPropertyDomain(obo:BFO_0000123 obo:BFO_0000006)
ObjectPropertyRange(obo:BFO_0000123 obo:BFO_0000004)

# Object Property: obo:BFO_0000125 (has specific dependent at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000125 "has-s-dep_st")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] A pain s-depends_on the organism that is experiencing the pain")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] a gait s-depends_on the walking object. (All at some specific time.)")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] a shape s-depends_on the shaped object")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of a dependent continuant on an independent continuant: an instance of headache s-depends_on some head")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of a dependent continuant on an independent continuant: an instance of temperature s-depends_on some organism")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of a process on something: a process of cell death s-depends_on a cell")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of a process on something: an instance of seeing (a relational process) s-depends_on some organism and on some seen entity, which may be an occurrent or a continuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of one occurrent on another: a process of answering a question is dependent on a prior process of asking a question")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of one occurrent on another: a process of obeying a command is dependent on a prior process of issuing a command")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of hitting a ball with a cricket bat")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of paying cash to a merchant in exchange for a bag of figs")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] reciprocal s-dependence between occurrents: a process of buying and the associated process of selling")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] reciprocal s-dependence between occurrents: a process of increasing the volume of a portion of gas while temperature remains constant and the associated process of  decreasing the pressure exerted by the gas")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] reciprocal s-dependence between occurrents: in a game of chess the process of playing with the white pieces is mutually dependent on the process of playing with the black pieces")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] the one-sided dependence of an occurrent on an independent continuant: football match on the players, the ground, the ball")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] the one-sided dependence of an occurrent on an independent continuant: handwave on a hand")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] the three-sided reciprocal s-dependence of the hue, saturation and brightness of a color [45")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] the three-sided reciprocal s-dependence of the pitch, timbre and volume of a tone [45")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] the two-sided reciprocal s-dependence of the roles of husband and wife [20")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'specifically depends on at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'specifically depends on@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] BFO 2 Reference: An entity – for example an act of communication or a game of football – can s-depends_on more than one entity. Complex phenomena for example in the psychological and social realms (such as inferring, commanding and requesting) or in the realm of multi-organismal biological processes (such as infection and resistance), will involve multiple families of dependence relations, involving both continuants and occurrents [1, 4, 28")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] BFO 2 Reference: S-dependence is just one type of dependence among many; it is what, in the literature, is referred to as ‘existential dependence’ [87, 46, 65, 20")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] BFO 2 Reference: the relation of s-depends_on does not in every case require simultaneous existence of its relata. Note the difference between such cases and the cases of continuant universals defined historically: the act of answering depends existentially on the prior act of questioning; the human being who was baptized or who answered a question does not himself depend existentially on the prior act of baptism or answering. He would still exist even if these acts had never taken place.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] BFO2 Reference: specifically dependent continuant\\; process; process boundary")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000125 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000125 "[copied from inverse property 'specifically depends on at some time'] To say that b s-depends_on a at t is to say that b and c do not share common parts & b is of its nature such that it cannot exist unless c exists & b is not a boundary of c and b is not a site of which c is the host [64")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000125 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000125 "has specific dependent at some time"@en)
InverseObjectProperties(obo:BFO_0000125 obo:BFO_0000169)
ObjectPropertyDomain(obo:BFO_0000125 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000020 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006))))
ObjectPropertyRange(obo:BFO_0000125 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000020))

# Object Property: obo:BFO_0000126 (has spatiotemporal occupant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000126 "occupied-by")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000126 "[copied from inverse property 'occupies spatiotemporal region'] BFO 2 Reference: The occupies_spatiotemporal_region and occupies_temporal_region relations are the counterpart, on the occurrent side, of the relation occupies_spatial_region.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000126 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000126 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000126 "[copied from inverse property 'occupies spatiotemporal region'] p occupies_spatiotemporal_region s. This is a primitive relation between an occurrent p and the spatiotemporal region s which is its spatiotemporal extent. (axiom label in BFO2 Reference: [082-003])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000126 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000126 "has spatiotemporal occupant"@en)
InverseObjectProperties(obo:BFO_0000126 obo:BFO_0000130)
ObjectPropertyDomain(obo:BFO_0000126 obo:BFO_0000011)
ObjectPropertyRange(obo:BFO_0000126 obo:BFO_0000003)

# Object Property: obo:BFO_0000130 (occupies spatiotemporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000130 "occupies")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000130 "occupiesSpatiotemporalRegion")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000130 "BFO 2 Reference: The occupies_spatiotemporal_region and occupies_temporal_region relations are the counterpart, on the occurrent side, of the relation occupies_spatial_region."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000130 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000130 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000130 "p occupies_spatiotemporal_region s. This is a primitive relation between an occurrent p and the spatiotemporal region s which is its spatiotemporal extent. (axiom label in BFO2 Reference: [082-003])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000130 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000130 "occupies spatiotemporal region"@en)
ObjectPropertyDomain(obo:BFO_0000130 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000130 obo:BFO_0000011)

# Object Property: obo:BFO_0000132 (part of occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000132 "o-part-of")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000132 "occurrentPartOf")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000132 "Mary’s 5th birthday occurrent_part_of Mary’s life"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000132 "The process of a footballer’s heart beating once is an occurrent part but not a temporal_part of a game of football."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000132 "the first set of the tennis match occurrent_part_of the tennis match."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000132 "[copied from inverse property 'has occurrent part'] b has_occurrent_part c = Def. c occurrent_part_of b. (axiom label in BFO2 Reference: [007-001])")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000132 "BFO 2 Reference: a (continuant or occurrent) part of itself. We appreciate that this is counterintuitive for some users, since it implies for example that President Obama is a part of himself. However it brings benefits in simplifying the logical formalism, and it captures an important feature of identity, namely that it is the limit case of mereological inclusion."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000132 "BFO2 Reference: occurrent")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000132 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000132 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000132 "b occurrent_part_of c =Def. b is a part of c & b and c are occurrents. (axiom label in BFO2 Reference: [003-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000132 "occurrent_part_of is antisymmetric. (axiom label in BFO2 Reference: [123-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000132 "occurrent_part_of is reflexive (every occurrent entity is an occurrent_part_of itself). (axiom label in BFO2 Reference: [113-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000132 "occurrent_part_of is transitive. (axiom label in BFO2 Reference: [112-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000132 "occurrent_part_of satisfies unique product. (axiom label in BFO2 Reference: [125-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000132 "occurrent_part_of satisfies weak supplementation. (axiom label in BFO2 Reference: [124-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000132 "(forall (x y t) (if (and (occurrentPartOf x y t) (not (= x y))) (exists (z) (and (occurrentPartOf z y t) (not (exists (w) (and (occurrentPartOf w x t) (occurrentPartOf w z t)))))))) // axiom label in BFO2 CLIF: [124-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000132 "(forall (x y t) (if (and (occurrentPartOf x y t) (occurrentPartOf y x t)) (= x y))) // axiom label in BFO2 CLIF: [123-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000132 "(forall (x y t) (if (exists (v) (and (occurrentPartOf v x t) (occurrentPartOf v y t))) (exists (z) (forall (u w) (iff (iff (occurrentPartOf w u t) (and (occurrentPartOf w x t) (occurrentPartOf w y t))) (= z u)))))) // axiom label in BFO2 CLIF: [125-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000132 "(forall (x y z) (if (and (occurrentPartOf x y) (occurrentPartOf y z)) (occurrentPartOf x z))) // axiom label in BFO2 CLIF: [112-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000132 "(forall (x) (if (Occurrent x) (occurrentPartOf x x))) // axiom label in BFO2 CLIF: [113-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000132 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000132 "part of occurrent"@en)
TransitiveObjectProperty(obo:BFO_0000132)
ObjectPropertyDomain(obo:BFO_0000132 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000132 obo:BFO_0000003)

# Object Property: obo:BFO_0000138 (proper part of occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000138 "o-ppart-of")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000138 "properOccurrentPartOf")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000138 "[copied from inverse property 'has proper occurrent part'] b has_proper_occurrent_part c = Def. c proper_occurrent_part_of b. [XXX-001")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000138 "b proper_occurrent_part_of c =Def. b occurrent_part_of c & b and c are not identical. (axiom label in BFO2 Reference: [005-001])"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000138 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000138 "(iff (properOccurrentPartOf a b) (and (occurrentPartOf a b) (not (= a b)))) // axiom label in BFO2 CLIF: [005-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000138 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000138 "proper part of occurrent"@en)
SubObjectPropertyOf(obo:BFO_0000138 obo:BFO_0000132)
TransitiveObjectProperty(obo:BFO_0000138)
ObjectPropertyDomain(obo:BFO_0000138 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000138 obo:BFO_0000003)

# Object Property: obo:BFO_0000139 (temporal part of)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000139 "t-part-of")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000139 "temporalPartOf")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000139 "the 4th year of your life is a temporal part of your life\\. The first quarter of a game of football is a temporal part of the whole game\\. The process of your heart beating from 4pm to 5pm today is a temporal part of the entire process of your heart beating.\\ The 4th year of your life is a temporal part of your life"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000139 "the process boundary which separates the 3rd and 4th years of your life."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000139 "your heart beating from 4pm to 5pm today is a temporal part of the process of your heart beating"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000139 "b proper_temporal_part_of c =Def. b temporal_part_of c & not (b = c). (axiom label in BFO2 Reference: [116-001])"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000139 "b temporal_part_of c =Def.b occurrent_part_of c & & for some temporal region t, b occupies_temporal_region t & for all occurrents d, t (if d occupies_temporal_region t  & t? occurrent_part_of t then (d occurrent_part_of a iff d occurrent_part_of b)). (axiom label in BFO2 Reference: [078-003])"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000139 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000139 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000139 "if b proper_temporal_part_of c, then there is some d which is a proper_temporal_part_of c and which shares no parts with b. (axiom label in BFO2 Reference: [117-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000139 "(forall (x y) (if (properTemporalPartOf x y) (exists (z) (and (properTemporalPartOf z y) (not (exists (w) (and (temporalPartOf w x) (temporalPartOf w z)))))))) // axiom label in BFO2 CLIF: [117-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000139 "(iff (properTemporalPartOf a b) (and (temporalPartOf a b) (not (= a b)))) // axiom label in BFO2 CLIF: [116-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000139 "(iff (temporalPartOf a b) (and (occurrentPartOf a b) (exists (t) (and (TemporalRegion t) (occupiesSpatioTemporalRegion a t))) (forall (c t_1) (if (and (Occurrent c) (occupiesSpatioTemporalRegion c t_1) (occurrentPartOf t_1 r)) (iff (occurrentPartOf c a) (occurrentPartOf c b)))))) // axiom label in BFO2 CLIF: [078-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000139 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000139 "temporal part of"@en)
SubObjectPropertyOf(obo:BFO_0000139 obo:BFO_0000132)
TransitiveObjectProperty(obo:BFO_0000139)
ObjectPropertyDomain(obo:BFO_0000139 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000139 obo:BFO_0000003)

# Object Property: obo:BFO_0000151 (projects onto spatial region at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000151 "st-projects-onto-s_st")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000151 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000151 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000151 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000151 "projects onto spatial region at some time"@en)
InverseObjectProperties(obo:BFO_0000151 obo:BFO_0000152)
ObjectPropertyDomain(obo:BFO_0000151 obo:BFO_0000011)
ObjectPropertyRange(obo:BFO_0000151 obo:BFO_0000006)

# Object Property: obo:BFO_0000152 (spatial projection of spatiotemporal at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000152 "s-projection-of-st_st")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000152 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000152 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000152 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000152 "spatial projection of spatiotemporal at some time"@en)
ObjectPropertyDomain(obo:BFO_0000152 obo:BFO_0000006)
ObjectPropertyRange(obo:BFO_0000152 obo:BFO_0000011)

# Object Property: obo:BFO_0000153 (projects onto temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000153 "st-projects-onto-t")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000153 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000153 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000153 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000153 "projects onto temporal region"@en)
SubObjectPropertyOf(obo:BFO_0000153 obo:BFO_0000108)
InverseObjectProperties(obo:BFO_0000153 obo:BFO_0000154)
ObjectPropertyDomain(obo:BFO_0000153 obo:BFO_0000011)
ObjectPropertyRange(obo:BFO_0000153 obo:BFO_0000008)

# Object Property: obo:BFO_0000154 (temporal projection of spatiotemporal)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000154 "t-projection-of-st")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000154 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000154 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000154 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000154 "temporal projection of spatiotemporal"@en)
SubObjectPropertyOf(obo:BFO_0000154 obo:BFO_0000157)
ObjectPropertyDomain(obo:BFO_0000154 obo:BFO_0000008)
ObjectPropertyRange(obo:BFO_0000154 obo:BFO_0000011)

# Object Property: obo:BFO_0000155 (occupies temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000155 "spans")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000155 "occupiesTemporalRegion")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000155 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000155 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000155 "p occupies_temporal_region t. This is a primitive relation between an occurrent p and the temporal region t upon which the spatiotemporal region p occupies_spatiotemporal_region projects. (axiom label in BFO2 Reference: [132-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000155 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000155 "occupies temporal region"@en)
SubObjectPropertyOf(obo:BFO_0000155 obo:BFO_0000108)
InverseObjectProperties(obo:BFO_0000155 obo:BFO_0000156)
ObjectPropertyDomain(obo:BFO_0000155 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000155 obo:BFO_0000008)

# Object Property: obo:BFO_0000156 (has temporal occupant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000156 "span-of")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000156 "spanOf")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000156 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000156 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000156 <http://purl.obolibrary.org/obo/bfo/2012-07-20/bfo.owl>)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000156 "[copied from inverse property 'occupies temporal region'] p occupies_temporal_region t. This is a primitive relation between an occurrent p and the temporal region t upon which the spatiotemporal region p occupies_spatiotemporal_region projects. (axiom label in BFO2 Reference: [132-001])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000156 obo:bfo.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000156 <http://purl.obolibrary.org/obo/bfo/2012-07-20/bfo.owl>)
AnnotationAssertion(rdfs:label obo:BFO_0000156 "has temporal occupant"@en)
SubObjectPropertyOf(obo:BFO_0000156 obo:BFO_0000157)
ObjectPropertyDomain(obo:BFO_0000156 obo:BFO_0000008)
ObjectPropertyRange(obo:BFO_0000156 obo:BFO_0000003)

# Object Property: obo:BFO_0000157 (during which exists)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000157 "during-which-exists")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000157 "[copied from inverse property 'exists at'] BFO2 Reference: entity")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000157 "[copied from inverse property 'exists at'] BFO2 Reference: temporal region")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000157 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000157 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000157 "[copied from inverse property 'exists at'] b exists_at t means: b is an entity which exists at some temporal region t. (axiom label in BFO2 Reference: [118-002])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000157 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000157 "during which exists"@en)
ObjectPropertyDomain(obo:BFO_0000157 obo:BFO_0000008)
ObjectPropertyRange(obo:BFO_0000157 obo:BFO_0000001)

# Object Property: obo:BFO_0000158 (bearer of at all times)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000158 "bearer-of_at")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000158 "bearerOfAt")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000158 "b bearer_of c at t =Def. c s-depends_on b at t & b is an independent continuant that is not a spatial region. (axiom label in BFO2 Reference: [053-004])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000158 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'bearer of at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'bearer of@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000158 "BFO2 Reference: independent continuant that is not a spatial region")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000158 "BFO2 Reference: specifically dependent continuant")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000158 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000158 "(iff (bearerOfAt a b t) (and (specificallyDependsOnAt b a t) (IndependentContinuant a) (not (SpatialRegion a)) (existsAt b t))) // axiom label in BFO2 CLIF: [053-004] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000158 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000158 "bearer of at all times"@en)
SubObjectPropertyOf(obo:BFO_0000158 obo:BFO_0000168)
ObjectPropertyDomain(obo:BFO_0000158 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006)))
ObjectPropertyRange(obo:BFO_0000158 obo:BFO_0000020)

# Object Property: obo:BFO_0000162 (has disposition at all times)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000162 "has-d_at")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000162 "hasDispositionAt")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000162 "a has_disposition b at t =Def. b disposition_of a at t. (axiom label in BFO2 Reference: [069-001])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000162 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'has disposition at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'has disposition@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000162 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000162 "(iff (hasDispositionAt a b t) (dispositionOf b a t)) // axiom label in BFO2 CLIF: [069-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000162 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000162 "has disposition at all times"@en)
SubObjectPropertyOf(obo:BFO_0000162 obo:BFO_0000158)
ObjectPropertyRange(obo:BFO_0000162 obo:BFO_0000016)

# Object Property: obo:BFO_0000168 (has specific dependent at all times)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000168 "has-s-dep_at")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000168 obo:ogg.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000168 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000168 "has specific dependent at all times"@en)
SubObjectPropertyOf(obo:BFO_0000168 obo:BFO_0000125)

# Object Property: obo:BFO_0000169 (specifically depends on at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000169 "s-depends-on_st")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000169 "specificallyDependsOn")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "A pain s-depends_on the organism that is experiencing the pain"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "a gait s-depends_on the walking object. (All at some specific time.)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "a shape s-depends_on the shaped object"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of a dependent continuant on an independent continuant: an instance of headache s-depends_on some head"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of a dependent continuant on an independent continuant: an instance of temperature s-depends_on some organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of a process on something: a process of cell death s-depends_on a cell"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of a process on something: an instance of seeing (a relational process) s-depends_on some organism and on some seen entity, which may be an occurrent or a continuant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of one occurrent on another: a process of answering a question is dependent on a prior process of asking a question"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of one occurrent on another: a process of obeying a command is dependent on a prior process of issuing a command"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of hitting a ball with a cricket bat"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "one-sided s-dependence of one occurrent on multiple independent continuants: a relational process of paying cash to a merchant in exchange for a bag of figs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "reciprocal s-dependence between occurrents: a process of buying and the associated process of selling"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "reciprocal s-dependence between occurrents: a process of increasing the volume of a portion of gas while temperature remains constant and the associated process of  decreasing the pressure exerted by the gas"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "reciprocal s-dependence between occurrents: in a game of chess the process of playing with the white pieces is mutually dependent on the process of playing with the black pieces"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "the one-sided dependence of an occurrent on an independent continuant: football match on the players, the ground, the ball"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "the one-sided dependence of an occurrent on an independent continuant: handwave on a hand"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "the three-sided reciprocal s-dependence of the hue, saturation and brightness of a color [45"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "the three-sided reciprocal s-dependence of the pitch, timbre and volume of a tone [45"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000169 "the two-sided reciprocal s-dependence of the roles of husband and wife [20"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000169 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'specifically depends on at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'specifically depends on@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000169 "BFO 2 Reference: An entity – for example an act of communication or a game of football – can s-depends_on more than one entity. Complex phenomena for example in the psychological and social realms (such as inferring, commanding and requesting) or in the realm of multi-organismal biological processes (such as infection and resistance), will involve multiple families of dependence relations, involving both continuants and occurrents [1, 4, 28"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000169 "BFO 2 Reference: S-dependence is just one type of dependence among many; it is what, in the literature, is referred to as ‘existential dependence’ [87, 46, 65, 20"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000169 "BFO 2 Reference: the relation of s-depends_on does not in every case require simultaneous existence of its relata. Note the difference between such cases and the cases of continuant universals defined historically: the act of answering depends existentially on the prior act of questioning; the human being who was baptized or who answered a question does not himself depend existentially on the prior act of baptism or answering. He would still exist even if these acts had never taken place."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000169 "BFO2 Reference: specifically dependent continuant\\; process; process boundary")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000169 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000169 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000169 "To say that b s-depends_on a at t is to say that b and c do not share common parts & b is of its nature such that it cannot exist unless c exists & b is not a boundary of c and b is not a site of which c is the host [64"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000169 "If b is s-depends_on something at some time, then b is not a material entity. (axiom label in BFO2 Reference: [052-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000169 "If b s-depends_on something at t, then there is some c, which is an independent continuant and not a spatial region, such that b s-depends_on c at t. (axiom label in BFO2 Reference: [136-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000169 "If occurrent b s-depends_on some independent continuant c at t, then b s-depends_on c at every time at which b exists. (axiom label in BFO2 Reference: [015-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000169 "an entity does not s-depend_on any of its (continuant or occurrent) parts or on anything it is part of. (axiom label in BFO2 Reference: [013-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000169 "if b s-depends_on c at t & c s-depends_on d at t then b s-depends_on d at t. (axiom label in BFO2 Reference: [054-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000169 "(forall (x y t) (if (and (Entity x) (or (continuantPartOfAt y x t) (continuantPartOfAt x y t) (occurrentPartOf x y) (occurrentPartOf y x))) (not (specificallyDependsOnAt x y t)))) // axiom label in BFO2 CLIF: [013-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000169 "(forall (x y t) (if (and (Occurrent x) (IndependentContinuant y) (specificallyDependsOnAt x y t)) (forall (t_1) (if (existsAt x t_1) (specificallyDependsOnAt x y t_1))))) // axiom label in BFO2 CLIF: [015-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000169 "(forall (x y t) (if (specificallyDependsOnAt x y t) (exists (z) (and (IndependentContinuant z) (not (SpatialRegion z)) (specificallyDependsOnAt x z t))))) // axiom label in BFO2 CLIF: [136-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000169 "(forall (x y z t) (if (and (specificallyDependsOnAt x y t) (specificallyDependsOnAt y z t)) (specificallyDependsOnAt x z t))) // axiom label in BFO2 CLIF: [054-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000169 "(forall (x) (if (exists (y t) (specificallyDependsOnAt x y t)) (not (MaterialEntity x)))) // axiom label in BFO2 CLIF: [052-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000169 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000169 "specifically depends on at some time"@en)
ObjectPropertyDomain(obo:BFO_0000169 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000020))
ObjectPropertyRange(obo:BFO_0000169 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000020 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006))))

# Object Property: obo:BFO_0000176 (part of continuant at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000176 "c-part-of_st")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000176 "continuantPartOfAt")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000176 "Mary’s arm continuant_part_of Mary in the time of her life prior to her operation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000176 "the Northern hemisphere of the planet Earth is a part of the planet Earth at all times at which the planet Earth exists."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000176 "[copied from inverse property 'has continuant part at some time'] b has_continuant_part c at t = Def. c continuant_part_of b at t. (axiom label in BFO2 Reference: [006-001])")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'part of continuant at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'part of continuant@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "BFO 2 Reference: Immaterial entities are in some cases continuant parts of their material hosts. Thus the hold of a ship, for example, is a part of the ship; it may itself have parts, which may have names (used for example by ship stow planners, customs inspectors, and the like). Immaterial entities under both 1. and 2. can be of zero, one, two or three dimensions. We define:a(immaterial entity)[Definition: a is an immaterial entity = Def. a is an independent continuant that has no material entities as parts. (axiom label in BFO2 Reference: [028-001])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "BFO 2 Reference: a (continuant or occurrent) part of itself. We appreciate that this is counterintuitive for some users, since it implies for example that President Obama is a part of himself. However it brings benefits in simplifying the logical formalism, and it captures an important feature of identity, namely that it is the limit case of mereological inclusion."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "BFO2 Reference: continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "BFO2 Reference: continuantThe range for ‘t’ (as in all cases throughout this document unless otherwise specified) is: temporal region.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000176 "[copied from inverse property 'has continuant part at some time'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'has continuant part at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'has continuant part@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000176 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000176 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000176 "b continuant_part_of c at t =Def. b is a part of c at t & t is a time & b and c are continuants. (axiom label in BFO2 Reference: [002-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "continuant_part_of is antisymmetric. (axiom label in BFO2 Reference: [120-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "continuant_part_of is reflexive (every continuant entity is a continuant_part_of itself). (axiom label in BFO2 Reference: [111-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "continuant_part_of is transitive. (axiom label in BFO2 Reference: [110-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "continuant_part_of satisfies unique product. (axiom label in BFO2 Reference: [122-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "continuant_part_of satisfies weak supplementation. (axiom label in BFO2 Reference: [121-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000176 "if b continuant_part_of c at t and b is an independent continuant, then b is located_in c at t. (axiom label in BFO2 Reference: [047-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x t) (if (Continuant x) (continuantPartOfAt x x t))) // axiom label in BFO2 CLIF: [111-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x y t) (if (and (continuantPartOfAt x y t) (IndependentContinuant x)) (locatedInAt x y t))) // axiom label in BFO2 CLIF: [047-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x y t) (if (and (continuantPartOfAt x y t) (continuantPartOfAt y x t)) (= x y))) // axiom label in BFO2 CLIF: [120-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x y t) (if (and (continuantPartOfAt x y t) (not (= x y))) (exists (z) (and (continuantPartOfAt z y t) (not (exists (w) (and (continuantPartOfAt w x t) (continuantPartOfAt w z t)))))))) // axiom label in BFO2 CLIF: [121-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x y t) (if (exists (v) (and (continuantPartOfAt v x t) (continuantPartOfAt v y t))) (exists (z) (forall (u w) (iff (iff (continuantPartOfAt w u t) (and (continuantPartOfAt w x t) (continuantPartOfAt w y t))) (= z u)))))) // axiom label in BFO2 CLIF: [122-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(forall (x y z t) (if (and (continuantPartOfAt x y t) (continuantPartOfAt y z t)) (continuantPartOfAt x z t))) // axiom label in BFO2 CLIF: [110-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000176 "(iff (ImmaterialEntity a) (and (IndependentContinuant a) (not (exists (b t) (and (MaterialEntity b) (continuantPartOfAt b a t)))))) // axiom label in BFO2 CLIF: [028-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000176 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000176 "part of continuant at some time"@en)
InverseObjectProperties(obo:BFO_0000176 obo:BFO_0000178)
ObjectPropertyDomain(obo:BFO_0000176 obo:BFO_0000002)
ObjectPropertyRange(obo:BFO_0000176 obo:BFO_0000002)

# Object Property: obo:BFO_0000178 (has continuant part at some time)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000178 "c-has-part_st")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000178 "hasContinuantPartAt")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] Mary’s arm continuant_part_of Mary in the time of her life prior to her operation")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] the Northern hemisphere of the planet Earth is a part of the planet Earth at all times at which the planet Earth exists.")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000178 "b has_continuant_part c at t = Def. c continuant_part_of b at t. (axiom label in BFO2 Reference: [006-001])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'has continuant part at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'has continuant part@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance level, relation. The BFO reading of the binary relation 'part of continuant at some time@en' is: exists t,  exists_at(x,t) & exists_at(y,t) & 'part of continuant@en'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] BFO 2 Reference: Immaterial entities are in some cases continuant parts of their material hosts. Thus the hold of a ship, for example, is a part of the ship; it may itself have parts, which may have names (used for example by ship stow planners, customs inspectors, and the like). Immaterial entities under both 1. and 2. can be of zero, one, two or three dimensions. We define:a(immaterial entity)[Definition: a is an immaterial entity = Def. a is an independent continuant that has no material entities as parts. (axiom label in BFO2 Reference: [028-001])")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] BFO 2 Reference: a (continuant or occurrent) part of itself. We appreciate that this is counterintuitive for some users, since it implies for example that President Obama is a part of himself. However it brings benefits in simplifying the logical formalism, and it captures an important feature of identity, namely that it is the limit case of mereological inclusion.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] BFO2 Reference: continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] BFO2 Reference: continuantThe range for ‘t’ (as in all cases throughout this document unless otherwise specified) is: temporal region.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000178 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000178 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000178 "[copied from inverse property 'part of continuant at some time'] b continuant_part_of c at t =Def. b is a part of c at t & t is a time & b and c are continuants. (axiom label in BFO2 Reference: [002-001])")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000178 "(iff (hasContinuantPartAt a b t) (continuantPartOfAt b a t)) // axiom label in BFO2 CLIF: [006-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000178 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000178 "has continuant part at some time"@en)
ObjectPropertyDomain(obo:BFO_0000178 obo:BFO_0000002)
ObjectPropertyRange(obo:BFO_0000178 obo:BFO_0000002)

# Object Property: obo:BFO_0000186 (part of continuant at all times that whole exists)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000186 "c-part-of-object_at")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000186 "[copied from inverse property 'has continuant part at all times'] b has_continuant_part c at t = Def. c continuant_part_of b at t. (axiom label in BFO2 Reference: [006-001])")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000186 "forall(t) exists_at(y,t) -> exists_at(x,t) and 'part of continuant'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000186 "This is a binary version of a ternary time-indexed, instance level, relation. Unlike the rest of the temporalized relations which temporally quantify over existence of the subject of the relation, this relation temporally quantifies over the existence of the object of the relation. The relation is provided tentatively, to assess whether the GO needs such a relation. It is inverse of 'has continuant part at all times'")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000186 "[copied from inverse property 'has continuant part at all times'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'has continuant part at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'has continuant part@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000186 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000186 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000186 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000186 "part of continuant at all times that whole exists"@en)
SubObjectPropertyOf(obo:BFO_0000186 obo:BFO_0000176)
TransitiveObjectProperty(obo:BFO_0000186)
ObjectPropertyDomain(obo:BFO_0000186 obo:BFO_0000002)
ObjectPropertyRange(obo:BFO_0000186 obo:BFO_0000002)

# Object Property: obo:BFO_0000187 (has continuant part at all times that part exists)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000187 "c-has-part-object_at")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] Mary’s arm continuant_part_of Mary in the time of her life prior to her operation")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] the Northern hemisphere of the planet Earth is a part of the planet Earth at all times at which the planet Earth exists.")
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000187 "forall(t) exists_at(y,t) -> exists_at(x,t) and 'has continuant part'(x,y,t)")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "This is a binary version of a ternary time-indexed, instance level, relation. Unlike the rest of the temporalized relations which temporally quantify over existence of the subject of the relation, this relation temporally quantifies over the existence of the object of the relation. The relation is provided tentatively, to assess whether the GO needs such a relation. It is inverse of 'part of continuant at all times'")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] Alan Ruttenberg: This is a binary version of a ternary time-indexed, instance-level, relation. The BFO reading of the binary relation 'part of continuant at all times@en' is: forall(t) exists_at(x,t) -> exists_at(y,t) and 'part of continuant@en(x,y,t)'.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] BFO 2 Reference: Immaterial entities are in some cases continuant parts of their material hosts. Thus the hold of a ship, for example, is a part of the ship; it may itself have parts, which may have names (used for example by ship stow planners, customs inspectors, and the like). Immaterial entities under both 1. and 2. can be of zero, one, two or three dimensions. We define:a(immaterial entity)[Definition: a is an immaterial entity = Def. a is an independent continuant that has no material entities as parts. (axiom label in BFO2 Reference: [028-001])")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] BFO 2 Reference: a (continuant or occurrent) part of itself. We appreciate that this is counterintuitive for some users, since it implies for example that President Obama is a part of himself. However it brings benefits in simplifying the logical formalism, and it captures an important feature of identity, namely that it is the limit case of mereological inclusion.")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] BFO2 Reference: continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] BFO2 Reference: continuantThe range for ‘t’ (as in all cases throughout this document unless otherwise specified) is: temporal region.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000187 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000187 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000187 "[copied from inverse property 'part of continuant at all times'] b continuant_part_of c at t =Def. b is a part of c at t & t is a time & b and c are continuants. (axiom label in BFO2 Reference: [002-001])")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000187 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000187 "has continuant part at all times that part exists"@en)
SubObjectPropertyOf(obo:BFO_0000187 obo:BFO_0000178)
TransitiveObjectProperty(obo:BFO_0000187)
ObjectPropertyDomain(obo:BFO_0000187 obo:BFO_0000002)
ObjectPropertyRange(obo:BFO_0000187 obo:BFO_0000002)

# Object Property: obo:GENO_0000239 (has_sequence)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000239 "A relationship between an entity that carries a sequence (e.g. a sequence feature), and the sequence itself.")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000239 "has_sequence_component")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000239 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000239 "'Sequence' in the context of GENO is an abstract entity representing an ordered collection of monomeric units as carried in a biological macromolecule.")
AnnotationAssertion(rdfs:label obo:GENO_0000239 "has_sequence")
InverseObjectProperties(obo:GENO_0000239 obo:GENO_0000251)
ObjectPropertyRange(obo:GENO_0000239 obo:GENO_0000702)

# Object Property: obo:GENO_0000251 (is_sequence_of)

AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000251 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000251 "is_sequence_of")
ObjectPropertyDomain(obo:GENO_0000251 obo:GENO_0000702)

# Object Property: obo:GENO_0000683 (is_variant_with)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000683 "A relation between two sequence features at a particular genomic locus that vary in their sequence (in whole or in part).")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000683 "is_sequence_variant_with")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000683 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000683 "This property is most commonly used to relate two different alleles of a given gene (e.g. a wt and mutant instance of the BRCA2 gene).  It is not a relation between an allele and the class-level gene it is a variant of (for this use is_allele_of)")
AnnotationAssertion(rdfs:label obo:GENO_0000683 "is_variant_with"@en)

# Object Property: obo:GENO_0000708 (faldo properties)

AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000708 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000708 "organizational property to hold imports from faldo.")
AnnotationAssertion(rdfs:label obo:GENO_0000708 "faldo properties"@en)

# Object Property: obo:IAO_0000039 (has measurement unit label)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000039 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000039 "has measurement unit label"@en)
SubObjectPropertyOf(obo:IAO_0000039 obo:BFO_0000051)
FunctionalObjectProperty(obo:IAO_0000039)
ObjectPropertyRange(obo:IAO_0000039 obo:IAO_0000003)

# Object Property: obo:IAO_0000136 (is about)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000136 "is about"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000136 "This document is about information artifacts and their representations"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000136 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000136 "is_about is a (currently) primitive relation that relates an information artifact to an entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000136 "7/6/2009 Alan Ruttenberg. Following discussion with Jonathan Rees, and introduction of \"mentions\" relation. Weaken the is_about relationship to be primitive. 

We will try to build it back up by elaborating the various subproperties that are more precisely defined.

Some currently missing phenomena that should be considered \"about\" are predications - \"The only person who knows the answer is sitting beside me\" , Allegory, Satire, and other literary forms that can be topical without explicitly mentioning the topic."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000136 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000136 "Smith, Ceusters, Ruttenberg, 2000 years of philosophy"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is about"@en)
ObjectPropertyDomain(obo:IAO_0000136 obo:IAO_0000030)

# Object Property: obo:IAO_0000142 (mentions)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000142 "mentions"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000142 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000142 "An information artifact IA mentions an entity E exactly when it has a component/part that denotes E"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000142 "7/6/2009 Alan Ruttenberg. P4 RC1 munges our GCI so remove it for now: mentions some entity equivalentTo has_part some ('generically denotes' some entity)"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000142 "7/6/2009 Alan Ruttenberg: Add this relation following conversation with Jonathan Rees that N&S GCI for is_about was too strong. Really it was simply sufficient. To effect this change we introduce this relation, which is subproperty of is_about, and have previous GCI use this relation \"mentions\" in it's (logical) definition"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000142 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000142 "Person: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000142 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000142 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000142 "mentions"@en)
SubObjectPropertyOf(obo:IAO_0000142 obo:IAO_0000136)

# Object Property: obo:IAO_0000219 (denotes)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000219 "denotes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000219 "A person's name denotes the person. A variable name in a computer program denotes some piece of memory. Lexically equivalent strings can denote different things, for instance \"Alan\" can denote different people. In each case of use, there is a case of the denotation relation obtaining, between \"Alan\" and the person that is being named."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000219 "denotes is a primitive, instance-level, relation obtaining between an information content entity and some portion of reality. Denotation is what happens when someone creates an information content entity E in order to specifically refer to something. The only relation between E and the thing is that E can be used to 'pick out' the thing. This relation connects those two together. Freedictionary.com sense 3: To signify directly; refer to specifically"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000219 "2009-11-10 Alan Ruttenberg. Old definition said the following to emphasize the generic nature of this relation. We no longer have 'specifically denotes', which would have been primitive, so make this relation primitive.
g denotes r =def 
r is a portion of reality
there is some c that is a concretization of g 
every c that is a concretization of g specifically denotes r"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000219 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000219 "Conversations with Barry Smith, Werner Ceusters, Bjoern Peters, Michel Dumontier, Melanie Courtot, James Malone, Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000219 obo:pdro.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0000219 _:genid1226)
AnnotationAssertion(rdfs:comment obo:IAO_0000219 ""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000219 "denotes"@en)
SubObjectPropertyOf(obo:IAO_0000219 obo:IAO_0000136)
ObjectPropertyDomain(obo:IAO_0000219 obo:IAO_0000030)
ObjectPropertyRange(obo:IAO_0000219 owl:Thing)

# Object Property: obo:IAO_0000221 (is quality measurement of)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000221 "m is a quality measurement of q at t when
q is a quality 
there is a measurement process p that has specified output m, a measurement datum, that is about q"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000221 "8/6/2009 Alan Ruttenberg: The strategy is to be rather specific with this relationship. There are other kinds of measurements that are not of qualities, such as those that measure time. We will add these as separate properties for the moment and see about generalizing later"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000221 "From the second IAO workshop [Alan Ruttenberg 8/6/2009: not completely current, though bringing in comparison is probably important]

This one is the one we are struggling with at the moment. The issue is what a measurement measures. On the one hand saying that it measures the quality would include it \"measuring\" the bearer = referring to the bearer in the measurement. However this makes comparisons of two different things not possible. On the other hand not having it inhere in the bearer, on the face of it, breaks the audit trail.

Werner suggests a solution based on \"Magnitudes\" a proposal for which we are awaiting details.
--
From the second IAO workshop, various comments, [commented on by Alan Ruttenberg 8/6/2009]

unit of measure is a quality, e.g. the length of a ruler.

[We decided to hedge on what units of measure are, instead talking about measurement unit labels, which are the information content entities that are about whatever measurement units are. For IAO we need that information entity in any case. See the term measurement unit label]

[Some struggling with the various subflavors of is_about. We subsequently removed the relation represents, and describes until and only when we have a better theory]

a represents b means either a denotes b or a describes

describe:
a describes b means a is about b and a allows an inference of at least one quality of b

We have had a long discussion about denotes versus describes."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000221 "From the second IAO workshop: An attempt at tieing the quality to the measurement datum more carefully.

a is a magnitude means a is a determinate quality particular inhering in some bearer b existing at a time t that can be represented/denoted by an information content entity e that has parts denoting a unit of measure, a number, and b. The unit of measure is an instance of the determinable quality."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000221 "From the second meeting on IAO:

An attempt at defining assay using Barry's \"reliability\" wording

assay:
process and has_input some material entity
and has_output some information content entity 
and which is such that instances of this process type reliably generate 
outputs that describes the input."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000221 "This one is the one we are struggling with at the moment. The issue is what a measurement measures. On the one hand saying that it measures the quality would include it \"measuring\" the bearer = referring to the bearer in the measurement. However this makes comparisons of two different things not possible. On the other hand not having it inhere in the bearer, on the face of it, breaks the audit trail.

Werner suggests a solution based on \"Magnitudes\" a proposal for which we are awaiting details."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000221 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000221 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000221 "is quality measurement of"@en)
EquivalentObjectProperties(obo:IAO_0000221 ObjectInverseOf(obo:IAO_0000417))
SubObjectPropertyOf(obo:IAO_0000221 obo:IAO_0000136)
InverseObjectProperties(obo:IAO_0000221 obo:IAO_0000417)
ObjectPropertyDomain(obo:IAO_0000221 obo:IAO_0000109)
ObjectPropertyRange(obo:IAO_0000221 obo:BFO_0000019)

# Object Property: obo:IAO_0000413 (is duration of)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000413 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000413 "relates a process to a time-measurement-datum that represents the duration of the process"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000413 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000413 "is duration of"@en)
SubObjectPropertyOf(obo:IAO_0000413 obo:IAO_0000136)
ObjectPropertyDomain(obo:IAO_0000413 obo:IAO_0000416)
ObjectPropertyRange(obo:IAO_0000413 obo:BFO_0000015)

# Object Property: obo:IAO_0000417 (is quality measured as)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000417 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000417 "inverse of the relation of is quality measurement of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000417 "2009/10/19 Alan Ruttenberg. Named 'junk' relation useful in restrictions, but not a real instance relationship"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000417 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000417 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000417 "is quality measured as"@en)
EquivalentObjectProperties(obo:IAO_0000417 ObjectInverseOf(obo:IAO_0000221))

# Object Property: obo:IAO_0000581 (has time stamp)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000581 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000581 "relates a time stamped measurement datum to the time measurement datum that denotes the time when the measurement was taken"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000581 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000581 "has time stamp"@en)
SubObjectPropertyOf(obo:IAO_0000581 obo:BFO_0000051)
FunctionalObjectProperty(obo:IAO_0000581)
ObjectPropertyDomain(obo:IAO_0000581 obo:IAO_0000582)
ObjectPropertyRange(obo:IAO_0000581 obo:IAO_0000416)

# Object Property: obo:IAO_0000583 (has measurement datum)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000583 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000583 "relates a time stamped measurement datum to the measurement datum that was measured"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000583 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000583 "has measurement datum"@en)
SubObjectPropertyOf(obo:IAO_0000583 obo:BFO_0000051)
ObjectPropertyDomain(obo:IAO_0000583 obo:IAO_0000582)
ObjectPropertyRange(obo:IAO_0000583 ObjectIntersectionOf(obo:IAO_0000109 ObjectComplementOf(obo:IAO_0000416)))

# Object Property: obo:IAO_0020012 (designates)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020012 "x designates y, if for any given group of language users, x is an information content entity, is about y, and represents y in a linguistic context.."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020012 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:IAO_0020012 "designates"@en)
InverseObjectProperties(obo:IAO_0020012 obo:IAO_0020018)
AsymmetricObjectProperty(obo:IAO_0020012)
IrreflexiveObjectProperty(obo:IAO_0020012)
ObjectPropertyDomain(obo:IAO_0020012 obo:IAO_0000030)
ObjectPropertyRange(obo:IAO_0020012 obo:BFO_0000001)

# Object Property: obo:IAO_0020018 (is designated by)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020018 "p1 is designated by p2, if p2 is an information content entity that represents p1 in a linguistic context."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020018 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:IAO_0020018 "is designated by"@en)
AsymmetricObjectProperty(obo:IAO_0020018)
IrreflexiveObjectProperty(obo:IAO_0020018)

# Object Property: obo:ICO_0000130 (is associated with review board approval number)

AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000130 obo:ico.owl)
AnnotationAssertion(dc:creator obo:ICO_0000130 "EE, YH, YL, AK, MH")
AnnotationAssertion(dc:creator obo:ICO_0000130 "a relation that links an informed consent form to an associated IRB number")
AnnotationAssertion(rdfs:label obo:ICO_0000130 "is associated with review board approval number")
ObjectPropertyDomain(obo:ICO_0000130 obo:ICO_0000001)
ObjectPropertyRange(obo:ICO_0000130 obo:ICO_0000111)

# Object Property: obo:ICO_0000132 (is assigned by organization)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000132 "an object perperty that represents a relation between a unique identifier (ID) and an organization that assigns the ID. ")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000132 obo:ico.owl)
AnnotationAssertion(dc:creator obo:ICO_0000132 "YH, EE, YL, AK, MH")
AnnotationAssertion(rdfs:label obo:ICO_0000132 "is assigned by organization")

# Object Property: obo:OBI_0000124 (is_supported_by_data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000124 "is_supported_by_data"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000124 "The relation between the conclusion \"Gene tpbA is involved in EPS production\" and the data items produced using two sets of organisms, one being a tpbA knockout, the other being tpbA wildtype tested in polysacharide production assays and analyzed using an ANOVA. "^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000124 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000124 "The relation between a data item and a conclusion where the conclusion is the output of a data interpreting process and the data item is used as an input to that process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000124 "OBI")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000124 "OBI")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000124 "Philly 2011 workshop"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000124 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000124 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000124 "is_supported_by_data"^^xsd:string)
ObjectPropertyDomain(obo:OBI_0000124 obo:OBI_0001909)
ObjectPropertyRange(obo:OBI_0000124 obo:IAO_0000027)

# Object Property: obo:OBI_0000293 (has_specified_input)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000293 "has_specified_input"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000293 "has_specified_input"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000293 "see is_input_of example_of_usage"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000293 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000293 "A relation between a planned process and a continuant participating in that process that is not created during  the process. The presence of the continuant during the process is explicitly specified in the plan specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000293 "8/17/09: specified inputs of one process are not necessarily specified inputs of a larger process that it is part of. This is in contrast to how 'has participant' works."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Larry Hunter"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Melanie Coutot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000293 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000293 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000293 "has_specified_input"@en)
EquivalentObjectProperties(obo:OBI_0000293 ObjectInverseOf(obo:OBI_0000295))
SubObjectPropertyOf(obo:OBI_0000293 obo:RO_0000057)
InverseObjectProperties(obo:OBI_0000293 obo:OBI_0000295)
ObjectPropertyDomain(obo:OBI_0000293 obo:OBI_0000011)

# Object Property: obo:OBI_0000295 (is_specified_input_of)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000295 "is_specified_input_of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000295 "is_specified_input_of"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000295 "some Autologous EBV(Epstein-Barr virus)-transformed B-LCL (B lymphocyte cell line) is_input_for instance of Chromum Release Assay described at https://wiki.cbil.upenn.edu/obiwiki/index.php/Chromium_Release_assay"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000295 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000295 "A relation between a planned process and a continuant participating in that process that is not created during  the process. The presence of the continuant during the process is explicitly specified in the plan specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000295 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000295 "PERSON:Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000295 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000295 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000295 "is_specified_input_of"@en)
EquivalentObjectProperties(obo:OBI_0000295 ObjectInverseOf(obo:OBI_0000293))
SubObjectPropertyOf(obo:OBI_0000295 obo:RO_0000056)
ObjectPropertyRange(obo:OBI_0000295 obo:OBI_0000011)

# Object Property: obo:OBI_0000299 (has_specified_output)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000299 "has_specified_output"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000299 "has_specified_output"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000299 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000299 "A relation between a planned process and a continuant participating in that process. The presence of the continuant at the end of the process is explicitly specified in the objective specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Larry Hunter"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Melanie Courtot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000299 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000299 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000299 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000299 "has_specified_output"@en)
EquivalentObjectProperties(obo:OBI_0000299 ObjectInverseOf(obo:OBI_0000312))
SubObjectPropertyOf(obo:OBI_0000299 obo:RO_0000057)
SubObjectPropertyOf(obo:OBI_0000299 owl:topObjectProperty)
InverseObjectProperties(obo:OBI_0000299 obo:OBI_0000312)
ObjectPropertyDomain(obo:OBI_0000299 obo:OBI_0000011)

# Object Property: obo:OBI_0000312 (is_specified_output_of)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000312 "is_specified_output_of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000312 "is_specified_output_of"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000312 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000312 "A relation between a planned process and a continuant participating in that process. The presence of the continuant at the end of the process is explicitly specified in the objective specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000312 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000312 "PERSON:Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000312 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000312 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000312 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000312 "is_specified_output_of")
AnnotationAssertion(rdfs:label obo:OBI_0000312 "is_specified_output_of"@en)
EquivalentObjectProperties(obo:OBI_0000312 ObjectInverseOf(obo:OBI_0000299))
SubObjectPropertyOf(obo:OBI_0000312 obo:RO_0000056)
ObjectPropertyRange(obo:OBI_0000312 obo:OBI_0000011)

# Object Property: obo:OBI_0000417 (achieves_planned_objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000417 "achieves_planned_objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000417 "A cell sorting process achieves the objective specification 'material separation objective'"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000417 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000417 "This relation obtains between a planned process and a objective specification when the criteria specified in the objective specification are met at the end of the planned process."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000417 "BP, AR, PPPB branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000417 "PPPB branch derived"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000417 "modified according to email thread from 1/23/09 in accordince with DT and PPPB branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000417 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000417 "achieves_planned_objective"^^xsd:string)
InverseObjectProperties(obo:OBI_0000417 obo:OBI_0000833)
ObjectPropertyDomain(obo:OBI_0000417 obo:OBI_0000011)
ObjectPropertyRange(obo:OBI_0000417 obo:IAO_0000005)

# Object Property: obo:OBI_0000643 (has grain)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000643 "has grain"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000643 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000643 "the relation of the cells in the finger of the skin to the finger, in which an indeterminate number of grains are parts of the whole by virtue of being grains in a collective that is part of the whole, and in which removing one granular part does not nec- essarily damage or diminish the whole. Ontological Whether there is a fixed, or nearly fixed number of parts - e.g. fingers of the hand, chambers of the heart, or wheels of a car - such that there can be a notion of a single one being missing, or whether, by contrast, the number of parts is indeterminate - e.g., cells in the skin of the hand, red cells in blood, or rubber molecules in the tread of the tire of the wheel of the car."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000643 "Discussion in Karslruhe with, among others, Alan Rector, Stefan Schulz, Marijke Keet, Melanie Courtot, and Alan Ruttenberg. Definition take from the definition of granular parthood in the cited paper. Needs work to put into standard form"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000643 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000643 "PAPER: Granularity, scale and collectivity: When size does and does not matter, Alan Rector, Jeremy Rogers, Thomas Bittner, Journal of Biomedical Informatics 39 (2006) 333-349"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000643 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000643 "has grain"^^xsd:string)
SubObjectPropertyOf(obo:OBI_0000643 obo:BFO_0000051)

# Object Property: obo:OBI_0000833 (objective_achieved_by)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000833 "objective_achieved_by"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000833 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000833 "This relation obtains between a a objective specification and a planned process when the criteria specified in the objective specification are met at the end of the planned process."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000833 "OBI")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000833 "OBI")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000833 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000833 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000833 "objective_achieved_by"^^xsd:string)
ObjectPropertyDomain(obo:OBI_0000833 obo:IAO_0000005)
ObjectPropertyRange(obo:OBI_0000833 obo:OBI_0000011)

# Object Property: obo:OBI_0000846 (is member of organization)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000846 "is member of organization"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000846 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000846 "Relating a legal person or organization to an organization in the case where the legal person or organization has a role as member of the organization."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000846 "2009/10/01 Alan Ruttenberg. Barry prefers generic is-member-of. Question of what the range should be. For now organization. Is organization a population? Would the same relation be used to record members of a population"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000846 "JZ: Discussed on May 7, 2012 OBI dev call. Bjoern points out that we need to allow for organizations to be members of organizations. And agreed by the other OBI developers. So, human and organization were specified in 'Domains'. The textual definition was updated based on it."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000846 "Person:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000846 "Person:Helen Parkinson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000846 "Person:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000846 "Person:Helen Parkinson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000846 "2009/09/28 Alan Ruttenberg. Fucoidan-use-case"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000846 "is member of organization"^^xsd:string)
InverseObjectProperties(obo:OBI_0000846 obo:OBI_0001688)
ObjectPropertyDomain(obo:OBI_0000846 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245))
ObjectPropertyRange(obo:OBI_0000846 obo:OBI_0000245)

# Object Property: obo:OBI_0001688 (has organization member)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001688 "has organization member"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001688 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001688 "Relating an organization to a legal person or organization."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001688 "See tracker:
https://sourceforge.net/tracker/index.php?func=detail&aid=3512902&group_id=177891&atid=886178"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001688 "Person: Jie Zheng"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001688 "has organization member"@en)
ObjectPropertyDomain(obo:OBI_0001688 obo:OBI_0000245)
ObjectPropertyRange(obo:OBI_0001688 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245))

# Object Property: obo:OBI_0001927 (specifies value of)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001927 "specifies value of")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001927 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001927 "A relation between a value specification and an entity which the specification is about.")
AnnotationAssertion(rdfs:label obo:OBI_0001927 "specifies value of")
SubObjectPropertyOf(obo:OBI_0001927 obo:IAO_0000136)
ObjectPropertyDomain(obo:OBI_0001927 obo:OBI_0001933)

# Object Property: obo:OBI_0001938 (has value specification)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001938 "has value specification")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001938 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001938 "A relation between an information content entity and a value specification that specifies its value.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001938 "PERSON: James A. Overton")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001938 "OBI")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001938 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001938 "has value specification")
SubObjectPropertyOf(obo:OBI_0001938 obo:BFO_0000051)
ObjectPropertyDomain(obo:OBI_0001938 obo:IAO_0000030)
ObjectPropertyRange(obo:OBI_0001938 obo:OBI_0001933)

# Object Property: obo:OGG_0000000014 (is genome of organism)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000014 "a 'part of continuant at some time' relation  that incides a genome belongs to a organism. ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000014 "Yongqun He, Bin Zhao")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000014 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000014 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OGG_0000000014 "is genome of organism"@en)
SubObjectPropertyOf(obo:OGG_0000000014 obo:BFO_0000176)

# Object Property: obo:OGG_0000000016 (is gene of organism)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000016 "a relation between a gene and the organism where this gene belongs to the organism in nature. It does not include a foreign gene that is transferred to an organism by a genetic engineering method. ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000016 "Oliver He, Yue Liu")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000016 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000016 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OGG_0000000016 "is gene of organism"@en)
SubObjectPropertyOf(obo:OGG_0000000016 obo:BFO_0000176)
ObjectPropertyDomain(obo:OGG_0000000016 obo:OGG_0000000002)
ObjectPropertyRange(obo:OGG_0000000016 obo:OBI_0100026)

# Object Property: obo:OMIABIS_0000008 (owns)

AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000008 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000600 obo:OMIABIS_0000008 "This is a primitive relation. This relation is the foundation to the owners right to have the owned entity at his/her full disposal. "@en)
AnnotationAssertion(dc:source obo:OMIABIS_0000008 "Reinach, A. Sämtliche Werke. Texkritische Ausgabe, München: Philosophia Verlag, 1989, p.189-204.")
AnnotationAssertion(rdfs:label obo:OMIABIS_0000008 "owns"@en)
SubObjectPropertyOf(obo:OMIABIS_0000008 owl:topObjectProperty)
InverseObjectProperties(obo:OMIABIS_0000008 obo:OMIABIS_0000048)
AsymmetricObjectProperty(obo:OMIABIS_0000008)
ObjectPropertyDomain(obo:OMIABIS_0000008 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245 obo:OMRSE_00000023 obo:OMRSE_00000033))
ObjectPropertyRange(obo:OMIABIS_0000008 ObjectUnionOf(obo:BFO_0000040 obo:IAO_0000030))

# Object Property: obo:OMIABIS_0000009 (administrates)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000009 "a administrates b if c owns b and some rights and obligations grounded in the owning relation regarding b are transferred  from c to a."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000009 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000009 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:comment obo:OMIABIS_0000009 "A definition of \"tranfers\" object property can be found in d-acts: http:purl.obolibrary.org/iao/d-acts.owl"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000009 "administrates"@en)
AsymmetricObjectProperty(obo:OMIABIS_0000009)
ObjectPropertyDomain(obo:OMIABIS_0000009 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245 obo:OMRSE_00000023 obo:OMRSE_00000033))
ObjectPropertyRange(obo:OMIABIS_0000009 ObjectUnionOf(obo:BFO_0000040 obo:IAO_0000030))

# Object Property: obo:OMIABIS_0000048 (is owned by)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000048 "a is owned by b if b has complete power over a. All rights and obligations of ownership are grounded in this (primitive) relation. The claims and obligations of ownership can be partially transferred to a third party by the owner, b."@en)
AnnotationAssertion(obo:IAO_0000119 obo:OMIABIS_0000048 "Reinach, A. Sämtliche Werke. Texkritische Ausgabe, München: Philosophia Verlag, 1989, p.189-204.")
AnnotationAssertion(rdfs:label obo:OMIABIS_0000048 "is owned by"@en)
AsymmetricObjectProperty(obo:OMIABIS_0000048)
ObjectPropertyDomain(obo:OMIABIS_0000048 ObjectUnionOf(obo:BFO_0000040 obo:IAO_0000030))
ObjectPropertyRange(obo:OMIABIS_0000048 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245 obo:OMRSE_00000023 obo:OMRSE_00000033))

# Object Property: obo:OMRSE_00000020 (is-aggregate-of)

AnnotationAssertion(obo:IAO_0000231 obo:OMRSE_00000020 "BFO relation takes precedence."@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000020 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000020 "We anticipate BFO 2.0 including and defining this relation.  When it does, we will obsolete this property and declare it equivalent to the BFO 2.0 relation.
"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000020 "is-aggregate-of")
AnnotationAssertion(owl:deprecated obo:OMRSE_00000020 "true"@en)

# Object Property: obo:RO_0000052 (inheres in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility inheres in this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color inheres in this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the dependent) and an independent continuant (the bearer), in which the dependent specifically depends on the bearer for its existence")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the dependent) and an independent continuant (the bearer), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000052 "A dependent inheres in its bearer at all times for which the dependent exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "'inheres in at all times'"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 "http://purl.obolibrary.org/obo/ro.owl"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000052 "inheres_in")
EquivalentObjectProperties(obo:RO_0000052 ObjectInverseOf(obo:RO_0000053))
SubObjectPropertyOf(obo:RO_0000052 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)
FunctionalObjectProperty(obo:RO_0000052)
ObjectPropertyDomain(obo:RO_0000052 obo:BFO_0000020)
ObjectPropertyRange(obo:RO_0000052 obo:BFO_0000004)

# Object Property: obo:RO_0000053 (is bearer of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "a relation between an independent continuant (the bearer) and a specifically dependent continuant (the dependent), in which the dependent specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 "http://purl.obolibrary.org/obo/ro.owl"^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000053 "is bearer of"@en)
EquivalentObjectProperties(obo:RO_0000053 ObjectInverseOf(obo:RO_0000052))
SubObjectPropertyOf(obo:RO_0000053 owl:topObjectProperty)
ObjectPropertyDomain(obo:RO_0000053 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000056 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000056 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000056 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000056 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
EquivalentObjectProperties(obo:RO_0000056 ObjectInverseOf(obo:RO_0000057))
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000057 "http://purl.obolibrary.org/obo/ro.owl"^^xsd:string)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0000057 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
AnnotationAssertion(rdfs:label obo:RO_0000057 "has_participant")
EquivalentObjectProperties(obo:RO_0000057 ObjectInverseOf(obo:RO_0000056))
SubObjectPropertyOf(obo:RO_0000057 owl:topObjectProperty)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000058 "is concretized as"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The journal article (a generically dependent continuant) is concretized as the quality (a specifically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000058 "A relationship between a generically dependent continuant and a specifically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. A generically dependent continuant may be concretized as multiple specifically dependent continuants."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000058 "concretized by at some time"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000058 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000058 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000058 "http://purl.obolibrary.org/obo/obi.owl"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)
EquivalentObjectProperties(obo:RO_0000058 ObjectInverseOf(obo:RO_0000059))
SubObjectPropertyOf(obo:RO_0000058 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0000058 obo:RO_0000059)
ObjectPropertyDomain(obo:RO_0000058 obo:BFO_0000031)
ObjectPropertyRange(obo:RO_0000058 obo:BFO_0000020)

# Object Property: obo:RO_0000059 (concretizes)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000059 "concretizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The quality (a specifically dependent continuant) concretizes the journal article (a generically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000059 "A relationship between a specifically dependent continuant and a generically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. Multiple specifically dependent continuants can concretize the same generically dependent continuant."@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 obo:ro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000059 "http://purl.obolibrary.org/obo/obi.owl"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:RO_0000059 "It is recommended to not use this if possible in OMRSE.  According to OntoBee this relation has been obsoleted and replaced with 'concretization of at all times'.  As of Dec. 2, 2013 iao-main still uses this relation.  "@en)
AnnotationAssertion(rdfs:label obo:RO_0000059 "concretizes"@en)
EquivalentObjectProperties(obo:RO_0000059 ObjectInverseOf(obo:RO_0000058))
SubObjectPropertyOf(obo:RO_0000059 owl:topObjectProperty)
ObjectPropertyDomain(obo:RO_0000059 obo:BFO_0000020)
ObjectPropertyRange(obo:RO_0000059 obo:BFO_0000031)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000079 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
EquivalentObjectProperties(obo:RO_0000079 ObjectInverseOf(obo:RO_0000085))
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
EquivalentObjectProperties(obo:RO_0000080 ObjectInverseOf(obo:RO_0000086))
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000081 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
EquivalentObjectProperties(obo:RO_0000081 ObjectInverseOf(obo:RO_0000087))
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000085 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000085 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
EquivalentObjectProperties(obo:RO_0000085 ObjectInverseOf(obo:RO_0000079))
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
EquivalentObjectProperties(obo:RO_0000086 ObjectInverseOf(obo:RO_0000080))
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000086 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000087 "has role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000087 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0000087 obo:obi.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:RO_0000087 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
EquivalentObjectProperties(obo:RO_0000087 ObjectInverseOf(obo:RO_0000081))
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0001000 (derives_from)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001000 "derives from"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this cell derives from this parent cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001000 "this nucleus derives from this parent nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001000 "a relation between two distinct material entities, the new entity and the old entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001000 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops from'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001000 "derives_from"@en)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0001000 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000412 obo:RO_0001000 obo:ro.owl)
AnnotationAssertion(oboInOwl:hasDbXref obo:RO_0001000 "RO:0001000"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:RO_0001000 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:RO_0001000 "derives_from"^^xsd:string)
AnnotationAssertion(oboInOwl:shorthand obo:RO_0001000 "derives_from"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0001000 "derives from"@en)
AnnotationAssertion(rdfs:label obo:RO_0001000 "derives_from"^^xsd:string)
EquivalentObjectProperties(obo:RO_0001000 ObjectInverseOf(obo:RO_0001001))
SubObjectPropertyOf(obo:RO_0001000 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0001000 obo:RO_0001001)
TransitiveObjectProperty(obo:RO_0001000)
ObjectPropertyDomain(obo:RO_0001000 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0001000 obo:BFO_0000004)

# Object Property: obo:RO_0001001 (derives into)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent cell derives into this cell (cell division)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0001001 "this parent nucleus derives into this nucleus (nuclear division)"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001001 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001001 "a relation between two distinct material entities, the old entity and the new entity, in which the new entity begins to exist when the old entity ceases to exist, and the new entity inherits the significant portion of the matter of the old entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001001 "This is a very general relation. More specific relations are preferred when applicable, such as 'directly develops into'. To avoid making statements about a future that may not come to pass, it is often better to use the backward-looking 'derives from' rather than the forward-looking 'derives into'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001001 "derives_into"@en)
AnnotationAssertion(rdfs:label obo:RO_0001001 "derives into"@en)
EquivalentObjectProperties(obo:RO_0001001 ObjectInverseOf(obo:RO_0001000))

# Object Property: obo:RO_0002131 (overlaps)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002131 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
SymmetricObjectProperty(obo:RO_0002131)

# Object Property: obo:RO_0002162 (in taxon)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002162 "x is in taxon y if an only if y is an organism, and the relationship between x and y is one of: part of (reflexive), developmentally preceded by, derives from, secreted by, expressed.")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002162 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:RO_0002162 "in taxon"@en)

# Object Property: obo:RO_0002222 (temporal relation)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0002222 "temporal relation"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002222 "move to BFO?")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 "Allen")
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporal relation"@en)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002223 (starts)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0002223 "starts"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002223 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002223 "inverse of starts with")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002223 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002223 "Allen")
AnnotationAssertion(rdfs:label obo:RO_0002223 "starts"@en)
SubObjectPropertyOf(obo:RO_0002223 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002223 obo:RO_0002222)
ObjectPropertyDomain(obo:RO_0002223 obo:BFO_0000035)
ObjectPropertyRange(obo:RO_0002223 obo:BFO_0000015)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002233 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)

# Object Property: obo:RO_0002234 (has output)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002234 "p has output c iff c is a participant in p, c is present at the end of p, and c is not present at the beginning of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002234 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002234 "produces")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002234 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002234 "has output"@en)
SubObjectPropertyOf(obo:RO_0002234 obo:RO_0000057)

# Object Property: obo:RO_0002350 (member of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
EquivalentObjectProperties(obo:RO_0002350 ObjectInverseOf(obo:RO_0002351))
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)

# Object Property: obo:RO_0002351 (has member)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002351 obo:ro.owl)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
EquivalentObjectProperties(obo:RO_0002351 ObjectInverseOf(obo:RO_0002350))
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002352 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)

# Object Property: obo:RO_0002353 (output of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002353 "inverse of has output")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002353 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000412 obo:RO_0002353 obo:ro.owl)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)

# Object Property: ontologies:TURBO_0000301 (participates in via role)

AnnotationAssertion(dc:creator ontologies:TURBO_0000301 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000301 "2018-01-11T14:36:32Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000301 "partInVR")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000301 "participates in via role")
SubObjectPropertyOf(ontologies:TURBO_0000301 obo:RO_0000056)
ObjectPropertyDomain(ontologies:TURBO_0000301 obo:BFO_0000002)
ObjectPropertyRange(ontologies:TURBO_0000301 obo:BFO_0000003)

# Object Property: ontologies:TURBO_0000302 (linked in dataset with)

AnnotationAssertion(obo:IAO_0000112 ontologies:TURBO_0000302 "In some database table about employment, my social security number appears in the same row with some employer identification number.  (Alternatively, they both appear in the same XML or JSON path, etc.)  Either way, a rule could be written in (or outside of) OWL interpreting that co-occurrence to mean that I am employed by the institution denoted by that employer identification number.

Applications, like Drivetrain, may perform some (closed-world?) checks before instantiating the implied relationship:  if there is, in reality, no institution denoted by the employer identification number, the system might refuse to instantiate any statement at all about who I work for.")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000302 "A relationship between two information content entities that are connected or linked by placement in the same structural subdivision of a dataset and intended to be about entities that have some relationship in reality.")
AnnotationAssertion(dc:creator ontologies:TURBO_0000302 "Chris Stoeckert")
AnnotationAssertion(dc:creator ontologies:TURBO_0000302 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000302 "2018-01-23T15:00:15Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000302 "sharesRowWith")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000302 "this is a non-owl shortcut, stating that two ICE were found on the same row of a data table.  This may lead to a conclusion that the two ICEs are values borne by two things that have some relationship in reality.

For example, if a patient identifier and an encounter identifier were found in the same row, one might infer that the denoted participant participated in the denoted encounter with a participation under investigation role.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000302 "linked in dataset with")
SymmetricObjectProperty(ontologies:TURBO_0000302)
ObjectPropertyDomain(ontologies:TURBO_0000302 obo:IAO_0000030)
ObjectPropertyRange(ontologies:TURBO_0000302 obo:IAO_0000030)

# Object Property: ontologies:TURBO_0000303 (has birth)

AnnotationAssertion(dc:creator ontologies:TURBO_0000303 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000303 "2017-09-20T14:07:39Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000303 "hasBirthO")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000303 "lets referent track births (for which each person only has one) rather than birth dates")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000303 "has birth")
ObjectPropertyDomain(ontologies:TURBO_0000303 obo:NCBITaxon_9606)
ObjectPropertyRange(ontologies:TURBO_0000303 obo:BFO_0000035)

# Object Property: ro:has_proper_part (has_proper_part)

AnnotationAssertion(obo:IAO_0000412 ro:has_proper_part obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 ro:has_proper_part "http://purl.org/obo/owl/relationship"^^xsd:string)
AnnotationAssertion(oboInOwl:hasAlternativeId ro:has_proper_part "OBO_REL:0000007")
AnnotationAssertion(oboInOwl:hasOBONamespace ro:has_proper_part "relationship")
AnnotationAssertion(rdfs:label ro:has_proper_part "has_proper_part"@en)
SubObjectPropertyOf(ro:has_proper_part owl:topObjectProperty)

# Object Property: owl:topObjectProperty (owl:topObjectProperty)

AnnotationAssertion(obo:IAO_0000412 owl:topObjectProperty obo:ido.owl)


############################
#   Data Properties
############################

# Data Property: Thesaurus:code (Thesaurus:code)

AnnotationAssertion(rdfs:comment Thesaurus:code "double check property type in NCIT download")

# Data Property: obo:GENO_0000896 (has_string)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000896 "Property linking a sequence to a string representing the ordered units that comprise the sequence (e.g. 'atgcagctagctaccgtcgatcg').")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000896 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000896 "has_string")
DataPropertyDomain(obo:GENO_0000896 obo:GENO_0000702)
DataPropertyRange(obo:GENO_0000896 xsd:string)

# Data Property: obo:IAO_0000004 (has measurement value)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000004 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000004 "has measurement value"@en)
SubDataPropertyOf(obo:IAO_0000004 owl:topDataProperty)
FunctionalDataProperty(obo:IAO_0000004)
DataPropertyDomain(obo:IAO_0000004 obo:IAO_0000032)
DataPropertyRange(obo:IAO_0000004 xsd:double)

# Data Property: obo:OBI_0001937 (has specified numeric value)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001937 "has specified numeric value")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001937 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001937 "A relation between a value specification and a number that quantifies it.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001937 "A range of 'real' might be better than 'float'. For now we follow 'has measurement value' until we can consider technical issues with SPARQL queries and reasoning.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001937 "PERSON: James A. Overton")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001937 "OBI")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001937 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001937 "has specified numeric value")
SubDataPropertyOf(obo:OBI_0001937 obo:OBI_0002135)
DataPropertyDomain(obo:OBI_0001937 obo:OBI_0001933)
DataPropertyRange(obo:OBI_0001937 owl:real)

# Data Property: obo:OBI_0002135 (has specified value)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002135 "has specified value"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002135 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002135 "A relation between a value specification and a literal.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0002135 "This is not an RDF/OWL object property. It is intended to link a value found in e.g. a database column of 'M' (the literal) to an instance of a value specification class, which can then be linked to indicate that this is about the biological gender of a human subject.")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002135 "OBI")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0002135 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0002135 "has specified value"@en)
DataPropertyDomain(obo:OBI_0002135 obo:OBI_0001933)

# Data Property: ontologies:TURBO_0000601 (shortcut biobank consenter to data shortcut)

AnnotationAssertion(dc:creator ontologies:TURBO_0000601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000601 "2018-01-22T13:48:27Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000601 "ScConsenter2Data")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000601 "shortcut biobank consenter to data shortcut")
SubDataPropertyOf(ontologies:TURBO_0000601 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0000601 ontologies:TURBO_0000502)

# Data Property: ontologies:TURBO_0000602 (shortcut biobank consenter to biological sex URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0000602 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000602 "2018-01-22T13:52:22Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000602 "ScConsenter2BioSexUri")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000602 "shortcut biobank consenter to biological sex URI string")
SubDataPropertyOf(ontologies:TURBO_0000602 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000602 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000602 xsd:anyURI)

# Data Property: ontologies:TURBO_0000603 (shortcut biobank consenter to dataset title)

AnnotationAssertion(dc:creator ontologies:TURBO_0000603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000603 "2018-01-22T13:54:45Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000603 "ScConsenter2DataSet")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000603 "shortcut biobank consenter to dataset title")
SubDataPropertyOf(ontologies:TURBO_0000603 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000603 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000603 xsd:string)

# Data Property: ontologies:TURBO_0000604 (shortcut biobank consenter to textual date of birth text)

AnnotationAssertion(dc:creator ontologies:TURBO_0000604 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000604 "2018-01-22T13:55:40Z"^^xsd:dateTime)
AnnotationAssertion(dc:date ontologies:TURBO_0000604 "2018-02-27T21:32:54Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000604 "ScConsenter2DOBText")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000604 "shortcut biobank consenter to textual date of birth text")
SubDataPropertyOf(ontologies:TURBO_0000604 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000604 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000604 xsd:string)

# Data Property: ontologies:TURBO_0000605 (shortcut biobank consenter to xsd-formatted date of birth)

AnnotationAssertion(dc:creator ontologies:TURBO_0000605 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000605 "2018-01-22T13:56:37Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000605 "ScConsenter2DOBXsd")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000605 "shortcut biobank consenter to xsd-formatted date of birth")
SubDataPropertyOf(ontologies:TURBO_0000605 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000605 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000605 xsd:date)

# Data Property: ontologies:TURBO_0000606 (shortcut biobank consenter to gender identity datum text)

AnnotationAssertion(dc:creator ontologies:TURBO_0000606 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000606 "2018-01-22T13:57:40Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000606 "ScConsenter2GIDText")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000606 "shortcut biobank consenter to gender identity datum text")
SubDataPropertyOf(ontologies:TURBO_0000606 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000606 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000606 xsd:string)

# Data Property: ontologies:TURBO_0000607 (shortcut biobank consenter to gender identity datum URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0000607 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000607 "2018-01-22T14:03:37Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000607 "ScConsenter2GIDUri")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000607 "shortcut biobank consenter to gender identity datum URI string")
SubDataPropertyOf(ontologies:TURBO_0000607 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000607 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000607 xsd:anyURI)

# Data Property: ontologies:TURBO_0000608 (shortcut biobank consenter to biobank consenter CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000608 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000608 "2018-01-22T14:05:09Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000608 "ScConsenter2ConsenterCRIDsymbol")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000608 "shortcut biobank consenter to biobank consenter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0000608 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000608 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000608 xsd:string)

# Data Property: ontologies:TURBO_0000609 (shortcut biobank consenter to biobank consenter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000609 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000609 "2018-01-24T17:46:48Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000609 "shortcut biobank consenter to biobank consenter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0000609 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000609 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000609 xsd:string)

# Data Property: ontologies:TURBO_0000610 (shortcut biobank consenter to biobank consenter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0000610 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000610 "2018-01-24T17:47:54Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000610 "shortcut biobank consenter to biobank consenter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0000610 ontologies:TURBO_0000601)
DataPropertyDomain(ontologies:TURBO_0000610 ontologies:TURBO_0000502)
DataPropertyRange(ontologies:TURBO_0000610 xsd:string)

# Data Property: ontologies:TURBO_0000621 (shortcut biobank encounter to data)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000621 "ScBBEnc2Data")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000621 "still working out the relationships between biobank encounters and health care encounters.  use separate properties due to domain constraint?  or make a parent class?")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000621 "shortcut biobank encounter to data")
SubDataPropertyOf(ontologies:TURBO_0000621 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0000621 ontologies:TURBO_0000527)

# Data Property: ontologies:TURBO_0000623 (shortcut biobank encounter to data set title)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000623 "ScBBEnc2DataSet")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000623 "shortcut biobank encounter to data set title")
SubDataPropertyOf(ontologies:TURBO_0000623 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000623 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000623 xsd:string)

# Data Property: ontologies:TURBO_0000624 (shortcut biobank encounter to textual encounter date)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000624 "ScBBEnc2EncDateText")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000624 "the textual representation of a date isn't technically interdependent with anything else.  However, if it was present in tabular data, it should be passed on with this shortcut, to provide provenance for the xsd representation of the date")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000624 "shortcut biobank encounter to textual encounter date")
SubDataPropertyOf(ontologies:TURBO_0000624 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000624 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000624 xsd:string)

# Data Property: ontologies:TURBO_0000625 (shortcut biobank encounter to xsd-formatted  encounter date)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000625 "ScBBEnc2EncDateXsd")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000625 "shortcut biobank encounter to xsd-formatted  encounter date")
SubDataPropertyOf(ontologies:TURBO_0000625 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000625 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000625 xsd:date)

# Data Property: ontologies:TURBO_0000626 (shortcut biobank encounter to height in cm)

AnnotationAssertion(dc:creator ontologies:TURBO_0000626 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000626 "2017-11-09T15:17:05Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000626 "ScBBEnc2HeightCm")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000626 "shortcut biobank encounter to height in cm")
SubDataPropertyOf(ontologies:TURBO_0000626 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000626 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000626 xsd:float)

# Data Property: ontologies:TURBO_0000627 (shortcut biobank encounter to weight in kg)

AnnotationAssertion(dc:creator ontologies:TURBO_0000627 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000627 "2017-11-09T15:17:25Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000627 "ScBBEnc2WeightKg")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000627 "shortcut biobank encounter to weight in kg")
SubDataPropertyOf(ontologies:TURBO_0000627 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000627 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000627 xsd:float)

# Data Property: ontologies:TURBO_0000628 (shortcut biobank encounter to encounter CRID symbol)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000628 "ScBBEnc2EncSymb")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000628 "shortcut biobank encounter to encounter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0000628 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000628 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000628 xsd:string)

# Data Property: ontologies:TURBO_0000629 (shortcut biobank encounter to encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000629 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000629 "2018-01-26T16:09:56Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000629 "shortcut biobank encounter to encounter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0000629 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000629 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000629 xsd:string)

# Data Property: ontologies:TURBO_0000630 (shortcut biobank encounter to encounter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0000630 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000630 "2018-01-26T16:10:39Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000630 "shortcut biobank encounter to encounter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0000630 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000630 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000630 xsd:string)

# Data Property: ontologies:TURBO_0000635 (shortcut biobank encounter to BMI)

AnnotationAssertion(dc:creator ontologies:TURBO_0000635 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000635 "2017-10-24T13:05:28Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000635 "ScBBEnc2BMI")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000635 "shortcut biobank encounter to BMI")
SubDataPropertyOf(ontologies:TURBO_0000635 ontologies:TURBO_0000621)
DataPropertyDomain(ontologies:TURBO_0000635 ontologies:TURBO_0000527)
DataPropertyRange(ontologies:TURBO_0000635 xsd:float)

# Data Property: ontologies:TURBO_0000641 (shortcut health care encounter to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0000641 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000641 "2017-09-05T16:21:09Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000641 "ScHcEnc2Data")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000641 "This property and any of its sub properties link an instance of \"biobank study participant\" with some literal value.  See comments on parent class.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000641 "shortcut health care encounter to data")
SubDataPropertyOf(ontologies:TURBO_0000641 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0000641 obo:OGMS_0000097)

# Data Property: ontologies:TURBO_0000643 (shortcut health care encounter to data set title)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000643 "ScHcEnc2DataSet")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000643 "TODO:  what should the dataset contain as parts in our encounter only shortcut expansion?
    encounter id instance
    encounter date instance (is the fact that the text value and mapped xsd value are both values of the same instance enough to explain the conversion?  i.e., which value is actually in the data set and which is derived? is the fact that a data owner made the conversion in Karma enough justification?  as in the data owner is saying that they are identical values like 2 and two?  is this another process?)
    diagnosis (the whole CRID? ** the code symbol and the registry denoter separately?**  what about the mapped registry URI?... No, that's not an ice in a data set.  But we might want to explain the conversion processes from string to URI, like I suggested for string to xsd date.)

registry and date conversions could be rule sin the instantiation process?")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000643 "This shortcut links a health care encounter ?e (OGMS_0000097) to a textual title for a dataset ?t (IAO_0000100).  Expansion involve creating a dataset instance, which will be the input into an R2R instantiation process ?i.

              ?e  rdf:type         obo:OGMS_0000097 .
              ?d  rdf:type           obo:IAO_0000100 ;
                      obo:BFO_0000051     ?p ;
                      dc11:title          ?dsTitle .
            ?i
                      rdf:type            :R2RInstantiation ;
                      obo:OBI_0000293     ?d .
  
Note that the encounter and the dataset are still not bound above.  The expander must find paths (in either orientation) between the encounter and the data set, via some information content entities

Here's an illustration of \"any path\" in sparql, but only going in one orientation.

        ?e rdf:type  <http://purl.obolibrary.org/obo/OGMS_0000097> .
        ?e (:|!:)* ?o .
        ?o ?p ?v 

That is, ?v could be the value of an identifier ?o that denotes the encounter, or it could be the value of diagnosis code that is part of a diagnosis CRID that was the output of the encounter.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000643 "shortcut health care encounter to data set title")
SubDataPropertyOf(ontologies:TURBO_0000643 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000643 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000643 xsd:string)

# Data Property: ontologies:TURBO_0000644 (shortcut health care encounter to textual encounter date)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000644 "ScHcEnc2EncDateText")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000644 "This shortcut links a health care encounter ?e (OGMS_0000097) to the textual representation ?tv of the date ?d (turbo:ProcStartTimeMeas) on which the encounter took place .  Furthermore, date ?d is about the temporal boundary ?es (turbo:HealthcareEncStart) that starts encounter ?e.  ?tv will typically part of some dataset (see ScEnc2DataSet.)

            ?e  rdf:type         obo:OGMS_0000097 .
            ?d  rdf:type           :ProcStartTimeMeas ;
                      :hasTextualValue    ?tv ;
                      obo:IAO_0000136     ?es .
            ?es  rdf:type          :HealthcareEncStart ;
                      obo:RO_0002223      ?e .
 
Although not constrained at this point (?) the ?tv's type would reasonably be an xsd:string.

Note that TURBO will typically expect an xsd:date literal bound to date instances like ?d.  As of the end of August 2017, that means that the textual date value will need to be converted to an xsd:date within a python transformation, in Karma.")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000644 "the textual representation of a date isn't technically interdependent with anything else.  However, if it was present in tabular data, it should be passed on with this shortcut, to provide provenance for the xsd representation of the date")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000644 "shortcut health care encounter to textual encounter date")
SubDataPropertyOf(ontologies:TURBO_0000644 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000644 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000644 xsd:string)

# Data Property: ontologies:TURBO_0000645 (shortcut health care encounter to xsd-formatted encounter date)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000645 "ScHcEnc2EncDateXsd")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000645 "definition \"This shortcut links a health care encounter ?e (OGMS_0000097) to and xsd:date literal ?xv, which is the measurement value* of date ?d (turbo:ProcStartTimeMeas) on which the encounter took place .  Furthermore, date ?d is about the temporal boundary ?es (turbo:HealthcareEncStart) that starts encounter ?e

?xv will typcally part of some dataset (see ScEnc2DataSet.)

In semi-turtle syntax, It means that 

            ?d  rdf:type           :ProcStartTimeMeas ;
                     obo:IAO_0000004    ?xv ;
                      obo:IAO_0000136     ?es .
            ?e  rdf:type         obo:OGMS_0000097 .
            ?es  rdf:type          :HealthcareEncStart ;
                      obo:RO_0002223      ?e .

As of the end of August 2017, that means that a textual date value will need to be converted to an xsd:date within a python transformation, in Karma.

*oops, this violates the xsd:float range expectation of has measurement value (IAO_0000004) as defined in the IAO owl file.
I added xsd:date to that range definition within turbo.owl and turbo_merged.owl.  Some applications seem to accept the dual range, but some (like top braid composer) only seem to consider one of the datatype ranges…  first found in the file???

I have also created turbo:hasDateValue\"")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000645 "shortcut health care encounter to xsd-formatted encounter date")
SubDataPropertyOf(ontologies:TURBO_0000645 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000645 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000645 xsd:date)

# Data Property: ontologies:TURBO_0000646 (shortcut health care encounter to height in cm)

AnnotationAssertion(dc:creator ontologies:TURBO_0000646 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000646 "2017-11-09T15:17:05Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000646 "ScHcEnc2HeightCm")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000646 "shortcut health care encounter to height in cm")
SubDataPropertyOf(ontologies:TURBO_0000646 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000646 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000646 xsd:float)

# Data Property: ontologies:TURBO_0000647 (shortcut health care encounter to weight in kg)

AnnotationAssertion(dc:creator ontologies:TURBO_0000647 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000647 "2017-11-09T15:17:25Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000647 "ScHcEnc2WeightKg")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000647 "shortcut health care encounter to weight in kg")
SubDataPropertyOf(ontologies:TURBO_0000647 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000647 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000647 xsd:float)

# Data Property: ontologies:TURBO_0000648 (shortcut health care encounter to encounter ID symbol)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000648 "ScEnc2EncID")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000648 "this shortcut links a health care encounter ?e (OGMS_0000097) to the value ?iv of its identifier ?i. (turbo:EncounterID).  ?i denotes ?e.

            ?e  rdf:type         obo:OGMS_0000097 .
            ?i   rdf:type            :EncounterID ;
                      obo:IAO_0000219     ?e ;
                      :thingLiteralValue     ? iv.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000648 "shortcut health care encounter to encounter ID symbol")
SubDataPropertyOf(ontologies:TURBO_0000648 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000648 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000648 xsd:string)

# Data Property: ontologies:TURBO_0000649 (shortcut health care encounter to encounter registry denoter)

AnnotationAssertion(rdfs:comment ontologies:TURBO_0000649 "no example of use yet... we may end up saying that encounter identifiers don't really come from registries")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000649 "shortcut health care encounter to encounter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0000649 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000649 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000649 xsd:string)

# Data Property: ontologies:TURBO_0000650 (shortcut health care encounter to encounter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0000650 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000650 "2018-01-26T16:07:06Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000650 "shortcut health care encounter to encounter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0000650 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000650 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000650 xsd:string)

# Data Property: ontologies:TURBO_0000655 (shortcut health care encounter to BMI)

AnnotationAssertion(dc:creator ontologies:TURBO_0000655 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000655 "2017-10-24T13:05:28Z"^^xsd:dateTime)
AnnotationAssertion(dc:description ontologies:TURBO_0000655 "Used when instantiating tabular/relational data about health care encounters that includes a BMI column.

Upon expansion, 

:e a :healthCareEncounter ;
:hasSpecifiedOutput ?BMI.
:BMI a :bmiDataItem ;
:hasLiteralValue \"25\"^^xsd:float

upon participant-to-encounter joining:

:BMI :isAbout :adipose .
:adipose a :adiposeTissue ;
:partOf :studyParticipant .")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000655 "ScHcEnc2BMI")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000655 "shortcut health care encounter to BMI")
SubDataPropertyOf(ontologies:TURBO_0000655 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000655 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000655 xsd:float)

# Data Property: ontologies:TURBO_0000661 (shortcut health care encounter to diagnosis code symbol)

AnnotationAssertion(ontologies:TURBO_0000701 ontologies:TURBO_0000661 ontologies:ScEnc2DiagCodeRegUri)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000661 "ScHcEnc2DiagCode")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000661 "this shortcut links a health care encounter ?e (OGMS_0000097) to the value ?dcv of a diagnosis code symbol ?dcs. (turbo:EncounterDiagCodeSymbol).  ?dcs is part of a diagnosis CRID ?dcrid (turbo:DiagCodeRegitryID) and is typically part of some dataset (see ScEnc2DataSet.)  ?dcrid is the output of the encounter ?e.

            ?e  rdf:type         obo:OGMS_0000097 ;
                      obo:OBI_0000299     ?dcrid .
             ?dcrid  rdf:type          :DiagCrid ;
                      obo:BFO_0000051     ?dcs .
             ?dcs
                      rdf:type            :EncounterDiagCodeSymbol ;
                      :thingLiteralValue  ?dcv .")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000661 "shortcut health care encounter to diagnosis code symbol")
SubDataPropertyOf(ontologies:TURBO_0000661 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000661 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000661 xsd:string)

# Data Property: ontologies:TURBO_0000662 (shortcut health care encounter to diagnosis code registry denoter)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000662 "ScHcEnc2DiagCodeRegText")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000662 "the textual representation of a diagnosis code registry isn't technically interdependent with anything else.  However, if it was present in tabular data, it should be passed on with this shortcut  as provenance for the diagnosis code registry URI, which is interdependent with the diagnosis code symbol.")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000662 "this shortcut links a health care encounter ?e (OGMS_0000097) to the value ?drnv of a diagnosis code registry denoter ?dcrn (turbo:DiagCodeRegitryID), which denotes a registry instance ?dcru like  <http://purl.obolibrary.org/obo/NCIT_C71892> for ICD-10. 
 The mapping from denoters of registries to URIs that already exist in some ontology like NCIT will be the responsibility of the data owner and will be executed with a python transformation in Karma.  ?dcrn is part of a diagnosis CRID ?dcrid (turbo:DiagCrid) and ?drnv is typically part of some dataset (see ScEnc2DataSet.)  ?dcrid is the output of the encounter ?e.

            ?e  rdf:type         obo:OGMS_0000097 ;
                      obo:OBI_0000299     ?dcrid .
             ?dcrid  rdf:type          :DiagCrid ;
                      obo:BFO_0000051     ?dcrn .
            ?dcrn
                      rdf:type            :DiagCodeRegitryID ;
                      obo:IAO_0000219     ?dcru ;
                      :hasTextualValue    ?drnv .")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000662 "shortcut health care encounter to diagnosis code registry denoter")
SubDataPropertyOf(ontologies:TURBO_0000662 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000662 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000662 xsd:string)

# Data Property: ontologies:TURBO_0000663 (shortcut health care encounter to diagnosis code registry URI string)

AnnotationAssertion(ontologies:TURBO_0000701 ontologies:TURBO_0000663 ontologies:ScEnc2DiagCode)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000663 "ScHcEnc2DiagCodeRegUri")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000663 "failed parse rules for Karma?  assumes the tabular data being instantiated by Karma has a column of strings denoting diagnosis code registries.  Ideally a Karma python transformation will convert the strings into URIs for diagnosis code registry instances from some ontology like NCIT")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000663 "this shortcut links a health care encounter ?e (OGMS_0000097) to the URI of an instance of a diagnosis code registry ?dcru.  

the value ?drnv of a diagnosis code registry denoter ?dcrn (turbo:DiagCodeRegitryID) denotes a registry instance ?dcru like  <http://purl.obolibrary.org/obo/NCIT_C71892> for ICD-10.  The mapping from denoters of registries to URIs that already exist in some ontology like NCIT will be the responsibility of the data owner and will be executed with a python transformation in Karma.  ?dcrn is part of a diagnosis CRID ?dcrid (turbo:DiagCrid) and ?drnv is typically part of some dataset (see ScEnc2DataSet.)  ?dcrid is the output of the encounter ?e.

            ?e  rdf:type         obo:OGMS_0000097 ;
                      obo:OBI_0000299     ?dcrid .
             ?dcrid  rdf:type          :DiagCrid ;
                      obo:BFO_0000051     ?dcrn .
            ?dcrn
                      rdf:type            :DiagCodeRegitryID ;
                      obo:IAO_0000219     ?dcru ;
                      :hasTextualValue    ?drnv .")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000663 "shortcut health care encounter to diagnosis code registry URI string")
SubDataPropertyOf(ontologies:TURBO_0000663 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0000663 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0000663 xsd:anyURI)

# Data Property: ontologies:TURBO_0000670 (instantiation hybrid shortcut)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000670 "instantiationHybridShortcut")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000670 "this property and any sub properties are used to simplify the experience of using the Karma relational to RDF software.  They link instances/individuals to data literals, even (or especially!) when the literal is about an instance of some other class, not the subject of the shortcut triple.  It is the responsibility of the turbo application to expand shortcut triples into OBO/BFO triples, based on the shortcut predicate and the class of the instance in the subject position")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000670 "instantiation hybrid shortcut")
DataPropertyDomain(ontologies:TURBO_0000670 obo:BFO_0000001)

# Data Property: ontologies:TURBO_0001600 (shortcut biobank encounter CRID to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0001600 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001600 "2018-01-29T21:44:08Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001600 "shortcut biobank encounter CRID to data")
SubDataPropertyOf(ontologies:TURBO_0001600 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0001600 ontologies:TURBO_0000533)

# Data Property: ontologies:TURBO_0001601 (shortcut health care encounter CRID to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0001601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001601 "2018-01-29T21:45:02Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001601 "shortcut health care encounter CRID to data")
SubDataPropertyOf(ontologies:TURBO_0001601 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0001601 ontologies:TURBO_0000508)

# Data Property: ontologies:TURBO_0001603 (shortcut biobank encounter CRID to dataset title)

AnnotationAssertion(dc:creator ontologies:TURBO_0001603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001603 "2018-01-30T14:21:07Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001603 "shortcut biobank encounter CRID to dataset title")
SubDataPropertyOf(ontologies:TURBO_0001603 ontologies:TURBO_0001600)
DataPropertyDomain(ontologies:TURBO_0001603 ontologies:TURBO_0000533)
DataPropertyRange(ontologies:TURBO_0001603 xsd:string)

# Data Property: ontologies:TURBO_0001608 (shortcut biobank encounter CRID to biobank encounter CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0001608 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001608 "2018-01-30T15:54:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001608 "shortcut biobank encounter CRID to biobank encounter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0001608 ontologies:TURBO_0001600)
DataPropertyDomain(ontologies:TURBO_0001608 ontologies:TURBO_0000533)
DataPropertyRange(ontologies:TURBO_0001608 xsd:string)

# Data Property: ontologies:TURBO_0001609 (shortcut biobank encounter CRID to biobank encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0001609 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001609 "2018-01-30T14:19:17Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001609 "shortcut biobank encounter CRID to biobank encounter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0001609 ontologies:TURBO_0001600)
DataPropertyDomain(ontologies:TURBO_0001609 ontologies:TURBO_0000533)
DataPropertyRange(ontologies:TURBO_0001609 xsd:string)

# Data Property: ontologies:TURBO_0001610 (shortcut biobank encounter CRID to biobank encounter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0001610 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001610 "2018-01-30T14:17:41Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001610 "shortcut biobank encounter CRID to biobank encounter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0001610 ontologies:TURBO_0001600)
DataPropertyDomain(ontologies:TURBO_0001610 ontologies:TURBO_0000533)
DataPropertyRange(ontologies:TURBO_0001610 xsd:anyURI)

# Data Property: ontologies:TURBO_0001641 (shortcut health care encounter to drug prescription text)

AnnotationAssertion(dc:creator ontologies:TURBO_0001641 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001641 "2018-02-14T15:05:57Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001641 "shortcut health care encounter to drug prescription text")
SubDataPropertyOf(ontologies:TURBO_0001641 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0001641 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0001641 xsd:string)

# Data Property: ontologies:TURBO_0001642 (shortcut health care encounter to drug prescription CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0001642 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001642 "2018-02-27T21:47:38Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001642 "shortcut health care encounter to drug prescription CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0001642 ontologies:TURBO_0000641)
DataPropertyDomain(ontologies:TURBO_0001642 obo:OGMS_0000097)
DataPropertyRange(ontologies:TURBO_0001642 xsd:string)

# Data Property: ontologies:TURBO_0002603 (shortcut health care encounter CRID to dataset title)

AnnotationAssertion(dc:creator ontologies:TURBO_0002603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0002603 "2018-01-30T14:22:32Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0002603 "shortcut health care encounter CRID to dataset title")
SubDataPropertyOf(ontologies:TURBO_0002603 ontologies:TURBO_0001601)
DataPropertyDomain(ontologies:TURBO_0002603 ontologies:TURBO_0000508)
DataPropertyRange(ontologies:TURBO_0002603 xsd:string)

# Data Property: ontologies:TURBO_0002608 (shortcut health care encounter CRID to health care encounter CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0002608 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0002608 "2018-01-30T15:55:51Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0002608 "shortcut health care encounter CRID to health care encounter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0002608 ontologies:TURBO_0001601)
DataPropertyDomain(ontologies:TURBO_0002608 ontologies:TURBO_0000508)
DataPropertyRange(ontologies:TURBO_0002608 xsd:string)

# Data Property: ontologies:TURBO_0002609 (shortcut health care encounter CRID to health care encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0002609 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0002609 "2018-01-30T14:23:25Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0002609 "shortcut health care encounter CRID to health care encounter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0002609 ontologies:TURBO_0001601)
DataPropertyDomain(ontologies:TURBO_0002609 ontologies:TURBO_0000508)
DataPropertyRange(ontologies:TURBO_0002609 xsd:anyURI)

# Data Property: ontologies:TURBO_0002610 (shortcut health care encounter CRID to health care encounter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0002610 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0002610 "2018-01-30T14:24:07Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0002610 "shortcut health care encounter CRID to health care encounter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0002610 ontologies:TURBO_0001601)
DataPropertyDomain(ontologies:TURBO_0002610 ontologies:TURBO_0000508)
DataPropertyRange(ontologies:TURBO_0002610 xsd:string)

# Data Property: ontologies:TURBO_0003600 (shortcut biobank consenter CRID to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0003600 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0003600 "2018-01-30T16:20:12Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0003600 "shortcut biobank consenter CRID to data")
SubDataPropertyOf(ontologies:TURBO_0003600 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0003600 ontologies:TURBO_0000503)

# Data Property: ontologies:TURBO_0003603 (shortcut biobank consenter CRID to dataset title)

AnnotationAssertion(dc:creator ontologies:TURBO_0003603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0003603 "2018-01-30T16:29:11Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0003603 "shortcut biobank consenter CRID to dataset title")
SubDataPropertyOf(ontologies:TURBO_0003603 ontologies:TURBO_0003600)
DataPropertyDomain(ontologies:TURBO_0003603 ontologies:TURBO_0000503)
DataPropertyRange(ontologies:TURBO_0003603 xsd:string)

# Data Property: ontologies:TURBO_0003608 (shortcut biobank consenter CRID to biobank consenter CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0003608 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0003608 "2018-01-30T16:30:55Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0003608 "shortcut biobank consenter CRID to biobank consenter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0003608 ontologies:TURBO_0003600)
DataPropertyDomain(ontologies:TURBO_0003608 ontologies:TURBO_0000503)
DataPropertyRange(ontologies:TURBO_0003608 xsd:string)

# Data Property: ontologies:TURBO_0003609 (shortcut biobank consenter CRID to biobank consenter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0003609 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0003609 "2018-01-30T16:31:40Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0003609 "shortcut biobank consenter CRID to biobank consenter registry denoter")
SubDataPropertyOf(ontologies:TURBO_0003609 ontologies:TURBO_0003600)
DataPropertyDomain(ontologies:TURBO_0003609 ontologies:TURBO_0000503)
DataPropertyRange(ontologies:TURBO_0003609 xsd:string)

# Data Property: ontologies:TURBO_0003610 (shortcut biobank consenter CRID to biobank consenter identifier registry URI string)

AnnotationAssertion(dc:creator ontologies:TURBO_0003610 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0003610 "2018-01-30T16:30:02Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0003610 "shortcut biobank consenter CRID to biobank consenter identifier registry URI string")
SubDataPropertyOf(ontologies:TURBO_0003610 ontologies:TURBO_0003600)
DataPropertyDomain(ontologies:TURBO_0003610 ontologies:TURBO_0000503)
DataPropertyRange(ontologies:TURBO_0003610 xsd:anyURI)

# Data Property: ontologies:TURBO_0004600 (shortcut diagnosis to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0004600 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0004600 "2018-02-07T22:07:58Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0004600 "shortcut diagnosis to data")
SubDataPropertyOf(ontologies:TURBO_0004600 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0004600 obo:OGMS_0000073)

# Data Property: ontologies:TURBO_0004601 (shortcut diagnosis to diagnosis code symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0004601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0004601 "2018-02-07T22:08:58Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0004601 "shortcut diagnosis to diagnosis code symbol")
SubDataPropertyOf(ontologies:TURBO_0004601 ontologies:TURBO_0004600)
DataPropertyDomain(ontologies:TURBO_0004601 obo:OGMS_0000073)

# Data Property: ontologies:TURBO_0004602 (shortcut diagnosis to diagnosis code registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0004602 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0004602 "2018-02-07T22:09:53Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0004602 "shortcut diagnosis to diagnosis code registry denoter")
SubDataPropertyOf(ontologies:TURBO_0004602 ontologies:TURBO_0004600)
DataPropertyDomain(ontologies:TURBO_0004602 obo:OGMS_0000073)

# Data Property: ontologies:TURBO_0004603 (shortcut diagnosis to diagnosis code registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0004603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0004603 "2018-02-07T22:11:30Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0004603 "shortcut diagnosis to diagnosis code registry")
SubDataPropertyOf(ontologies:TURBO_0004603 ontologies:TURBO_0004600)
DataPropertyDomain(ontologies:TURBO_0004603 obo:OGMS_0000073)
DataPropertyRange(ontologies:TURBO_0004603 xsd:anyURI)

# Data Property: ontologies:TURBO_0005600 (shortcut prescription to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0005600 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0005600 "2018-02-28T17:27:03Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0005600 "shortcut prescription to data")
SubDataPropertyOf(ontologies:TURBO_0005600 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0005600 obo:PDRO_0000024)
DataPropertyRange(ontologies:TURBO_0005600 xsd:string)

# Data Property: ontologies:TURBO_0005601 (shortcut prescription to prescription CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0005601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0005601 "2018-02-28T17:27:53Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0005601 "shortcut prescription to prescription CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0005601 ontologies:TURBO_0005600)
DataPropertyDomain(ontologies:TURBO_0005601 obo:PDRO_0000024)
DataPropertyRange(ontologies:TURBO_0005601 xsd:string)

# Data Property: ontologies:TURBO_0005611 (shortcut prescription to prescription fullname/order_name)

AnnotationAssertion(dc:creator ontologies:TURBO_0005611 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0005611 "2018-02-28T17:32:40Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0005611 "shortcut prescription to prescription fullname/order_name")
SubDataPropertyOf(ontologies:TURBO_0005611 ontologies:TURBO_0005600)
DataPropertyDomain(ontologies:TURBO_0005611 obo:PDRO_0000024)
DataPropertyRange(ontologies:TURBO_0005611 xsd:string)

# Data Property: ontologies:TURBO_0005612 (shortcut prescription to drug uri string)

AnnotationAssertion(dc:creator ontologies:TURBO_0005612 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0005612 "2018-02-28T17:34:33Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0005612 "shortcut prescription to drug uri string")
SubDataPropertyOf(ontologies:TURBO_0005612 ontologies:TURBO_0005600)
DataPropertyDomain(ontologies:TURBO_0005612 obo:PDRO_0000024)
DataPropertyRange(ontologies:TURBO_0005612 xsd:anyURI)

# Data Property: ontologies:TURBO_0006510 (has literal value)

AnnotationAssertion(obo:IAO_0000112 ontologies:TURBO_0006510 "If X is a gender identity datum in a data set (and is therefore a from a subclass of owl:Thing), then it's literal value might be 'M' or 'male' or '0', or any other value provided by the author of the data set.")
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0006510 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0006510 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0006510 "2017-04-12T14:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006510 "thingLiteralValue")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006510 "20170905:  see OBI discussion of specified values, e.g. tracker item 818")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006510 "previous label was 'literal value of any owl:Thing'")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006510 "the creation of this data property was motivated by the observation that there was no general-purpose data property in any OBO foundry ontology that took a string range")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006510 "has literal value"@en)
DataPropertyDomain(ontologies:TURBO_0006510 obo:IAO_0000030)
DataPropertyRange(ontologies:TURBO_0006510 rdfs:Literal)

# Data Property: ontologies:TURBO_0006511 (has date value)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006511 "hasDateValue")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006511 "I have seen \"has measurement value\" used for dates, but it has a plain numerical range in (OBI?  OBIB?)  I had added date as a second range for hmv, but Top Braid Composer only seems to consider the “first” range when determining what relationships can be drawn between two instances in graph mode.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006511 "has date value")
SubDataPropertyOf(ontologies:TURBO_0006511 ontologies:TURBO_0006510)
DataPropertyDomain(ontologies:TURBO_0006511 obo:IAO_0000030)
DataPropertyRange(ontologies:TURBO_0006511 xsd:date)

# Data Property: ontologies:TURBO_0006512 (has textual value)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0006512 "hasTextualValue")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0006512 "analogous to has specified value, but not limited to numerical ranges.  links a datum to a literal.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0006512 "has textual value")
SubDataPropertyOf(ontologies:TURBO_0006512 ontologies:TURBO_0006510)
DataPropertyDomain(ontologies:TURBO_0006512 obo:IAO_0000030)
DataPropertyRange(ontologies:TURBO_0006512 xsd:string)

# Data Property: ontologies:TURBO_0007600 (shortcut allele info to data)

AnnotationAssertion(dc:creator ontologies:TURBO_0007600 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007600 "2018-05-16T20:31:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007600 "shortcut allele info to data")
SubDataPropertyOf(ontologies:TURBO_0007600 ontologies:TURBO_0000670)
DataPropertyDomain(ontologies:TURBO_0007600 obo:OBI_0001352)

# Data Property: ontologies:TURBO_0007601 (shortcut allele info to biobank encounter CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0007601 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007601 "2018-05-16T20:33:06Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007601 "shortcut allele info to biobank encounter CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0007601 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007601 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007601 xsd:string)

# Data Property: ontologies:TURBO_0007602 (shortcut allele info to geno_id CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0007602 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007602 "2018-05-16T20:34:07Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007602 "shortcut allele info to geno_id CRID symbol")
SubDataPropertyOf(ontologies:TURBO_0007602 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007602 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007602 xsd:string)

# Data Property: ontologies:TURBO_0007603 (shortcut allele info to geno_id registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0007603 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007603 "2018-05-16T20:35:37Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007603 "shortcut allele info to geno_id registry")
SubDataPropertyOf(ontologies:TURBO_0007603 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007603 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007603 xsd:anyURI)

# Data Property: ontologies:TURBO_0007604 (shortcut allele info to protein)

AnnotationAssertion(dc:creator ontologies:TURBO_0007604 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007604 "2018-05-16T20:36:34Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007604 "shortcut allele info to protein")
SubDataPropertyOf(ontologies:TURBO_0007604 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007604 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007604 xsd:anyURI)

# Data Property: ontologies:TURBO_0007605 (shortcut allele info to gene text)

AnnotationAssertion(dc:creator ontologies:TURBO_0007605 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007605 "2018-05-16T20:37:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007605 "shortcut allele info to gene text")
SubDataPropertyOf(ontologies:TURBO_0007605 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007605 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007605 xsd:string)

# Data Property: ontologies:TURBO_0007606 (shortcut allele info to zygosity value text)

AnnotationAssertion(dc:creator ontologies:TURBO_0007606 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007606 "2018-05-16T20:37:54Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007606 "shortcut allele info to zygosity value text")
SubDataPropertyOf(ontologies:TURBO_0007606 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007606 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007606 xsd:string)

# Data Property: ontologies:TURBO_0007607 (shortcut allele info to zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0007607 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007607 "2018-05-16T20:38:37Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007607 "shortcut allele info to zygosity value specification")
SubDataPropertyOf(ontologies:TURBO_0007607 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007607 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007607 xsd:anyURI)

# Data Property: ontologies:TURBO_0007608 (shortcut allele info to dataset title)

AnnotationAssertion(dc:creator ontologies:TURBO_0007608 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0007608 "2018-05-17T11:23:59Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0007608 "shortcut allele info to dataset title")
SubDataPropertyOf(ontologies:TURBO_0007608 ontologies:TURBO_0007600)
DataPropertyDomain(ontologies:TURBO_0007608 obo:OBI_0001352)
DataPropertyRange(ontologies:TURBO_0007608 xsd:string)



############################
#   Classes
############################

# Class: faldo:Position (Position)

AnnotationAssertion(obo:IAO_0000115 faldo:Position "Superclass for the general concept of a position on a sequence. The sequence is designated with the reference predicate.")
AnnotationAssertion(obo:IAO_0000412 faldo:Position obo:geno.owl)
AnnotationAssertion(rdfs:label faldo:Position "Position"@en)
SubClassOf(faldo:Position obo:GENO_0000815)

# Class: faldo:Region (Region)

AnnotationAssertion(obo:IAO_0000115 faldo:Region "A region describes a length of sequence with a start position and end position that represents a feature on a sequence, e.g. a gene")
AnnotationAssertion(obo:IAO_0000412 faldo:Region obo:geno.owl)
AnnotationAssertion(rdfs:label faldo:Region "Region"@en)
SubClassOf(faldo:Region obo:SO_0000110)
SubClassOf(faldo:Region ObjectIntersectionOf(ObjectExactCardinality(1 faldo:begin faldo:Position) ObjectExactCardinality(1 faldo:end faldo:Position)))

# Class: Thesaurus:C49474 (International Classification of Diseases)

AnnotationAssertion(rdfs:label Thesaurus:C49474 "International Classification of Diseases")
SubClassOf(Thesaurus:C49474 ontologies:TURBO_0000556)

# Class: obo:BFO_0000001 (entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000001 "entity")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000001 "Entity")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000001 "entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Julius Caesar"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Verdi’s Requiem"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "the Second World War"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "your body mass index"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000001 "BFO 2 Reference: In all areas of empirical inquiry we encounter general terms of two sorts. First are general terms which refer to universals or types:animaltuberculosissurgical procedurediseaseSecond, are general terms used to refer to groups of entities which instantiate a given universal but do not correspond to the extension of any subuniversal of that universal because there is nothing intrinsic to the entities in question by virtue of which they – and only they – are counted as belonging to the given group. Examples are: animal purchased by the Emperortuberculosis diagnosed on a Wednesdaysurgical procedure performed on a patient from Stockholmperson identified as candidate for clinical trial #2056-555person who is signatory of Form 656-PPVpainting by Leonardo da VinciSuch terms, which represent what are called ‘specializations’ in [81"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000001 "Entity doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example Werner Ceusters 'portions of reality' include 4 sorts, entities (as BFO construes them), universals, configurations, and relations. It is an open question as to whether entities as construed in BFO will at some point also include these other portions of reality. See, for example, 'How to track absolutely everything' at http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:ogms.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000001 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000001 "An entity is anything that exists or has existed or will exist. (axiom label in BFO2 Reference: [001-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000001 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000001 "entity"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000001 "entity"^^xsd:string)
SubClassOf(obo:BFO_0000001 owl:Thing)

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000002 "continuant")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000002 "Continuant")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000002 "continuant"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity  that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000002 "An entity that exists in full at any time in which it exists at all, persists through time while maintaining its identity and has no temporal parts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000002 "BFO 2 Reference: Continuant entities are entities which can be sliced to yield parts only along the spatial dimension, yielding for example the parts of your table which we call its legs, its top, its nails. ‘My desk stretches from the window to the door. It has spatial parts, and can be sliced (in space) in two. With respect to time, however, a thing is a continuant.’ [60, p. 240"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000002 "Continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example, in an expansion involving bringing in some of Ceuster's other portions of reality, questions are raised as to whether universals are continuants"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000002 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000002 "A continuant is an entity that persists, endures, or continues to exist through time while maintaining its identity. (axiom label in BFO2 Reference: [008-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, c has_continuant_part b at t, then c is a continuant. (axiom label in BFO2 Reference: [126-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, cis continuant_part of b at t, then c is a continuant. (axiom label in BFO2 Reference: [009-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000002 "if b is a material entity, then there is some temporal interval (referred to below as a one-dimensional temporal region) during which b exists. (axiom label in BFO2 Reference: [011-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (continuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [009-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (hasContinuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [126-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Continuant x) (Entity x))) // axiom label in BFO2 CLIF: [008-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Material Entity x) (exists (t) (and (TemporalRegion t) (existsAt x t))))) // axiom label in BFO2 CLIF: [011-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000002 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant")
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"^^xsd:string)
SubClassOf(obo:BFO_0000002 obo:BFO_0000001)

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000003 "occurrent")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000003 "Occurrent")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000003 "occurrent"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000003 "An entity that has temporal parts and that happens, unfolds or develops through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: every occurrent that is not a temporal or spatiotemporal region is s-dependent on some independent continuant that is not a spatial region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: s-dependence obtains between every process and its participants in the sense that, as a matter of necessity, this process could not have existed unless these or those participants existed also. A process may have a succession of participants at different phases of its unfolding. Thus there may be different players on the field at different times during the course of a football game; but the process which is the entire game s-depends_on all of these players nonetheless. Some temporal parts of this process will s-depend_on on only some of the players."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "Occurrent doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. An example would be the sum of a process and the process boundary of another process."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "Simons uses different terminology for relations of occurrents to regions: Denote the spatio-temporal location of a given occurrent e by 'spn[e]' and call this region its span. We may say an occurrent is at its span, in any larger region, and covers any smaller region. Now suppose we have fixed a frame of reference so that we can speak not merely of spatio-temporal but also of spatial regions (places) and temporal regions (times). The spread of an occurrent, (relative to a frame of reference) is the space it exactly occupies, and its spell is likewise the time it exactly occupies. We write 'spr[e]' and `spl[e]' respectively for the spread and spell of e, omitting mention of the frame.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000003 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000003 "An occurrent is an entity that unfolds itself in time or it is the instantaneous boundary of such an entity (for example a beginning or an ending) or it is a temporal or spatiotemporal region which such an entity occupies_temporal_region or occupies_spatiotemporal_region. (axiom label in BFO2 Reference: [077-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000003 "Every occurrent occupies_spatiotemporal_region some spatiotemporal region. (axiom label in BFO2 Reference: [108-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000003 "b is an occurrent entity iff b is an entity that has temporal parts. (axiom label in BFO2 Reference: [079-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (if (Occurrent x) (exists (r) (and (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion x r))))) // axiom label in BFO2 CLIF: [108-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (iff (Occurrent x) (and (Entity x) (exists (y) (temporalPartOf y x))))) // axiom label in BFO2 CLIF: [079-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000003 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
SubClassOf(obo:BFO_0000003 obo:BFO_0000001)

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000004 "ic")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000004 "IndependentContinuant")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000004 "independent continuant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a chair"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a leg"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a spatial region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an orchestra."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the bottom right portion of a human torso"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the interior of your mouth"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "A continuant that is a bearer of quality and realizable entity entities, in which other entities inhere and which itself cannot inhere in anything."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000004 "b is an independent continuant = Def. b is a continuant which is such that there is no c and no t such that b s-depends_on c at t. (axiom label in BFO2 Reference: [017-002])"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000004 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000004 "For any independent continuant b and any time t there is some spatial region r such that b is located_in r at t. (axiom label in BFO2 Reference: [134-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000004 "For every independent continuant b and time t during the region of time spanned by its life, there are entities which s-depends_on b during t. (axiom label in BFO2 Reference: [018-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (IndependentContinuant x) (exists (r) (and (SpatialRegion r) (locatedInAt x r t))))) // axiom label in BFO2 CLIF: [134-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (and (IndependentContinuant x) (existsAt x t)) (exists (y) (and (Entity y) (specificallyDependsOnAt y x t))))) // axiom label in BFO2 CLIF: [018-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000004 "(iff (IndependentContinuant a) (and (Continuant a) (not (exists (b t) (specificallyDependsOnAt a b t))))) // axiom label in BFO2 CLIF: [017-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000004 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant")
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
SubClassOf(obo:BFO_0000004 ObjectSomeValuesFrom(obo:BFO_0000083 obo:BFO_0000006))
SubClassOf(obo:BFO_0000004 ObjectAllValuesFrom(obo:BFO_0000169 owl:Nothing))
SubClassOf(obo:BFO_0000004 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000020 obo:BFO_0000031))))
SubClassOf(obo:BFO_0000004 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000020 obo:BFO_0000031))))

# Class: obo:BFO_0000006 (spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000006 "s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000006 "SpatialRegion")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000006 "spatial region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000006 "BFO 2 Reference: Spatial regions do not participate in processes."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000006 "Spatial region doesn't have a closure axiom because the subclasses don't exhaust all possibilites. An example would be the union of a spatial point and a spatial line that doesn't overlap the point, or two spatial lines that intersect at a single point. In both cases the resultant spatial region is neither 0-dimensional, 1-dimensional, 2-dimensional, or 3-dimensional."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000006 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000006 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000006 "A spatial region is a continuant entity that is a continuant_part_of spaceR as defined relative to some frame R. (axiom label in BFO2 Reference: [035-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000006 "All continuant parts of spatial regions are spatial regions. (axiom label in BFO2 Reference: [036-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000006 "(forall (x y t) (if (and (SpatialRegion x) (continuantPartOfAt y x t)) (SpatialRegion y))) // axiom label in BFO2 CLIF: [036-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000006 "(forall (x) (if (SpatialRegion x) (Continuant x))) // axiom label in BFO2 CLIF: [035-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000006 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000006 "spatial region"@en)
SubClassOf(obo:BFO_0000006 obo:BFO_0000141)
SubClassOf(obo:BFO_0000006 ObjectAllValuesFrom(obo:BFO_0000176 obo:BFO_0000006))
SubClassOf(obo:BFO_0000006 ObjectAllValuesFrom(obo:BFO_0000178 obo:BFO_0000006))
SubClassOf(obo:BFO_0000006 ObjectAllValuesFrom(obo:BFO_0000186 obo:BFO_0000006))
SubClassOf(obo:BFO_0000006 ObjectAllValuesFrom(obo:BFO_0000187 obo:BFO_0000006))
SubClassOf(obo:BFO_0000006 ObjectHasSelf(obo:BFO_0000083))
SubClassOf(obo:BFO_0000006 ObjectHasSelf(obo:BFO_0000123))

# Class: obo:BFO_0000008 (temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000008 "t-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000008 "TemporalRegion")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000008 "temporal region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000008 "Temporal region doesn't have a closure axiom because the subclasses don't exhaust all possibilites. An example would be the mereological sum of a temporal instant and a temporal interval that doesn't overlap the instant. In this case the resultant temporal region is neither 0-dimensional nor 1-dimensional"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000008 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000008 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000008 "A temporal region is an occurrent entity that is part of time as defined relative to some reference frame. (axiom label in BFO2 Reference: [100-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000008 "All parts of temporal regions are temporal regions. (axiom label in BFO2 Reference: [101-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000008 "Every temporal region t is such that t occupies_temporal_region t. (axiom label in BFO2 Reference: [119-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000008 "(forall (r) (if (TemporalRegion r) (occupiesTemporalRegion r r))) // axiom label in BFO2 CLIF: [119-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000008 "(forall (x y) (if (and (TemporalRegion x) (occurrentPartOf y x)) (TemporalRegion y))) // axiom label in BFO2 CLIF: [101-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000008 "(forall (x) (if (TemporalRegion x) (Occurrent x))) // axiom label in BFO2 CLIF: [100-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000008 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000008 "temporal region"@en)
SubClassOf(obo:BFO_0000008 obo:BFO_0000003)
SubClassOf(obo:BFO_0000008 ObjectAllValuesFrom(obo:BFO_0000117 obo:BFO_0000008))
SubClassOf(obo:BFO_0000008 ObjectAllValuesFrom(obo:BFO_0000132 obo:BFO_0000008))
SubClassOf(obo:BFO_0000008 ObjectHasSelf(obo:BFO_0000155))
SubClassOf(obo:BFO_0000008 ObjectHasSelf(obo:BFO_0000156))

# Class: obo:BFO_0000011 (spatiotemporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000011 "st-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000011 "SpatiotemporalRegion")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000011 "spatiotemporal region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by a human life"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by a process of cellular meiosis."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by the development of a cancer tumor"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000011 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000011 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000011 "A spatiotemporal region is an occurrent entity that is part of spacetime. (axiom label in BFO2 Reference: [095-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "All parts of spatiotemporal regions are spatiotemporal regions. (axiom label in BFO2 Reference: [096-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "Each spatiotemporal region at any time t projects_onto some spatial region at t. (axiom label in BFO2 Reference: [099-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "Each spatiotemporal region projects_onto some temporal region. (axiom label in BFO2 Reference: [098-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "Every spatiotemporal region occupies_spatiotemporal_region itself."@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "Every spatiotemporal region s is such that s occupies_spatiotemporal_region s. (axiom label in BFO2 Reference: [107-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000011 "(forall (r) (if (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion r r))) // axiom label in BFO2 CLIF: [107-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000011 "(forall (x t) (if (SpatioTemporalRegion x) (exists (y) (and (SpatialRegion y) (spatiallyProjectsOntoAt x y t))))) // axiom label in BFO2 CLIF: [099-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000011 "(forall (x y) (if (and (SpatioTemporalRegion x) (occurrentPartOf y x)) (SpatioTemporalRegion y))) // axiom label in BFO2 CLIF: [096-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000011 "(forall (x) (if (SpatioTemporalRegion x) (Occurrent x))) // axiom label in BFO2 CLIF: [095-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000011 "(forall (x) (if (SpatioTemporalRegion x) (exists (y) (and (TemporalRegion y) (temporallyProjectsOnto x y))))) // axiom label in BFO2 CLIF: [098-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000011 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000011 "spatiotemporal region"@en)
SubClassOf(obo:BFO_0000011 obo:BFO_0000003)
SubClassOf(obo:BFO_0000011 ObjectSomeValuesFrom(obo:BFO_0000151 obo:BFO_0000006))
SubClassOf(obo:BFO_0000011 ObjectSomeValuesFrom(obo:BFO_0000153 obo:BFO_0000008))
SubClassOf(obo:BFO_0000011 ObjectAllValuesFrom(obo:BFO_0000117 obo:BFO_0000011))
SubClassOf(obo:BFO_0000011 ObjectAllValuesFrom(obo:BFO_0000132 obo:BFO_0000011))
SubClassOf(obo:BFO_0000011 ObjectHasSelf(obo:BFO_0000126))
SubClassOf(obo:BFO_0000011 ObjectHasSelf(obo:BFO_0000130))

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000015 "process")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000015 "Process")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000015 "process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of cell-division, \\ a beating of the heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of meiosis"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of sleeping"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the course of a disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the flight of a bird"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the life of an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "your process of aging."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "An occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000015 "p is a process = Def. p is an occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t. (axiom label in BFO2 Reference: [083-003])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000015 "BFO 2 Reference: The realm of occurrents is less pervasively marked by the presence of natural units than is the case in the realm of independent continuants. Thus there is here no counterpart of ‘object’. In BFO 1.0 ‘process’ served as such a counterpart. In BFO 2.0 ‘process’ is, rather, the occurrent counterpart of ‘material entity’. Those natural – as contrasted with engineered, which here means: deliberately executed – units which do exist in the realm of occurrents are typically either parasitic on the existence of natural units on the continuant side, or they are fiat in nature. Thus we can count lives; we can count football games; we can count chemical reactions performed in experiments or in chemical manufacturing. We cannot count the processes taking place, for instance, in an episode of insect mating behavior.Even where natural units are identifiable, for example cycles in a cyclical process such as the beating of a heart or an organism’s sleep/wake cycle, the processes in question form a sequence with no discontinuities (temporal gaps) of the sort that we find for instance where billiard balls or zebrafish or planets are separated by clear spatial gaps. Lives of organisms are process units, but they too unfold in a continuous series from other, prior processes such as fertilization, and they unfold in turn in continuous series of post-life processes such as post-mortem decay. Clear examples of boundaries of processes are almost always of the fiat sort (midnight, a time of death as declared in an operating theater or on a death certificate, the initiation of a state of war)"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000015 "(iff (Process a) (and (Occurrent a) (exists (b) (properTemporalPartOf b a)) (exists (c t) (and (MaterialEntity c) (specificallyDependsOnAt a c t))))) // axiom label in BFO2 CLIF: [083-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000015 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)
SubClassOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:BFO_0000169 obo:BFO_0000040))
SubClassOf(obo:BFO_0000015 ObjectAllValuesFrom(obo:BFO_0000117 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000035)))
SubClassOf(obo:BFO_0000015 ObjectAllValuesFrom(obo:BFO_0000132 obo:BFO_0000015))

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000016 "disposition")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000016 "Disposition")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000016 "disposition"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "an atom of element X has the disposition to decay to an atom of element Y"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "certain people have a predisposition to colon cancer"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "children are innately disposed to categorize objects in certain ways."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "the cell wall is disposed to filter chemicals in endocitosis and exocitosis"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "the cell wall is disposed to filter chemicals in endocytosis and exocytosis"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000016 "BFO 2 Reference: Dispositions exist along a strength continuum. Weaker forms of disposition are realized in only a fraction of triggering cases. These forms occur in a significant number of cases of a similar type [89"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000016 "BFO 2 Reference: Dispositions exist along a strength continuum. Weaker forms of disposition are realized in only a fraction of triggering cases. These forms occur in a significant number of cases of a similar type."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000016 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000016 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000016 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000016 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000016 "b is a disposition means: b is a realizable entity & b’s bearer is some material entity & b is such that if it ceases to exist, then its bearer is physically changed, & b’s realization occurs when and because this bearer is in some special physical circumstances, & this realization occurs in virtue of the bearer’s physical make-up. (axiom label in BFO2 Reference: [062-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000016 "If b is a realizable entity then for all t at which b exists, b s-depends_on some material entity at t. (axiom label in BFO2 Reference: [063-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000016 "(forall (x t) (if (and (RealizableEntity x) (existsAt x t)) (exists (y) (and (MaterialEntity y) (specificallyDepends x y t))))) // axiom label in BFO2 CLIF: [063-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000016 "(forall (x) (if (Disposition x) (and (RealizableEntity x) (exists (y) (and (MaterialEntity y) (bearerOfAt x y t)))))) // axiom label in BFO2 CLIF: [062-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000016 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
SubClassOf(obo:BFO_0000016 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(obo:BFO_0000023)))
SubClassOf(obo:BFO_0000016 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(obo:BFO_0000023)))

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000017 "realizable")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000017 "RealizableEntity")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000017 "realizable entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of this piece of metal to conduct electricity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of your blood to coagulate"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the function of your reproductive organs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of this boundary to delineate where Utah and Colorado meet"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000017 "A specifically dependent continuant  that inheres in continuant  entities and are not exhibited in full at every time in which it inheres in an entity or group of entities. The exhibition or actualization of a realizable entity is a particular manifestation, functioning or process that occurs under certain circumstances."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000017 "To say that b is a realizable entity is to say that b is a specifically dependent continuant that inheres in some independent continuant which is not a spatial region and is of a type instances of which are realized in processes of a correlated type. (axiom label in BFO2 Reference: [058-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000017 "All realizable dependent continuants have independent continuants that are not spatial regions as their bearers. (axiom label in BFO2 Reference: [060-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000017 "(forall (x t) (if (RealizableEntity x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (bearerOfAt y x t))))) // axiom label in BFO2 CLIF: [060-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000017 "(forall (x) (if (RealizableEntity x) (and (SpecificallyDependentContinuant x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (inheresIn x y)))))) // axiom label in BFO2 CLIF: [058-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000017 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
SubClassOf(obo:BFO_0000017 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(obo:BFO_0000019)))
SubClassOf(obo:BFO_0000017 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(obo:BFO_0000019)))

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000019 "quality")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000019 "Quality")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000019 "quality"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the ambient temperature of this portion of air"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the color of a tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the length of the circumference of your waist"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the mass of this piece of gold."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nose"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nostril"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000019 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000019 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000019 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000019 "a quality is a specifically dependent continuant that, in contrast to roles and dispositions, does not require any further process in order to be realized. (axiom label in BFO2 Reference: [055-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000019 "If an entity is a quality at any time that it exists, then it is a quality at every time that it exists. (axiom label in BFO2 Reference: [105-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (Quality x) (SpecificallyDependentContinuant x))) // axiom label in BFO2 CLIF: [055-001] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (exists (t) (and (existsAt x t) (Quality x))) (forall (t_1) (if (existsAt x t_1) (Quality x))))) // axiom label in BFO2 CLIF: [105-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000019 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)
SubClassOf(obo:BFO_0000019 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(obo:BFO_0000017)))
SubClassOf(obo:BFO_0000019 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(obo:BFO_0000017)))

# Class: obo:BFO_0000020 (specifically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000020 "sdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000020 "SpecificallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000020 "specifically dependent continuant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "Reciprocal specifically dependent continuants: the function of this key to open this lock and the mutually dependent disposition of this lock: to be opened by this key"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of one-sided specifically dependent continuants: the mass of this tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of relational dependent continuants (multiple bearers): John’s love for Mary, the ownership relation between John and this statue, the relation of authority between John and his subordinates."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the disposition of this fish to decay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the function of this heart: to pump blood"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of proton donors and acceptors in chemical reactions [79"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of the role predator and the role prey as played by two organisms in a given interaction"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the pink color of a medium rare piece of grilled filet mignon at its center"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the shape of this hole."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the smell of this portion of mozzarella"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant  that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "A continuant that inheres in or is borne by other entities. Every instance of A requires some specific instance of B which must always be the same."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "b is a relational specifically dependent continuant = Def. b is a specifically dependent continuant and there are n &gt; 1 independent continuants c1, … cn which are not spatial regions are such that for all 1  i &lt; j  n, ci  and cj share no common parts, are such that for each 1  i  n, b s-depends_on ci at every time t during the course of b’s existence (axiom label in BFO2 Reference: [131-004])"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000020 "b is a specifically dependent continuant = Def. b is a continuant & there is some independent continuant c which is not a spatial region and which is such that b s-depends_on c at every time t during the course of b’s existence. (axiom label in BFO2 Reference: [050-003])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000020 "Specifically dependent continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. We're not sure what else will develop here, but for example there are questions such as what are promises, obligation, etc."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:oae.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000020 "(iff (RelationalSpecificallyDependentContinuant a) (and (SpecificallyDependentContinuant a) (forall (t) (exists (b c) (and (not (SpatialRegion b)) (not (SpatialRegion c)) (not (= b c)) (not (exists (d) (and (continuantPartOfAt d b t) (continuantPartOfAt d c t)))) (specificallyDependsOnAt a b t) (specificallyDependsOnAt a c t)))))) // axiom label in BFO2 CLIF: [131-004] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000020 "(iff (SpecificallyDependentContinuant a) (and (Continuant a) (forall (t) (if (existsAt a t) (exists (b) (and (IndependentContinuant b) (not (SpatialRegion b)) (specificallyDependsOnAt a b t))))))) // axiom label in BFO2 CLIF: [050-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000020 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant")
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
SubClassOf(obo:BFO_0000020 obo:BFO_0000001)
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
SubClassOf(obo:BFO_0000020 ObjectSomeValuesFrom(obo:BFO_0000052 ObjectIntersectionOf(obo:BFO_0000004 ObjectComplementOf(obo:BFO_0000006))))
SubClassOf(obo:BFO_0000020 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000004 obo:BFO_0000031))))
SubClassOf(obo:BFO_0000020 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000004 obo:BFO_0000031))))

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000023 "role")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000023 "Role")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000023 "role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "John’s role of husband to Mary is dependent on Mary’s role of wife to John, and both are dependent on the object aggregate comprising John and Mary as member parts joined together through the relational quality of being married."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the priest role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a boundary to demarcate two neighboring administrative territories"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a building in serving as a military target"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a stone in marking a property boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of subject in a clinical trial"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the student role"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000023 "A realizable entity  the manifestation of which brings about some result or end that is not essential to a continuant  in virtue of the kind of thing that it is but that can be served or participated in by that kind of continuant  in some kinds of natural, social or institutional contexts."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000023 "BFO 2 Reference: One major family of examples of non-rigid universals involves roles, and ontologies developed for corresponding administrative purposes may consist entirely of representatives of entities of this sort. Thus ‘professor’, defined as follows,b instance_of professor at t =Def. there is some c, c instance_of professor role & c inheres_in b at t.denotes a non-rigid universal and so also do ‘nurse’, ‘student’, ‘colonel’, ‘taxpayer’, and so forth. (These terms are all, in the jargon of philosophy, phase sortals.) By using role terms in definitions, we can create a BFO conformant treatment of such entities drawing on the fact that, while an instance of professor may be simultaneously an instance of trade union member, no instance of the type professor role is also (at any time) an instance of the type trade union member role (any more than any instance of the type color is at any time an instance of the type length).If an ontology of employment positions should be defined in terms of roles following the above pattern, this enables the ontology to do justice to the fact that individuals instantiate the corresponding universals –  professor, sergeant, nurse – only during certain phases in their lives."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000023 "b is a role means: b is a realizable entity & b exists because there is some single bearer that is in some special physical, social, or institutional set of circumstances in which this bearer does not have to be& b is not such that, if it ceases to exist, then the physical make-up of the bearer is thereby changed. (axiom label in BFO2 Reference: [061-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000023 "(forall (x) (if (Role x) (RealizableEntity x))) // axiom label in BFO2 CLIF: [061-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000023 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)
SubClassOf(obo:BFO_0000023 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(obo:BFO_0000016)))
SubClassOf(obo:BFO_0000023 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(obo:BFO_0000016)))

# Class: obo:BFO_0000024 (fiat object part)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000024 "fiat-object")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000024 "FiatObjectPart")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "or with divisions drawn by cognitive subjects for practical reasons, such as the division of a cake (before slicing) into (what will become) slices (and thus member parts of an object aggregate). However, this does not mean that fiat object parts are dependent for their existence on divisions or delineations effected by cognitive subjects. If, for example, it is correct to conceive geological layers of the Earth as fiat object parts of the Earth, then even though these layers were first delineated in recent times, still existed long before such delineation and what holds of these layers (for example that the oldest layers are also the lowest layers) did not begin to hold because of our acts of delineation.Treatment of material entity in BFOExamples viewed by some as problematic cases for the trichotomy of fiat object part, object, and object aggregate include: a mussel on (and attached to) a rock, a slime mold, a pizza, a cloud, a galaxy, a railway train with engine and multiple carriages, a clonal stand of quaking aspen, a bacterial community (biofilm), a broken femur. Note that, as Aristotle already clearly recognized, such problematic cases – which lie at or near the penumbra of instances defined by the categories in question – need not invalidate these categories. The existence of grey objects does not prove that there are not objects which are black and objects which are white; the existence of mules does not prove that there are not objects which are donkeys and objects which are horses. It does, however, show that the examples in question need to be addressed carefully in order to show how they can be fitted into the proposed scheme, for example by recognizing additional subdivisions [29"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the FMA:regional parts of an intact human body."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the Western hemisphere of the Earth"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the division of the brain into regions"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the division of the planet into hemispheres"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the dorsal and ventral surfaces of the body"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the upper and lower lobes of the left lung"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000024 "BFO 2 Reference: Most examples of fiat object parts are associated with theoretically drawn divisions"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000024 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000024 "b is a fiat object part = Def. b is a material entity which is such that for all times t, if b exists at t then there is some object c such that b proper continuant_part of  c at t and c is demarcated from the remainder of c by a two-dimensional continuant fiat boundary. (axiom label in BFO2 Reference: [027-004])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000024 "(forall (x) (if (FiatObjectPart x) (and (MaterialEntity x) (forall (t) (if (existsAt x t) (exists (y) (and (Object y) (properContinuantPartOfAt x y t)))))))) // axiom label in BFO2 CLIF: [027-004] ")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BFO_0000024 "bfo"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:BFO_0000024 "BFO:0000024"^^xsd:string)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000024 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000024 "fiat object"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000024 "fiat object part"^^xsd:string)
SubClassOf(obo:BFO_0000024 obo:BFO_0000040)

# Class: obo:BFO_0000027 (object aggregate)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000027 "object-aggregate")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000027 "ObjectAggregate")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000027 "object aggregate"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a collection of cells in a blood biobank."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a swarm of bees is an aggregate of members who are linked together through natural bonds"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a symphony orchestra"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "an organization is an aggregate whose member parts have roles of specific types (for example in a jazz band, a chess club, a football team)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined by fiat: the aggregate of members of an organization"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical attachment: the aggregate of atoms in a lump of granite"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical containment: the aggregate of molecules of carbon dioxide in a sealed container"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined via attributive delimitations such as: the patients in this hospital"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of bearings in a constant velocity axle joint"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of blood cells in your body"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the nitrogen atoms in the atmosphere"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the restaurants in Palo Alto"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "your collection of Meissen ceramic plates."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000027 "An entity a is an object aggregate if and only if there is a mutually exhaustive and pairwise disjoint partition of a into objects ")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000027 "BFO 2 Reference: object aggregates may gain and lose parts while remaining numerically identical (one and the same individual) over time. This holds both for aggregates whose membership is determined naturally (the aggregate of cells in your body) and aggregates determined by fiat (a baseball team, a congressional committee)."@en)
AnnotationAssertion(obo:IAO_0000119 obo:BFO_0000027 "ISBN:978-3-938793-98-5pp124-158#Thomas Bittner and Barry Smith, 'A Theory of Granular Partitions', in K. Munn and B. Smith (eds.), Applied Ontology: An Introduction, Frankfurt/Lancaster: ontos, 2008, 125-158.")
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000027 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000027 "b is an object aggregate means: b is a material entity consisting exactly of a plurality of objects as member_parts at all times at which b exists. (axiom label in BFO2 Reference: [025-004])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000027 "(forall (x) (if (ObjectAggregate x) (and (MaterialEntity x) (forall (t) (if (existsAt x t) (exists (y z) (and (Object y) (Object z) (memberPartOfAt y x t) (memberPartOfAt z x t) (not (= y z)))))) (not (exists (w t_1) (and (memberPartOfAt w x t_1) (not (Object w)))))))) // axiom label in BFO2 CLIF: [025-004] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000027 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000027 "object aggregate"@en)
SubClassOf(obo:BFO_0000027 obo:BFO_0000040)

# Class: obo:BFO_0000028 (three-dimensional spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000028 "3d-s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000028 "ThreeDimensionalSpatialRegion")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000028 "three-dimensional spatial region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000028 "a cube-shaped region of space"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000028 "a sphere-shaped region of space,"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000028 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000028 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000028 "A three-dimensional spatial region is a spatial region that is of three dimensions. (axiom label in BFO2 Reference: [040-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000028 "(forall (x) (if (ThreeDimensionalSpatialRegion x) (SpatialRegion x))) // axiom label in BFO2 CLIF: [040-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000028 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000028 "three-dimensional spatial region"@en)
SubClassOf(obo:BFO_0000028 obo:BFO_0000006)

# Class: obo:BFO_0000030 (object)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000030 "object")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000030 "Object")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000030 "object"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "cell"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "cells and organisms"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "engineered artifacts"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "grain of sand"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "organelle"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "planet"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "solid portions of matter"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "star"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: BFO rests on the presupposition that at multiple micro-, meso- and macroscopic scales reality exhibits certain stable, spatially separated or separable material units, combined or combinable into aggregates of various sorts (for example organisms into what are called ‘populations’). Such units play a central role in almost all domains of natural science from particle physics to cosmology. Many scientific laws govern the units in question, employing general terms (such as ‘molecule’ or ‘planet’) referring to the types and subtypes of units, and also to the types and subtypes of the processes through which such units develop and interact. The division of reality into such natural units is at the heart of biological science, as also is the fact that these units may form higher-level units (as cells form multicellular organisms) and that they may also form aggregates of units, for example as cells form portions of tissue and organs form families, herds, breeds, species, and so on. At the same time, the division of certain portions of reality into engineered units (manufactured artifacts) is the basis of modern industrial technology, which rests on the distributed mass production of engineered parts through division of labor and on their assembly into larger, compound units such as cars and laptops. The division of portions of reality into units is one starting point for the phenomenon of counting."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: Each object is such that there are entities of which we can assert unproblematically that they lie in its interior, and other entities of which we can assert unproblematically that they lie in its exterior. This may not be so for entities lying at or near the boundary between the interior and exterior. This means that two objects – for example the two cells depicted in Figure 3 – may be such that there are material entities crossing their boundaries which belong determinately to neither cell. Something similar obtains in certain cases of conjoined twins (see below)."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: To say that b is causally unified means: b is a material entity which is such that its material parts are tied together in such a way that, in environments typical for entities of the type in question,if c, a continuant part of b that is in the interior of b at t, is larger than a certain threshold size (which will be determined differently from case to case, depending on factors such as porosity of external cover) and is moved in space to be at t at a location on the exterior of the spatial region that had been occupied by b at t, then either b’s other parts will be moved in coordinated fashion or b will be damaged (be affected, for example, by breakage or tearing) in the interval between t and t.causal changes in one part of b can have consequences for other parts of b without the mediation of any entity that lies on the exterior of b. Material entities with no proper material parts would satisfy these conditions trivially. Candidate examples of types of causal unity for material entities of more complex sorts are as follows (this is not intended to be an exhaustive list):CU1: Causal unity via physical coveringHere the parts in the interior of the unified entity are combined together causally through a common membrane or other physical covering\\. The latter points outwards toward and may serve a protective function in relation to what lies on the exterior of the entity [13, 47"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: an object is a maximal causally unified material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: ‘objects’ are sometimes referred to as ‘grains’ [74"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000030 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000030 "b is an object means: b is a material entity which manifests causal unity of one or other of the types CUn listed above & is of a type (a material universal) instances of which are maximal relative to this criterion of causal unity. (axiom label in BFO2 Reference: [024-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000030 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000030 "object"@en)
SubClassOf(obo:BFO_0000030 obo:BFO_0000040)

# Class: obo:BFO_0000031 (generically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000031 "gdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000031 "GenericallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000031 "generically dependent continuant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "The entries in your database are patterns instantiated as quality instances in your hard drive. The database itself is an aggregate of such patterns. When you create the database you create a particular instance of the generically dependent continuant type database. Each entry in the database is an instance of the generically dependent continuant type IAO: information content entity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the pdf file on your laptop, the pdf file that is a copy thereof on my laptop"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the sequence of this protein molecule; the sequence that is a copy thereof in that protein molecule."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000031 "A continuant that is dependent on one or other independent continuant bearers. For every instance of A requires some instance of (an independent continuant type) B but which instance of B serves can change from time to time."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000031 "b is a generically dependent continuant = Def. b is a continuant that g-depends_on one or more other entities. (axiom label in BFO2 Reference: [074-001])"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000031 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000031 "(iff (GenericallyDependentContinuant a) (and (Continuant a) (exists (b t) (genericallyDependsOnAt a b t)))) // axiom label in BFO2 CLIF: [074-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000031 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant")
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant"@en)
SubClassOf(obo:BFO_0000031 obo:BFO_0000002)
SubClassOf(obo:BFO_0000031 ObjectSomeValuesFrom(obo:BFO_0000058 obo:BFO_0000020))
SubClassOf(obo:BFO_0000031 ObjectAllValuesFrom(obo:BFO_0000176 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000004 obo:BFO_0000020))))
SubClassOf(obo:BFO_0000031 ObjectAllValuesFrom(obo:BFO_0000186 ObjectComplementOf(ObjectUnionOf(obo:BFO_0000004 obo:BFO_0000020))))

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000034 "function")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000034 "Function")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of a hammer to drive in nails"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of a heart pacemaker to regulate the beating of a heart through electricity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of amylase in saliva to break down starch into sugar"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000034 "BFO 2 Reference: In the past, we have distinguished two varieties of function, artifactual function and biological function. These are not asserted subtypes of BFO:function however, since the same function – for example: to pump, to transport – can exist both in artifacts and in biological entities. The asserted subtypes of function that would be needed in order to yield a separate monoheirarchy are not artifactual function, biological function, etc., but rather transporting function, pumping function, etc."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000034 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000034 "A function is a disposition that exists in virtue of the bearer’s physical make-up and this physical make-up is something the bearer possesses because it came into being, either through evolution (in the case of natural biological entities) or through intentional design (in the case of artifacts), in order to realize processes of a certain sort. (axiom label in BFO2 Reference: [064-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000034 "(forall (x) (if (Function x) (Disposition x))) // axiom label in BFO2 CLIF: [064-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000034 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000035 (process boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000035 "p-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000035 "ProcessBoundary")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000035 "process boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000035 "the boundary between the 2nd and 3rd year of your life."@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000035 "p is a process boundary =Def. p is a temporal part of a process & p has no proper temporal parts. (axiom label in BFO2 Reference: [084-001])"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000035 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000035 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000035 "Every process boundary occupies_temporal_region a zero-dimensional temporal region. (axiom label in BFO2 Reference: [085-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000035 "(forall (x) (if (ProcessBoundary x) (exists (y) (and (ZeroDimensionalTemporalRegion y) (occupiesTemporalRegion x y))))) // axiom label in BFO2 CLIF: [085-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000035 "(iff (ProcessBoundary a) (exists (p) (and (Process p) (temporalPartOf a p) (not (exists (b) (properTemporalPartOf b a)))))) // axiom label in BFO2 CLIF: [084-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000035 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000035 "process boundary"@en)
SubClassOf(obo:BFO_0000035 obo:BFO_0000003)
SubClassOf(obo:BFO_0000035 ObjectAllValuesFrom(obo:BFO_0000108 obo:BFO_0000148))
SubClassOf(obo:BFO_0000035 ObjectAllValuesFrom(obo:BFO_0000117 obo:BFO_0000035))
SubClassOf(obo:BFO_0000035 ObjectAllValuesFrom(obo:BFO_0000130 ObjectIntersectionOf(obo:BFO_0000011 ObjectSomeValuesFrom(obo:BFO_0000139 obo:BFO_0000011))))
SubClassOf(obo:BFO_0000035 ObjectAllValuesFrom(obo:BFO_0000132 ObjectUnionOf(obo:BFO_0000015 obo:BFO_0000035)))

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000040 "material")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000040 "MaterialEntity")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000040 "material entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a flame"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a forest fire"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a human being"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a hurricane"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a photon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a puff of smoke"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a sea wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a tornado"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an aggregate of human beings."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an energy wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an epidemic"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "the undetached arm of a human being"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000040 "An independent continuant that is spatially extended whose identity is independent of that of other entities and can be maintained through time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Material entities (continuants) can preserve their identity even while gaining and losing material parts. Continuants are contrasted with occurrents, which unfold themselves in successive temporal parts or phases [60"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Object, Fiat Object Part and Object Aggregate are not intended to be exhaustive of Material Entity. Users are invited to propose new subcategories of Material Entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: ‘Matter’ is intended to encompass both mass and energy (we will address the ontological treatment of portions of energy in a later version of BFO). A portion of matter is anything that includes elementary particles among its proper or improper parts: quarks and leptons, including electrons, as the smallest particles thus far discovered; baryons (including protons and neutrons) at a higher level of granularity; atoms and molecules at still higher levels, forming the cells, organs, organisms and other material entities studied by biologists, the portions of rock studied by geologists, the fossils studied by paleontologists, and so on.Material entities are three-dimensional entities (entities extended in three spatial dimensions), as contrasted with the processes in which they participate, which are four-dimensional entities (entities extended also along the dimension of time).According to the FMA, material entities may have immaterial entities as parts – including the entities identified below as sites; for example the interior (or ‘lumen’) of your small intestine is a part of your body. BFO 2.0 embodies a decision to follow the FMA here."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:BFO)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000040 "A material entity is an independent continuant that has some portion of matter as proper or improper continuant part. (axiom label in BFO2 Reference: [019-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000040 "Every entity which has a material entity as continuant part is a material entity. (axiom label in BFO2 Reference: [020-002])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000040 "every entity of which a material entity is continuant part is also a material entity. (axiom label in BFO2 Reference: [021-002])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (MaterialEntity x) (IndependentContinuant x))) // axiom label in BFO2 CLIF: [019-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt x y t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [021-002] ")
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt y x t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [020-002] ")
AnnotationAssertion(oboInOwl:hasOBONamespace obo:BFO_0000040 "bfo"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:BFO_0000040 "BFO:0000040"^^xsd:string)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000040 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity")
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"^^xsd:string)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)
SubClassOf(obo:BFO_0000040 ObjectAllValuesFrom(obo:BFO_0000083 obo:BFO_0000028))
SubClassOf(obo:BFO_0000040 ObjectAllValuesFrom(obo:BFO_0000176 obo:BFO_0000040))
SubClassOf(obo:BFO_0000040 ObjectAllValuesFrom(obo:BFO_0000178 ObjectUnionOf(obo:BFO_0000040 obo:BFO_0000141)))
SubClassOf(obo:BFO_0000040 ObjectAllValuesFrom(obo:BFO_0000186 obo:BFO_0000040))
SubClassOf(obo:BFO_0000040 ObjectAllValuesFrom(obo:BFO_0000187 ObjectUnionOf(obo:BFO_0000040 obo:BFO_0000141)))

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000141 "immaterial")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000141 "ImmaterialEntity")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000141 "immaterial entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000141 "BFO 2 Reference: Immaterial entities are divided into two subgroups:boundaries and sites, which bound, or are demarcated in relation, to material entities, and which can thus change location, shape and size and as their material hosts move or change shape or size (for example: your nasal passage; the hold of a ship; the boundary of Wales (which moves with the rotation of the Earth) [38, 7, 10"@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000141 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000141 obo:pdro.owl)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000141 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)
SubClassOf(obo:BFO_0000141 obo:BFO_0000004)
SubClassOf(obo:BFO_0000141 ObjectAllValuesFrom(obo:BFO_0000178 obo:BFO_0000141))
SubClassOf(obo:BFO_0000141 ObjectAllValuesFrom(obo:BFO_0000178 ObjectComplementOf(obo:BFO_0000040)))
SubClassOf(obo:BFO_0000141 ObjectAllValuesFrom(obo:BFO_0000187 obo:BFO_0000141))
SubClassOf(obo:BFO_0000141 ObjectAllValuesFrom(obo:BFO_0000187 ObjectComplementOf(obo:BFO_0000040)))

# Class: obo:BFO_0000148 (zero-dimensional temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000148 "0d-t-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000148 "ZeroDimensionalTemporalRegion")
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000148 "zero-dimensional temporal region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "a temporal region that is occupied by a process boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "right now"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment at which a child is born"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment at which a finger is detached in an industrial accident"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment of death."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000148 "temporal instant."@en)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000148 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000148 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000148 "A zero-dimensional temporal region is a temporal region that is without extent. (axiom label in BFO2 Reference: [102-001])"@en)
AnnotationAssertion(obo:IAO_0000602 obo:BFO_0000148 "(forall (x) (if (ZeroDimensionalTemporalRegion x) (TemporalRegion x))) // axiom label in BFO2 CLIF: [102-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000148 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000148 "zero-dimensional temporal region"@en)
SubClassOf(obo:BFO_0000148 obo:BFO_0000008)
SubClassOf(obo:BFO_0000148 ObjectAllValuesFrom(obo:BFO_0000118 owl:Nothing))

# Class: obo:CHEBI_16670 (peptide)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_16670 "peptide"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_16670 "Amide derived from two or more amino carboxylic acid molecules (the same or different) by formation of a covalent bond from the carbonyl carbon of one to the nitrogen atom of another with formal loss of water. The term is usually applied to structures formed from alpha-amino acids, but it includes those derived from any amino carboxylic acid. X = OH, OR, NH2, NHR, etc."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_16670 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_16670 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_16670 "peptide"^^xsd:string)
SubClassOf(obo:CHEBI_16670 obo:CHEBI_33839)

# Class: obo:CHEBI_16991 (deoxyribonucleic acid)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_16991 "deoxyribonucleic acid"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_16991 "High molecular weight, linear polymers, composed of nucleotides containing deoxyribose and linked by phosphodiester bonds; DNA contain the genetic information of organisms."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_16991 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_16991 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_16991 "deoxyribonucleic acid"^^xsd:string)
SubClassOf(obo:CHEBI_16991 obo:CHEBI_33696)

# Class: obo:CHEBI_23367 (molecular entity)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_23367 "molecular entity"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_23367 "Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer etc., identifiable as a separately distinguishable entity."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:CHEBI_23367 "We are assuming that every molecular entity has to be completely connected by chemical bonds. This excludes protein complexes, which are comprised of minimally two separate molecular entities. We will follow up with Chebi to ensure this is their understanding as well"@en)
AnnotationAssertion(obo:IAO_0000118 obo:CHEBI_23367 "molecular entity"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_23367 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_23367 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_23367 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_23367 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:CHEBI_23367 "molecular entity"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CHEBI_23367 "chebi_ontology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "."^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "entidad molecular"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "entidades moleculares"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "entite moleculaire"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "molecular entities"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_23367 "molekulare Entitaet"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:CHEBI_23367 "CHEBI:23367"^^xsd:string)
AnnotationAssertion(rdfs:label obo:CHEBI_23367 "molecular entity"^^xsd:string)
SubClassOf(obo:CHEBI_23367 obo:BFO_0000040)
SubClassOf(obo:CHEBI_23367 obo:CHEBI_24431)

# Class: obo:CHEBI_24431 (chemical entity)

AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_24431 "A chemical entity is a physical entity of interest in chemistry including molecular entities, parts thereof, and chemical substances."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_24431 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_24431 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_24431 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:CHEBI_24431 "chemical entity"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CHEBI_24431 "chebi_ontology"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_24431 "."^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:CHEBI_24431 "grouped_by_chemistry"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:CHEBI_24431 "CHEBI:24431"^^xsd:string)
AnnotationAssertion(rdfs:label obo:CHEBI_24431 "chemical entity"^^xsd:string)
SubClassOf(obo:CHEBI_24431 obo:BFO_0000040)

# Class: obo:CHEBI_33247 (organic group)

AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33247 "Any substituent group or skeleton containing carbon."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33247 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CHEBI_33247 "chebi_ontology"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:CHEBI_33247 "CHEBI:33247"^^xsd:string)
AnnotationAssertion(rdfs:label obo:CHEBI_33247 "organic group"^^xsd:string)
SubClassOf(obo:CHEBI_33247 obo:CHEBI_23367)

# Class: obo:CHEBI_33250 (atom)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_33250 "atom"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33250 "A chemical entity constituting the smallest component of an element having the chemical properties of the element."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33250 obo:chebi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_33250 "atom"^^xsd:string)
SubClassOf(obo:CHEBI_33250 obo:BFO_0000040)

# Class: obo:CHEBI_33696 (nucleic acid)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_33696 "nucleic acid"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33696 "A macromolecule made up of nucleotide units and hydrolysable into certain pyrimidine or purine bases (usually adenine, cytosine, guanine, thymine, uracil), D-ribose or 2-deoxy-D-ribose and phosphoric acid."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33696 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33696 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_33696 "nucleic acid"^^xsd:string)
SubClassOf(obo:CHEBI_33696 obo:CHEBI_33839)

# Class: obo:CHEBI_33697 (ribonucleic acid)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_33697 "ribonucleic acid"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33697 "High molecular weight, linear polymers, composed of nucleotides containing ribose and linked by phosphodiester bonds; RNA is central to the synthesis of proteins."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33697 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33697 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_33697 "ribonucleic acid"^^xsd:string)
SubClassOf(obo:CHEBI_33697 obo:CHEBI_33696)

# Class: obo:CHEBI_33708 (amino-acid residue)

AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33708 "When two or more amino acids combine to form a peptide, the elements of water are removed, and what remains of each amino acid is called an amino-acid residue."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33708 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:CHEBI_33708 "amino acid residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:CHEBI_33708 "protein residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CHEBI_33708 "chebi_ontology"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:CHEBI_33708 "CHEBI:33708"^^xsd:string)
AnnotationAssertion(rdfs:label obo:CHEBI_33708 "amino-acid residue"^^xsd:string)
SubClassOf(obo:CHEBI_33708 obo:CHEBI_33247)

# Class: obo:CHEBI_33839 (macromolecule)

AnnotationAssertion(obo:IAO_0000111 obo:CHEBI_33839 "macromolecule"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_33839 "A macromolecule is a molecule of high relative molecular mass, the structure of which essentially comprises the multiple repetition of units derived, actually or conceptually, from molecules of low relative molecular mass."^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:CHEBI_33839 "polymer"@en)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33839 obo:chebi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33839 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_33839 "macromolecule"^^xsd:string)
SubClassOf(obo:CHEBI_33839 obo:CHEBI_23367)

# Class: obo:CHEBI_50047 (organic amino compound)

AnnotationAssertion(obo:IAO_0000115 obo:CHEBI_50047 "A compound formally derived from ammonia by replacing one, two or three hydrogen atoms by organyl groups."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_50047 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:CHEBI_50047 "chebi_ontology"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:CHEBI_50047 "CHEBI:50047"^^xsd:string)
AnnotationAssertion(rdfs:label obo:CHEBI_50047 "organic amino compound"^^xsd:string)
SubClassOf(obo:CHEBI_50047 obo:CHEBI_23367)

# Class: obo:CL_0000000 (cell)

AnnotationAssertion(obo:IAO_0000111 obo:CL_0000000 "cell"@en)
AnnotationAssertion(obo:IAO_0000111 obo:CL_0000000 "cell"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:CL_0000000 "PMID:18089833.Cancer Res. 2007 Dec 15;67(24):12018-25. \"...Epithelial cells were harvested from histologically confirmed adenocarcinomas ..\""@en)
AnnotationAssertion(obo:IAO_0000115 obo:CL_0000000 "A material entity of anatomical origin (part of or deriving from an organism) that has as its parts a maximally connected cell compartment surrounded by a plasma membrane."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CL_0000000 obo:cl.owl)
AnnotationAssertion(obo:IAO_0000412 obo:CL_0000000 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:CL_0000000 "cell"@en)
AnnotationAssertion(rdfs:label obo:CL_0000000 "cell"^^xsd:string)
SubClassOf(obo:CL_0000000 obo:BFO_0000040)

# Class: obo:CL_0000010 (cultured cell)

AnnotationAssertion(obo:IAO_0000111 obo:CL_0000010 "cultured cell"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CL_0000010 "A cell in vitro that is or has been maintained or propagated as part of a cell culture."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CL_0000010 obo:cl.owl)
AnnotationAssertion(rdfs:label obo:CL_0000010 "cultured cell"^^xsd:string)
SubClassOf(obo:CL_0000010 obo:CL_0000578)
SubClassOf(obo:CL_0000010 ObjectUnionOf(ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0600036) ObjectSomeValuesFrom(obo:RO_0001000 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0600036))))

# Class: obo:CL_0000578 (experimentally modified cell in vitro)

AnnotationAssertion(obo:IAO_0000111 obo:CL_0000578 "experimentally modified cell in vitro"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:CL_0000578 "A cell in vitro that has undergone physical changes as a consequence of a deliberate and specific experimental procedure."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:CL_0000578 obo:cl.owl)
AnnotationAssertion(rdfs:label obo:CL_0000578 "experimentally modified cell in vitro"^^xsd:string)
SubClassOf(obo:CL_0000578 obo:CL_0000000)
SubClassOf(obo:CL_0000578 obo:OBI_0000047)
SubClassOf(obo:CL_0000578 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000094))

# Class: obo:DRON_00000001 (clinical drug role)

AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000001 "the role of a material entity to prevent, diagnose, treat, or study disease and/or its effects"@en)
AnnotationAssertion(obo:IAO_0000117 obo:DRON_00000001 "William Hogan")
AnnotationAssertion(obo:IAO_0000412 obo:DRON_00000001 obo:pdro.owl)
AnnotationAssertion(dc:creator obo:DRON_00000001 "William Hogan")
AnnotationAssertion(rdfs:label obo:DRON_00000001 "clinical drug role"@en)
SubClassOf(obo:DRON_00000001 obo:BFO_0000023)

# Class: obo:DRON_00000005 (drug product)

AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000005 "a material entity (1) containing at least one scattered molecular aggregate as part that is the bearer of an active ingredient role and (2) that is itself the bearer of a clinical drug role"@en)
AnnotationAssertion(obo:IAO_0000117 obo:DRON_00000005 "William Hogan"@en)
AnnotationAssertion(obo:IAO_0000412 obo:DRON_00000005 obo:pdro.owl)
AnnotationAssertion(dc:creator obo:DRON_00000005 "William Hogan"@en)
AnnotationAssertion(rdfs:label obo:DRON_00000005 "drug product"@en)
EquivalentClasses(obo:DRON_00000005 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:BFO_0000053 obo:DRON_00000001) ObjectSomeValuesFrom(ro:has_proper_part ObjectIntersectionOf(obo:OBI_0000576 ObjectSomeValuesFrom(obo:BFO_0000053 obo:DRON_00000028)))))
SubClassOf(obo:DRON_00000005 obo:BFO_0000040)

# Class: obo:DRON_00000028 (active ingredient)

AnnotationAssertion(obo:IAO_0000111 obo:DRON_00000028 "active ingredient role"@en)
AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000028 "a role of a scattered molecular aggregate that is part of a drug product that is realized by (1) administration of the drug to an organism followed by (2) some change in the structure or functioning of some part of the organism"@en)
AnnotationAssertion(obo:IAO_0000117 obo:DRON_00000028 "William R. Hogan"@en)
AnnotationAssertion(obo:IAO_0000412 obo:DRON_00000028 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:DRON_00000028 "active ingredient"@en)
SubClassOf(obo:DRON_00000028 obo:DRON_00000030)
SubClassOf(obo:DRON_00000028 ObjectAllValuesFrom(obo:BFO_0000054 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:BFO_0000051 obo:DRON_00000031) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:RO_0000057 obo:OBI_0000576) ObjectSomeValuesFrom(obo:RO_0000057 obo:OBI_0100026))))))

# Class: obo:DRON_00000030 (role of scattered molecular aggregate)

AnnotationAssertion(obo:IAO_0000111 obo:DRON_00000030 "role of a scattered molecular aggregate"@en)
AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000030 "a role borne by a scattered molecular aggregate and realized by its grains participating in one or more processes"@en)
AnnotationAssertion(obo:IAO_0000117 obo:DRON_00000030 "William R. Hogan"@en)
AnnotationAssertion(obo:IAO_0000412 obo:DRON_00000030 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:DRON_00000030 "role of scattered molecular aggregate"@en)
EquivalentClasses(obo:DRON_00000030 ObjectIntersectionOf(obo:BFO_0000023 ObjectSomeValuesFrom(obo:RO_0000052 obo:OBI_0000576)))
SubClassOf(obo:DRON_00000030 obo:BFO_0000023)

# Class: obo:DRON_00000031 (drug administration)

AnnotationAssertion(obo:IAO_0000111 obo:DRON_00000031 "administration of a drug product to an organism"@en)
AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000031 "a treatment that has as participants an extended organism and a drug product and that results in part of the drug product being located in the extended organism"@en)
AnnotationAssertion(obo:IAO_0000115 obo:DRON_00000031 "a treatment that has as participants an extended organism and a drug product and that results in part of the drug product being located in the extended organism."@en)
AnnotationAssertion(obo:IAO_0000116 obo:DRON_00000031 "We suggest that drug administration be removed as a subclass of treatment or that it be renamed drug treatment.

1. Not all administrations of a drug product to an organism are an instance of treatment. They could be for example, for prophylaxis, for diagnosis, etc.

2. Not all instances of drug administrations in a treatment satisfy the definition of treatment, where it would need to result in an alleviation of signs/symptoms. (e.g. first dose administration of an antibiotic)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:DRON_00000031 "William R. Hogan"@en)
AnnotationAssertion(obo:IAO_0000412 obo:DRON_00000031 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:DRON_00000031 "administration de médicament"@fr)
AnnotationAssertion(rdfs:label obo:DRON_00000031 "drug administration"@en)
SubClassOf(obo:DRON_00000031 obo:BFO_0000015)
SubClassOf(obo:DRON_00000031 obo:OGMS_0000090)
SubClassOf(obo:DRON_00000031 ObjectIntersectionOf(obo:OGMS_0000090 ObjectSomeValuesFrom(obo:RO_0000057 obo:DRON_00000005) ObjectSomeValuesFrom(obo:RO_0000057 obo:OBI_0100026)))

# Class: obo:ENVO_01000254 (environmental system)

AnnotationAssertion(obo:IAO_0000116 obo:ENVO_01000254 "1. Stub class to serve as root of hierarchy for imports from an ontology of environment and experimental conditions.

2. Need to consdier how to model environments in a way that covers ENVO and XCO content in a consistent and coherent way. A couple classes under Exploratory Class are relvant here. Consider how we might approach environments/condisitons using an EQ aproach analogous to how phenotypes are defined (i.e. consider environments/coonditions as qualities inhereing in some entity).")
AnnotationAssertion(obo:IAO_0000412 obo:ENVO_01000254 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:ENVO_01000254 "In ENVO's alignment with the Basic Formal Ontology, this class is being considered as a subclass of a proposed BFO class \"system\". The relation \"environed_by\" is also under development. Roughly, a system which includes a material entity (at least partially) within its site and causally influences that entity may be considered to environ it. Following the completion of this alignment, this class' definition and the definitions of its subclasses will be revised.")
AnnotationAssertion(rdfs:label obo:ENVO_01000254 "environmental system")
SubClassOf(obo:ENVO_01000254 obo:BFO_0000040)

# Class: obo:FMA_50707 (Anatomical location)

AnnotationAssertion(obo:IAO_0000115 obo:FMA_50707 "Spatial association relationship which describes the containment, adjacency and anatomical coordinates of physical anatomical entities. Examples: anatomical containment, anatomical adjacency, anatomical coordinate."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:FMA_50707 obo:fma.owl)
AnnotationAssertion(rdfs:label obo:FMA_50707 "Anatomical location"^^xsd:string)
SubClassOf(obo:FMA_50707 obo:BFO_0000002)

# Class: obo:GENO_0000133 (zygosity)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000133 "An allelic state that describes the degree of similarity of features at a particular locus in the genome (i.e. whether the alleles or haplotypes are the same or different).")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000133 "allelic state")
AnnotationAssertion(obo:IAO_0000119 obo:GENO_0000133 "derived from https://en.wikipedia.org/wiki/Zygosity")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000133 obo:geno.owl)
AnnotationAssertion(oboInOwl:hasDbXref obo:GENO_0000133 "http://semanticscience.org/resource/SIO_001263")
AnnotationAssertion(rdfs:label obo:GENO_0000133 "zygosity")
SubClassOf(obo:GENO_0000133 obo:GENO_0000875)
SubClassOf(obo:GENO_0000133 ObjectSomeValuesFrom(obo:RO_0000052 obo:GENO_0000516))

# Class: obo:GENO_0000135 (heterozygous)

AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000135 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000135 "heterozygous")
SubClassOf(obo:GENO_0000135 obo:GENO_0000391)

# Class: obo:GENO_0000136 (homozygous)

AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000136 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000136 "homozygous")
SubClassOf(obo:GENO_0000136 obo:GENO_0000391)

# Class: obo:GENO_0000391 (disomic zygosity)

AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000391 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000391 "disomic zygosity")
SubClassOf(obo:GENO_0000391 obo:GENO_0000133)

# Class: obo:GENO_0000481 (genomic feature)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000481 "A sequence feature that is part of the heritable genome of a cell or organism.")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000481 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000481 "A genomic feature is a continuous extent of sequence at a particular location in a genome, which can span any size from a complete chromosome, to a chromosomal band or region, to a gene, to a single base pair or even junction between base pairs (this would be a sequence feature with an extent of zero).  

As sequence features, instances of genomic features are identified by both their inherent *sequence* and their *position* in a genome - as determined by an alignment with some reference sequence. Accordingly, the 'ATG' start codon in the coding DNA sequence of the human AKT gene and the 'ATG' start codon in the human SHH gene represent two distinct genomic features despite having he same sequence, in virtue of their different positions in the genome.")
AnnotationAssertion(rdfs:label obo:GENO_0000481 "genomic feature"@en)
SubClassOf(obo:GENO_0000481 obo:SO_0000110)
SubClassOf(obo:GENO_0000481 ObjectSomeValuesFrom(obo:BFO_0000050 obo:SO_0001026))

# Class: obo:GENO_0000501 (wild-type allele)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000501 "An allele representing a highly common varaint (typically >99% in a population), that typically exhibits canonical function, and against which rare and/or non-functional mutant alleles are compared.")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000501 "wild-type allele")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000501 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000501 "'Wild-type' is typically contrasted with 'mutant', where 'wild-type' indicates a highly prevalent allele in a population (typically >99%), and/or some prototypical allele in a background genome that serves as a basis for some experimental alteration to generate a mutant allele, which can be selected for in establishing a mutant strain.

The notion of wild-type alleles is more common in model organism databases, where specific mutations are generated against a wild-type reference feature. Wild-type alleles are typically but not always used as reference alleles in sequence comparison/analysis applications. More than one wild-type sequence can exist for a given feature, but typically only one allele is deemed wild-type iin the context of a single dataset or analysis.")
AnnotationAssertion(rdfs:label obo:GENO_0000501 "wild-type allele")
SubClassOf(obo:GENO_0000501 obo:GENO_0000481)
SubClassOf(obo:GENO_0000501 ObjectSomeValuesFrom(obo:GENO_0000683 obo:GENO_0000481))

# Class: obo:GENO_0000516 (single locus feature complement)

AnnotationAssertion(obo:IAO_0000112 obo:GENO_0000516 "The set of two copies of the shha gene in a diiploid zebrafish genome, e.g. fgf8a<ti282a/+>.

The collection of the individual nucleotides present at the position 24126737 on across all copies of chromosome 5 in a particular human genome.
TO DO: show a VCF representation of this example.")
AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000516 "A genomic feature complement comprised of the set of all homologous features in a single genome that are found at a particular genomic locus.")
AnnotationAssertion(obo:IAO_0000116 obo:GENO_0000516 "Possible definitions for this concept: 
1. the set of all homologous features in a single genome that are found at a particular genomic location/span.

2. the set of all homologous instances of a particular feature in a single genome.

3. the set of all versions of a sequence found at a particular genetic locus in a single genome.")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000516 "allelic complement")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000516 "single locus complement")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000516 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000516 "- A genomic feature is any located feature in the genome, be it a junction, a single nucleotide, a gene, or an entire chromosome. 
- The notion of a \"complement\" describes the collection of all elements in some defined set.
- The notion of \"homologous\" genomic features describes those that occupy the same locus on homologous chromosomes.
- Therefore, we use the term \"single locus complement\" to describe the set of all homologous features present at a particular genomic locus.
- This complement is typically a pair of two features in a diploid genome (with two copies of each chromosome). E.g. a gene pair, a QTL pair, a nucleotide pair for a SNP, or a pair of entire chromosomes.")
AnnotationAssertion(rdfs:label obo:GENO_0000516 "single locus feature complement")
SubClassOf(obo:GENO_0000516 obo:GENO_0000660)

# Class: obo:GENO_0000659 (sequence feature complement)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000659 "An exhaustive collection of all sequence features of a specified  type (e.g. all chromosomes in a genome, all variant alleles in a genome, all copies of a given gene or allele in a genome).")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000659 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000659 "Not all sequence feature complements will be collections - i.e. in some cases the complement of all features of type X will consist of a single feature.  For example, a 'single locus complement' for an X-linked locus in a XY male.")
AnnotationAssertion(rdfs:label obo:GENO_0000659 "sequence feature complement"@en)
SubClassOf(obo:GENO_0000659 obo:GENO_0000701)

# Class: obo:GENO_0000660 (genomic feature complement)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000660 "An exhaustive collection of all features of a specified type in a single genome (e.g. all chromosomes in a genome, all variant features in a genome, all copies of a given gene or allele in a genome).")
AnnotationAssertion(obo:IAO_0000116 obo:GENO_0000660 "In some cases there may be zero or only one member of such a complement, which is why this class is not necessarily a 'sequence feature collection' (which has 2 or more members).")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000660 "genomic locus complement")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000660 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000660 "A genomic feature is any located sequence feature in the genome, from a single nucleotide to a gene into an entire chromosome. A complement is the collection of all elements in a set (i.e. \"the full number of things in a set\").  Here, a 'genomic feature complement' is here the set of all features in a single genome of a specified type (according to some define inclusion criteria).")
AnnotationAssertion(rdfs:label obo:GENO_0000660 "genomic feature complement"@en)
SubClassOf(obo:GENO_0000660 obo:GENO_0000659)

# Class: obo:GENO_0000701 (sequence feature or collection)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000701 "An extent of biological sequence, or a collection of such extents, whose identity is dependent on both its sequence and its position.")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000701 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000701 "GENO defines three levels of sequence-related artifacts, which are distinguished by their identity criteria.
1. 'Biological sequence' identity is dependent only on the ordering of units that comprise the sequence.
2. 'Sequence feature' identity is dependent on its sequence and the genomic position if the sequence (aligns with definition of 'sequence feature' in the Sequence Ontology).
3. 'Qualified sequence feature' identity is additionally dependent on some aspect of the physical context of the genetic material bearing the feature, extrinsic to its sequence and its genomic position.  For example, its being targeted by gene knockdown reagents, its being transgenically expressed in a foreign cell from a recombinant expression construct, its having been epigenetically modified in a way that alters its expression level or pattern, or its being located in a specific cellular or anatomical location.")
AnnotationAssertion(rdfs:label obo:GENO_0000701 "sequence feature or collection"@en)
EquivalentClasses(obo:GENO_0000701 ObjectUnionOf(obo:GENO_0000701 obo:SO_0000110))
SubClassOf(obo:GENO_0000701 obo:BFO_0000031)

# Class: obo:GENO_0000702 (biological sequence)

AnnotationAssertion(obo:IAO_0000112 obo:GENO_0000702 "'Sequences' differ from 'sequence features' in that instances are distinguished only by their inherent ordering of units, and not by any positional aspect related to alignment with some reference sequence. Accordingly, the 'ATG' translational start codon of the human AKT gene is the same *sequence* as the 'ATG' start codon of the human SHH gene, but these represent two distinct sequence features in virtue of their different positions in the genome.")
AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000702 "An ordered collection units representing successive monomers of a biological macromolecule.")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000702 "biomacromolecular sequence")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000702 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:GENO_0000702 "GENO defines three levels of sequence-related artifacts, which are distinguished by their identity criteria.
1. 'Biological sequence' identity is dependent only on the ordering of units that comprise the sequence.
2. 'Sequence feature' identity is dependent on its sequence and the genomic position if the sequence (aligns with definition of 'sequence feature' in the Sequence Ontology).
3. 'Qualified sequence feature' identity is additionally dependent on some aspect of the physical context of the genetic material bearing the feature, extrinsic to its sequence and its genomic position.  For example, its being targeted by gene knockdown reagents, its being transgenically expressed in a foreign cell from a recombinant expression construct, its having been epigenetically modified in a way that alters its expression level or pattern, or its being located in a specific cellular or anatomical location.")
AnnotationAssertion(rdfs:label obo:GENO_0000702 "biological sequence"@en)
SubClassOf(obo:GENO_0000702 obo:BFO_0000031)
SubClassOf(obo:GENO_0000702 DataSomeValuesFrom(obo:GENO_0000896 xsd:string))

# Class: obo:GENO_0000788 (sequence feature attribute)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000788 "An attribute, quality, or state of a sequence or sequence feature.")
AnnotationAssertion(obo:IAO_0000116 obo:GENO_0000788 "Sequence feature attributes can be based on qualities of the material bearers of the feature, for example, the staining intensity of a chromosomal band feature.")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000788 obo:geno.owl)
AnnotationAssertion(oboInOwl:hasDbXref obo:GENO_0000788 "http://purl.oboInOwllibrary.org/oboInOwl/SO_0000400")
AnnotationAssertion(rdfs:label obo:GENO_0000788 "sequence feature attribute")
SubClassOf(obo:GENO_0000788 obo:BFO_0000020)

# Class: obo:GENO_0000815 (sequence feature position)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000815 "An attribute of a sequence feature related to the location of its starting and ending residues according to some reference coordinate system.")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000815 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000815 "sequence feature position"@en)
SubClassOf(obo:GENO_0000815 obo:GENO_0000788)

# Class: obo:GENO_0000875 (allelic state)

AnnotationAssertion(obo:IAO_0000115 obo:GENO_0000875 "A quality inhering in an 'allelic complement' (aka a 'single locus complement') that describes the allelic variability found at a particular locus in the genome of a single cell/organism")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000875 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000875 "allelic state"@en)
SubClassOf(obo:GENO_0000875 obo:GENO_0000876)

# Class: obo:GENO_0000876 (genetic dosage)

AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000876 "allelic dosage")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000876 "an attribute inhering in a feature based on the total number or relative stoichiometry of copies present in a particular genome.")
AnnotationAssertion(obo:IAO_0000118 obo:GENO_0000876 "gene dosage")
AnnotationAssertion(obo:IAO_0000412 obo:GENO_0000876 obo:geno.owl)
AnnotationAssertion(rdfs:label obo:GENO_0000876 "genetic dosage"@en)
SubClassOf(obo:GENO_0000876 obo:GENO_0000788)

# Class: obo:GO_0008150 (biological_process)

AnnotationAssertion(obo:IAO_0000111 obo:GO_0008150 "biological_process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:GO_0008150 "Any process specifically pertinent to the functioning of integrated living units: cells, tissues, organs, and organisms. A process is a collection of molecular events with a defined beginning and end."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:GO_0008150 obo:go.owl)
AnnotationAssertion(obo:IAO_0000412 obo:GO_0008150 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:GO_0008150 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:GO_0008150 "biological_process"^^xsd:string)
SubClassOf(obo:GO_0008150 obo:BFO_0000015)

# Class: obo:IAO_0000003 (measurement unit label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000003 "measurement unit label"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000003 "Examples of measurement unit labels are liters, inches, weight per volume."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000003 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000003 "A measurement unit label is as a label that is part of a scalar measurement datum and denotes a unit of measure."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000003 "2009-03-16: provenance: a term measurement unit was
proposed for OBI (OBI_0000176) , edited by Chris Stoeckert and
Cristian Cocos, and subsequently moved to IAO where the objective for
which the original term was defined was satisfied with the definition
of this, different, term."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000003 "2009-03-16: review of this term done during during the OBI workshop winter 2009 and the current definition was considered acceptable for use in OBI. If there is a need to modify this definition please notify OBI."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000003 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000003 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000003 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000003 "measurement unit label"@en)
SubClassOf(obo:IAO_0000003 obo:IAO_0000009)

# Class: obo:IAO_0000005 (objective specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000005 "objective specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000005 "In the protocol of a ChIP assay the objective specification says to identify protein and DNA interaction."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000005 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000005 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000005 "a directive information entity that describes an intended process endpoint. When part of a plan specification the concretization is realized in a planned process in which the bearer tries to effect the world so that the process endpoint is achieved."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "2009-03-16: original definition when imported from OBI read: \"objective is an non realizable information entity which can serve as that  proper part of a plan towards which the realization of the plan is directed.\""@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "2014-03-31: In the example of usage (\"In the protocol of a ChIP assay the objective specification says to identify protein and DNA interaction\") there is a protocol which is the ChIP assay protocol. In addition to being concretized on paper, the protocol can be concretized as a realizable entity, such as a plan that inheres in a person. The objective specification is the part that says that some protein and DNA interactions are identified. This is a specification of a process endpoint: the boundary in the process before which they are not identified and after which they are. During the realization of the plan, the goal is to get to the point of having the interactions, and participants in the realization of the plan try to do that."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "Answers the question, why did you do this experiment?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Barry Smith"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Jennifer Fostel"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000005 "goal specification"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000005 "OBI Plan and Planned Process/Roles Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000005 "OBI_0000217"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000005 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000005 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000005 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000005 "objective specification"@en)
SubClassOf(obo:IAO_0000005 obo:IAO_0000033)

# Class: obo:IAO_0000007 (action specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000007 "action specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000007 "Pour the contents of flask 1 into flask 2"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000007 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000007 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000007 "a directive information entity that describes an action the bearer will take"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000007 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000007 "OBI Plan and Planned Process branch"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000007 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000007 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000007 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000007 "action specification"@en)
SubClassOf(obo:IAO_0000007 obo:IAO_0000033)

# Class: obo:IAO_0000009 (datum label)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000009 "datum label"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000009 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000009 "A label is a symbol that is part of some other datum and is used to either partially define  the denotation of that datum or to provide a means for identifying the datum as a member of the set of data with the same label"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000009 "http://www.golovchenko.org/cgi-bin/wnsearch?q=label#4n"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000009 "GROUP: IAO"@en)
AnnotationAssertion(obo:IAO_0000232 obo:IAO_0000009 "9/22/11 BP: changed the rdfs:label for this class from 'label' to 'datum label' to convey that this class is not intended to cover all kinds of labels (stickers, radiolabels, etc.), and not even all kind of textual labels, but rather the kind of labels occuring in a datum. 
")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000009 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000009 "datum label"@en)
SubClassOf(obo:IAO_0000009 obo:IAO_0000030)

# Class: obo:IAO_0000027 (data item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000027 "data item"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000027 "Data items include counts of things, analyte concentrations, and statistical summaries."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000027 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000027 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000027 "a data item is an information content entity that is intended to be a truthful statement about something (modulo, e.g., measurement precision or other systematic errors) and is constructed/acquired by a method which reliably tends to produce (approximately) truthful statements."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2/2/2009 Alan and Bjoern discussing FACS run output data. This is a data item because it is about the cell population. Each element records an event and is typically further composed a set of measurment data items that record the fluorescent intensity stimulated by one of the lasers."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: data item deliberatly ambiguous: we merged data set and datum to be one entity, not knowing how to define singular versus plural. So data item is more general than datum."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: removed datum as alternative term as datum specifically refers to singular form, and is thus not an exact synonym."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2014-03-31: See discussion at http://odontomachus.wordpress.com/2014/03/30/aboutness-objects-propositions/")
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "JAR: datum     -- well, this will be very tricky to define, but maybe some 
information-like stuff that might be put into a computer and that is 
meant, by someone, to denote and/or to be interpreted by some 
process... I would include lists, tables, sentences... I think I might 
defer to Barry, or to Brian Cantwell Smith

JAR: A data item is an approximately justified approximately true approximate belief"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000027 "data"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000027 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000027 "data item"@en)
SubClassOf(obo:IAO_0000027 obo:IAO_0000030)

# Class: obo:IAO_0000028 (symbol)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000028 "symbol"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a serial number such as \"12324X\""@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a stop sign"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a written proper name such as \"OBI\""@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000028 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000028 "An information content entity that is a mark(s) or character(s) used as a conventional representation of another entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000028 "20091104, MC: this needs work and will most probably change"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000028 "2014-03-31: We would like to have a deeper analysis of 'mark' and 'sign' in the future (see https://code.google.com/p/information-artifact-ontology/issues/detail?id=154)."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000028 "2014-03-31: We would like to have a deeper analysis of 'mark' and 'sign' in the future (see https://github.com/information-artifact-ontology/IAO/issues/154)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000028 "PERSON: James A. Overton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000028 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000028 "based on Oxford English Dictionary"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000028 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000028 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000028 "symbol"@en)
SubClassOf(obo:IAO_0000028 obo:IAO_0000030)

# Class: obo:IAO_0000030 (information content entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000030 "information content entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000030 "Examples of information content entites include journal articles, data, graphical layouts, and graphs."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000030 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000030 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000030 "A generically dependent continuant that is about some thing."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000030 "An information content entity is an entity that is generically dependent on some artifact and stands in relation of aboutness to some entity"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000030 "an information content entity is an entity that is generically dependent on some artifact and stands in relation of aboutness to some entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000030 "2014-03-10: The use of \"thing\" is intended to be general enough to include universals and configurations (see https://groups.google.com/d/msg/information-ontology/GBxvYZCk1oc/-L6B5fSBBTQJ)."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000030 "information_content_entity 'is_encoded_in' some digital_entity in obi before split (040907). information_content_entity 'is_encoded_in' some physical_document in obi before split (040907).

Previous. An information content entity is a non-realizable information entity that 'is encoded in' some digital or physical entity."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000030 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000030 "OBI_0000142"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity")
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity"@en)
SubClassOf(obo:IAO_0000030 obo:BFO_0000031)
SubClassOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000001))

# Class: obo:IAO_0000032 (scalar measurement datum)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000032 "10 feet. 3 ml."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000032 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000032 "a scalar measurement datum is a measurement datum that is composed of two parts, numerals and a unit label."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000032 "2009-03-16: we decided to keep datum singular in scalar measurement datum, as in
this case we explicitly refer to the singular form"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000032 "Would write this as: has_part some 'measurement unit label' and has_part some numeral and has_part exactly 2, except for the fact that this won't let us take advantage of OWL reasoning over the numbers. Instead use has measurment value property to represent the same. Use has measurement unit label (subproperty of has_part) so we can easily say that there is only one of them."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000032 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000032 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000032 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000032 "scalar measurement datum"@en)
SubClassOf(obo:IAO_0000032 obo:IAO_0000109)
SubClassOf(obo:IAO_0000032 ObjectSomeValuesFrom(obo:OBI_0001938 obo:OBI_0001931))
SubClassOf(obo:IAO_0000032 ObjectMinCardinality(1 obo:IAO_0000039))
SubClassOf(obo:IAO_0000032 DataMinCardinality(1 obo:IAO_0000004))

# Class: obo:IAO_0000033 (directive information content entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000033 "directive information entity"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000033 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000033 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000033 "An information content entity whose concretizations indicate to their bearer how to realize them in a process."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "2009-03-16: provenance: a term realizable information entity was proposed for OBI (OBI_0000337) , edited by the PlanAndPlannedProcess branch. Original definition was  \"is the specification of a process that can be concretized and realized by an actor\" with alternative term  \"instruction\".It has been subsequently moved to IAO where the objective for which the original term was defined was satisfied with the definitionof this, different, term."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "2013-05-30 Alan Ruttenberg: What differentiates a directive information entity from an information concretization is that it can have concretizations that are either qualities or realizable entities. The concretizations that are realizable entities are created when an individual chooses to take up the direction, i.e. has the intention to (try to) realize it."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "8/6/2009 Alan Ruttenberg: Changed label from \"information entity about a realizable\" after discussions at ICBO"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "Werner pushed back on calling it realizable information entity as it isn't realizable. However this name isn't right either. An example would be a recipe. The realizable entity would be a plan, but the information entity isn't about the plan, it, once concretized, *is* the plan. -Alan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000033 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000033 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000033 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000033 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000033 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000033 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000033 "directive information content entity"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000033 "directive information entity"@en)
SubClassOf(obo:IAO_0000033 obo:IAO_0000030)
SubClassOf(obo:IAO_0000033 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000017))

# Class: obo:IAO_0000064 (algorithm)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000064 "algorithm"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000064 "PMID: 18378114.Genomics. 2008 Mar 28. LINKGEN: A new algorithm to process data in genetic linkage studies."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000064 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000064 "A plan specification which describes the inputs and output of mathematical functions as well as workflow of execution for achieving an predefined objective. Algorithms are realized usually by means of implementation as computer programs for execution by automata."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000064 "Philippe Rocca-Serra"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000064 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000064 "OBI_0000270"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000064 "adapted from discussion on OBI list (Matthew Pocock, Christian Cocos, Alan Ruttenberg)"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000064 "algorithm"@en)
SubClassOf(obo:IAO_0000064 obo:IAO_0000104)

# Class: obo:IAO_0000078 (curation status specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000078 "curation status specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000078 "The curation status of the term. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000078 "Better to represent curation as a process with parts and then relate labels to that process (in IAO meeting)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000078 "PERSON:Bill Bug"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "GROUP:OBI:<http://purl.obolibrary.org/obo/obi>"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000078 "OBI_0000266"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000078 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
EquivalentClasses(obo:IAO_0000078 ObjectOneOf(obo:IAO_0000002 obo:IAO_0000120 obo:IAO_0000121 obo:IAO_0000122 obo:IAO_0000123 obo:IAO_0000124 obo:IAO_0000125 obo:IAO_0000423 obo:IAO_0000428))
SubClassOf(obo:IAO_0000078 obo:IAO_0000102)

# Class: obo:IAO_0000100 (data set)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000100 "data set"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000100 "Intensity values in a CEL file or from multiple CEL files comprise a data set (as opposed to the CEL files themselves)."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000100 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000100 "A data item that is an aggregate of other data items of the same type that have something in common. Averages and distributions can be determined for data sets."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000100 "2009/10/23 Alan Ruttenberg. The intention is that this term represent collections of like data. So this isn't for, e.g. the whole contents of a cel file, which includes parameters, metadata etc. This is more like java arrays of a certain rather specific type"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000100 "2014-05-05: Data sets are aggregates and thus must include two or more data items. We have chosen not to add logical axioms to make this restriction.")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000100 "person:Allyson Lister"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000100 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000100 "OBI_0000042"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000100 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000100 "data set"@en)
SubClassOf(obo:IAO_0000100 obo:IAO_0000027)

# Class: obo:IAO_0000101 (image)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000101 "image"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000101 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000101 "An image is an affine projection to a two dimensional surface, of measurements of some quality of an entity or entities repeated at regular intervals across a spatial range, where the measurements are represented as color and luminosity on the projected on surface."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000101 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000101 "person:Allyson"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000101 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000101 "OBI_0000030"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000101 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000101 "image"@en)
SubClassOf(obo:IAO_0000101 obo:IAO_0000308)

# Class: obo:IAO_0000102 (data about an ontology part)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000102 "data about an ontology part"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000102 "data about an ontology part is a data item about a part of an ontology, for example a term"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000102 "Person:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000102 "ontology metadata")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000102 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000102 "data about an ontology part")
AnnotationAssertion(rdfs:label obo:IAO_0000102 "data about an ontology part"@en)
SubClassOf(obo:IAO_0000102 obo:IAO_0000027)
SubClassOf(obo:IAO_0000102 obo:IAO_0000030)

# Class: obo:IAO_0000104 (plan specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000104 "plan specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000104 "PMID: 18323827.Nat Med. 2008 Mar;14(3):226.New plan proposed to help resolve conflicting medical advice."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000104 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000104 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000104 "A directive information entity with action specifications and objective specifications as parts that, when concretized, is realized in a process in which the bearer tries to achieve the objectives by taking the actions specified."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "2009-03-16: provenance: a term a plan was proposed for OBI (OBI_0000344) , edited by the PlanAndPlannedProcess branch. Original definition was \" a plan is a specification of a process that is realized by an actor to achieve the objective specified as part of the plan\". It has been subsequently moved to IAO where the objective for which the original term was defined was satisfied with the definitionof this, different, term."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "2014-03-31: A plan specification can have other parts, such as conditional specifications."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "Alternative previous definition: a plan is a set of instructions that specify how an objective should be achieved"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000104 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000104 "OBI Plan and Planned Process branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000104 "OBI_0000344"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000104 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000104 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000104 obo:pdro.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0000104 "2/3/2009 Comment from OBI review.

Action specification not well enough specified.
Conditional specification not well enough specified.
Question whether all plan specifications have objective specifications.

Request that IAO either clarify these or change definitions not to use them"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000104 "plan specification"@en)
SubClassOf(obo:IAO_0000104 obo:IAO_0000033)
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000005))
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000007))

# Class: obo:IAO_0000109 (measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000109 "measurement datum"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000109 "Examples of measurement data are the recoding of the weight of a mouse as {40,mass,\"grams\"}, the recording of an observation of the behavior of the mouse {,process,\"agitated\"}, the recording of the expression level of a gene as measured through the process of microarray experiment {3.4,luminosity,}."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000109 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000109 "A measurement datum is an information content entity that is a recording of the output of a measurement such as produced by a device."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000109 "2/2/2009 is_specified_output of some assay?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000109 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "OBI_0000305"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "group:OBI"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000109 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000109 "measurement datum"@en)
SubClassOf(obo:IAO_0000109 obo:IAO_0000027)
SubClassOf(obo:IAO_0000109 ObjectSomeValuesFrom(obo:OBI_0001938 obo:OBI_0001933))

# Class: obo:IAO_0000129 (version number)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000129 "version number"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000129 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000129 "A version number is an information content entity which is a sequence of characters borne by part of each of a class of manufactured products or its packaging and indicates its order within a set of other products having the same name."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000129 "Note: we feel that at the moment we are happy with a general version number, and that we will subclass as needed in the future. For example, see 7. genome sequence version"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000129 "GROUP: IAO"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000129 "version number"@en)
SubClassOf(obo:IAO_0000129 obo:IAO_0000028)

# Class: obo:IAO_0000144 (conclusion textual entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000144 "conclusion textual entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000144 "that fucoidan has a small statistically significant effect on AT3 level but no useful clinical effect as in-vivo anticoagulant, a paraphrase of part of the last paragraph of the discussion section of the paper 'Pilot clinical study to evaluate the anticoagulant activity of fucoidan', by Lowenthal et. al.PMID:19696660"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000144 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000144 "A textual entity that expresses the results of reasoning about a problem, for instance as typically found towards the end of scientific papers."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000144 "2009/09/28 Alan Ruttenberg. Fucoidan-use-case"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000144 "2009/10/23 Alan Ruttenberg: We need to work on the definition still"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000144 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000144 "conclusion textual entity"@en)
SubClassOf(obo:IAO_0000144 obo:IAO_0000300)
SubClassOf(obo:IAO_0000144 obo:OBI_0001909)
SubClassOf(obo:IAO_0000144 ObjectSomeValuesFrom(obo:OBI_0000124 obo:IAO_0000027))
SubClassOf(obo:IAO_0000144 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000338))

# Class: obo:IAO_0000178 (material information bearer)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000178 "material information bearer"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000178 "A page of a paperback novel with writing on it. The paper itself is a material information bearer, the pattern of ink is the information carrier."@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000178 "a brain"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000178 "a hard drive"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000178 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000178 "A material entity in which a concretization of an information content entity inheres."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000178 "GROUP: IAO"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000178 "material information bearer"@en)
EquivalentClasses(obo:IAO_0000178 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000053 ObjectSomeValuesFrom(obo:RO_0000059 obo:IAO_0000030))))
SubClassOf(obo:IAO_0000178 obo:BFO_0000040)

# Class: obo:IAO_0000225 (obsolescence reason specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000225 "obsolescence reason specification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000225 "The reason for which a term has been deprecated. The allowed values come from an enumerated list of predefined terms. See the specification of these instances for more detailed definitions of each enumerated value."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000225 "The creation of this class has been inspired in part by Werner Ceusters' paper, Applying evolutionary terminology auditing to the Gene Ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000225 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
EquivalentClasses(obo:IAO_0000225 ObjectOneOf(obo:IAO_0000103 obo:IAO_0000226 obo:IAO_0000227 obo:IAO_0000228 obo:IAO_0000229))
SubClassOf(obo:IAO_0000225 obo:IAO_0000102)

# Class: obo:IAO_0000300 (textual entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000300 "textual entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000300 "Words, sentences, paragraphs, and the written (non-figure) parts of publications are all textual entities"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000300 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000300 "A textual entity is a part of a manifestation (FRBR sense), a generically dependent continuant whose concretizations are patterns of glyphs intended to be interpreted as words, formulas, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000300 "AR, (IAO call 2009-09-01): a document as a whole is not typically a textual entity, because it has pictures in it - rather there are parts of it that are textual entities. Examples: The title, paragraph 2 sentence 7, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000300 "MC, 2009-09-14 (following IAO call 2009-09-01): textual entities live at the FRBR (http://en.wikipedia.org/wiki/Functional_Requirements_for_Bibliographic_Records) manifestation level. Everything is significant: line break, pdf and html versions of same document are different textual entities."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000300 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000300 "text"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000300 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000300 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000300 "textual entity"@en)
SubClassOf(obo:IAO_0000300 obo:IAO_0000030)

# Class: obo:IAO_0000302 (author identification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000302 "author identification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000302 "L. Hunter"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000302 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000302 "A textual entity intended to identify a particular author"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000302 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000302 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000302 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000302 "author identification"@en)
SubClassOf(obo:IAO_0000302 obo:IAO_0000590)

# Class: obo:IAO_0000308 (figure)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000308 "figure"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000308 "Any picture, diagram or table"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000308 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000308 "An information content entity consisting of a two dimensional arrangement of information content entities such that the arrangement itself is about something."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000308 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000308 "figure"@en)
SubClassOf(obo:IAO_0000308 obo:IAO_0000030)

# Class: obo:IAO_0000310 (document)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000310 "document"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000310 "A journal article, patent application, laboratory notebook, or a book"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000310 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000310 "A collection of information content entities intended to be understood together as a whole"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000310 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:iao.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000310 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000310 "document"@en)
SubClassOf(obo:IAO_0000310 obo:IAO_0000030)

# Class: obo:IAO_0000408 (length measurement datum)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000408 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000408 "A scalar measurement datum that is the result of measurement of length quality"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000408 "Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000408 "length measurement datum"@en)
SubClassOf(obo:IAO_0000408 obo:IAO_0000032)
SubClassOf(obo:IAO_0000408 ObjectSomeValuesFrom(obo:IAO_0000039 obo:UO_0000001))
SubClassOf(obo:IAO_0000408 ObjectSomeValuesFrom(obo:IAO_0000221 obo:PATO_0000122))

# Class: obo:IAO_0000409 (denotator type)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000409 "The Basic Formal Ontology ontology makes a distinction between Universals and defined classes, where the formal are \"natural kinds\" and the latter arbitrary collections of entities."^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000409 "A denotator type indicates how a term should be interpreted from an ontological perspective."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000409 "Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000409 "Barry Smith, Werner Ceusters"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000409 "denotator type"^^xsd:string)
EquivalentClasses(obo:IAO_0000409 ObjectOneOf(obo:IAO_0000410 obo:IAO_0000420 obo:IAO_0000421))
SubClassOf(obo:IAO_0000409 obo:IAO_0000102)

# Class: obo:IAO_0000414 (mass measurement datum)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000414 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000414 "A scalar measurement datum that is the result of measurement of mass quality"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000414 "2009/09/28 Alan Ruttenberg. Fucoidan-use-case"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000414 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000414 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000414 "mass measurement datum"@en)
SubClassOf(obo:IAO_0000414 obo:IAO_0000032)
SubClassOf(obo:IAO_0000414 ObjectIntersectionOf(ObjectAllValuesFrom(obo:IAO_0000039 obo:UO_0000002) ObjectAllValuesFrom(obo:IAO_0000221 obo:PATO_0000125)))

# Class: obo:IAO_0000416 (time measurement datum)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000416 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000416 "A scalar measurement datum that is the result of measuring a temporal interval"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000416 "2009/09/28 Alan Ruttenberg. Fucoidan-use-case"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000416 "Person:Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000416 "time measurement datum"@en)
SubClassOf(obo:IAO_0000416 obo:IAO_0000032)
SubClassOf(obo:IAO_0000416 ObjectIntersectionOf(ObjectAllValuesFrom(obo:IAO_0000039 obo:UO_0000003) ObjectAllValuesFrom(obo:IAO_0000413 obo:BFO_0000015)))

# Class: obo:IAO_0000572 (documenting)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000572 "documenting"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000572 "Recording the current temperature in a laboratory notebook. Writing a journal article. Updating a patient record in a database."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000572 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000572 "a planned process in which a document is created or added to by including the specified input in it."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000572 "6/11/9: Edited at OBI workshop. We need to be able identify a child form of information artifact which corresponds to something enduring (not brain like). This used to be restricted to physical document or digital entity as the output, but that excludes e.g. an audio cassette tape"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000572 "Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000572 "wikipedia http://en.wikipedia.org/wiki/Documenting"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000572 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000572 obo:obi.owl)
AnnotationAssertion(obo:ICO_0000091 obo:IAO_0000572 "C1548385"@en)
AnnotationAssertion(obo:ICO_0000093 obo:IAO_0000572 "11609"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000572 "documenting"@en)
SubClassOf(obo:IAO_0000572 obo:OBI_0000011)
SubClassOf(obo:IAO_0000572 ObjectSomeValuesFrom(obo:OBI_0000293 obo:IAO_0000030))
SubClassOf(obo:IAO_0000572 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000310))

# Class: obo:IAO_0000577 (centrally registered identifier symbol)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000577 "The sentence \"The article has Pubmed ID 12345.\" contains a CRID that has two parts: one part is the CRID symbol, which is '12345'; the other part denotes the CRID registry, which is Pubmed."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000577 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000577 "A symbol that is part of a CRID and that is sufficient to look up a record from the CRID's registry."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000577 "CRID symbol")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000577 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000577 "centrally registered identifier symbol"@en)
SubClassOf(obo:IAO_0000577 obo:IAO_0000028)
SubClassOf(obo:IAO_0000577 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0000578))

# Class: obo:IAO_0000578 (centrally registered identifier)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000578 "The sentence \"The article has Pubmed ID 12345.\" contains a CRID that has two parts: one part is the CRID symbol, which is '12345'; the other part denotes the CRID registry, which is Pubmed."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000578 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000578 "An information content entity that consists of a CRID symbol and additional information about the CRID registry to which it belongs."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "2014-05-05: In defining this term we take no position on what the CRID denotes. In particular do not assume it denotes a *record* in the CRID registry (since the registry might not have 'records')."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "Alan, IAO call 20101124: potentially the CRID denotes the instance it was associated with during creation. 
"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "Note, IAO call 20101124: URIs are not always CRID, as not centrally registered. We acknowledge that CRID is a subset of a larger identifier class, but this subset fulfills our current needs. OBI PURLs are CRID as they are registered with OCLC. UPCs (Universal Product Codes from AC Nielsen)are not CRID as they are not centrally registered."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000578 "CRID")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000578 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000578 "centrally registered identifier"@en)
SubClassOf(obo:IAO_0000578 obo:IAO_0000030)
SubClassOf(obo:IAO_0000578 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000577))
SubClassOf(obo:IAO_0000578 ObjectSomeValuesFrom(obo:BFO_0000051 ObjectSomeValuesFrom(obo:IAO_0000219 obo:IAO_0000579)))

# Class: obo:IAO_0000579 (centrally registered identifier registry)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000579 "PubMed is a CRID registry. It has a dataset of PubMed identifiers associated with journal articles. "@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000579 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000579 "A CRID registry is a dataset of CRID records, each consisting of a CRID symbol and additional information which was recorded in the dataset through a assigning a centrally registered identifier process."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000579 "CRID registry")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000579 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000579 "centrally registered identifier registry"@en)
SubClassOf(obo:IAO_0000579 obo:IAO_0000100)

# Class: obo:IAO_0000582 (time stamped measurement datum)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000582 obo:IAO_0000123)
AnnotationAssertion(rdfs:label obo:IAO_0000582 "time stamped measurement datum"@en)
SubClassOf(obo:IAO_0000582 obo:IAO_0000109)
SubClassOf(obo:IAO_0000582 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:IAO_0000581 obo:IAO_0000416) ObjectSomeValuesFrom(obo:IAO_0000583 obo:IAO_0000109)))

# Class: obo:IAO_0000590 (written name)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000590 "written name"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000590 "\"Bill Clinton\""@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000590 "\"The Eiffel Tower\""@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000590 "\"United States of America\""@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000590 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000590 "A textual entity that denotes a particular in reality."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000590 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000590 "http://code.google.com/p/information-artifact-ontology/issues/detail?id=114"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000590 "https://github.com/information-artifact-ontology/IAO/issues/114"@en)
AnnotationAssertion(obo:IAO_0000232 obo:IAO_0000590 "The qualifier \"written\" is to set it apart from spoken names.  Also, note the restrictions to particulars.  We are not naming universals.   We could however, be naming, attributive collections which are particulars, so \"All people located in the boundaries of the city of Little Rock, AR on June 18, 2011 at 9:50a CDT\" would be a name."@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000590 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000590 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000590 "written name"@en)
SubClassOf(obo:IAO_0000590 obo:IAO_0000300)

# Class: obo:IAO_0020000 (proper name)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020000 "A proper name is an information content entity that is the outcome of a dubbing process and is used to refer to one instance of entity shared by a group of people to refer to that individual entity. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020000 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020000 "identifier"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020000 "proper name"@en)
EquivalentClasses(obo:IAO_0020000 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:IAO_0020012 obo:BFO_0000001) ObjectAllValuesFrom(obo:OBI_0000312 obo:IAO_0020010)))
SubClassOf(obo:IAO_0020000 obo:IAO_0000030)

# Class: obo:IAO_0020010 (dubbing process)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020010 "A dubbing process is a planned process that provides a reference to an individual entity shared by a group of subscribers to refer to that individual entity."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020010 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020010 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020010 "dubbing process"@en)
EquivalentClasses(obo:IAO_0020010 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0020000))
SubClassOf(obo:IAO_0020010 obo:OBI_0000011)

# Class: obo:IAO_0020015 (personal name)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020015 "A personal name is a proper name identifying an individual person."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020015 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0020015 "http://en.wikipedia.org/wiki/Personal_name"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020015 "Personal names \"today usually comprises a given name bestowed at birth or at a young age plus a surname. It is nearly universal for a human to have a name; except in rare cases, for example feral children growing up in isolation, or infants orphaned by natural disaster for whom no written record survives.[citation needed] The Convention on the Rights of the Child specifies that a child has the right from birth to a name. Certain isolated tribes, such as the Machiguenga of the Amazon, also lack personal names.\" (http://en.wikipedia.org/wiki/Personal_name)"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020015 "personal name"@en)
EquivalentClasses(obo:IAO_0020015 ObjectIntersectionOf(obo:IAO_0020000 ObjectAllValuesFrom(obo:IAO_0020012 obo:NCBITaxon_9606)))
SubClassOf(obo:IAO_0020015 obo:IAO_0020000)

# Class: obo:IAO_0020021 (identity document)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020021 "a document that denotes some identity and is concretized by the bearer of some credential role"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020021 "Amanda Hicks")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0020021 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:IAO_0020021 "identity document"@en)
EquivalentClasses(obo:IAO_0020021 ObjectIntersectionOf(obo:IAO_0000310 ObjectSomeValuesFrom(obo:IAO_0000136 obo:IAO_0020022) ObjectSomeValuesFrom(obo:RO_0000058 ObjectIntersectionOf(obo:BFO_0000020 ObjectSomeValuesFrom(obo:RO_0000052 ObjectSomeValuesFrom(obo:RO_0000053 obo:IAO_0020024)))) ObjectAllValuesFrom(obo:RO_0000058 ObjectIntersectionOf(obo:BFO_0000020 ObjectSomeValuesFrom(obo:RO_0000052 ObjectSomeValuesFrom(obo:RO_0000053 obo:IAO_0020024))))))
SubClassOf(obo:IAO_0020021 obo:IAO_0000310)

# Class: obo:IAO_0020022 (documented identity)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020022 "a documented identity is the aggregate of all data items about an entity.  Notice that a documented identity is not itself a document since a document is intended to be understood as a whole and data items about an individual are usually scattered across different documents."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020022 "Amanda Hicks")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0020022 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0020022 "is an aggregate of ICEs also an ICE? yes
Is part_of the appropriate relation to use for data items and documented identities?"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020022 "documented identity"@en)
SubClassOf(obo:IAO_0020022 obo:IAO_0000030)
SubClassOf(obo:IAO_0020022 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000030) ObjectSomeValuesFrom(ObjectInverseOf(obo:IAO_0000136) obo:IAO_0020021) ObjectAllValuesFrom(obo:BFO_0000051 obo:IAO_0000030)))

# Class: obo:IAO_0020023 (authentication)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0020023 " I order a beer and the bartender authenticates my age by looking at my DOB on my driver's license.  I sign into my email account, and the system authenticates my permission to read the email by checking the password I enter against my password listed in the database.")
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020023 "Authentication is the act of checking or verifying an identity claim (that is either tacit or explicit). 
"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020023 "Amanda Hicks")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0020023 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:IAO_0020023 "authentication"@en)
SubClassOf(obo:IAO_0020023 obo:BFO_0000015)
SubClassOf(obo:IAO_0020023 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:BFO_0000055 obo:IAO_0020024) ObjectSomeValuesFrom(obo:RO_0000057 obo:IAO_0000027) ObjectSomeValuesFrom(obo:RO_0000057 ObjectSomeValuesFrom(ObjectInverseOf(obo:IAO_0000136) obo:IAO_0000027))))

# Class: obo:IAO_0020024 (credential role)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020024 " a role that inheres in a concretization of an identity document and is realized by an authentication process"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020024 "Amanda Hicks"@en)
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0020024 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:IAO_0020024 "credential role"@en)
EquivalentClasses(obo:IAO_0020024 ObjectIntersectionOf(obo:BFO_0000023 ObjectSomeValuesFrom(obo:BFO_0000054 obo:IAO_0020023) ObjectSomeValuesFrom(obo:RO_0000052 ObjectSomeValuesFrom(obo:RO_0000053 ObjectSomeValuesFrom(obo:RO_0000059 obo:IAO_0020021)))))
SubClassOf(obo:IAO_0020024 obo:BFO_0000023)

# Class: obo:IAO_0021003 (social act)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0021003 "Colonel Klink giving Sergeant Schultz an order, Jake promising Jill to take her to the junior prom"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0021003 "A process that is carried out by a conscious being or an aggregate of conscious beings and is spontaneous, directed towards other conscious beings and aggregates thereof and needs to be perceived."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0021003 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0021003 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0021003 "MB: Regarding the use of the term 'sponteneous' in the definition:
The term is used in the following meaning of being self generated. It does not stand in contrast to being planned."@en)
AnnotationAssertion(rdfs:label obo:IAO_0021003 "social act"@en)
SubClassOf(obo:IAO_0021003 obo:BFO_0000015)

# Class: obo:ICO_0000001 (informed consent form)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000001 "A document that explains all relevant study information to assist a human subject in understanding the expectations and requirements of participation in a research study. This form document is presented to and signed by the study subject. "@en)
AnnotationAssertion(obo:IAO_0000116 obo:ICO_0000001 "The term definition is adapted from NCIt definition of 'consent form' (C16468) with modification. Compared to the NCIt definition, the ICO definition does not restrict the form to a clinical trial.  ")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000001 "AK, FM, YH, YL, MH, EE")
AnnotationAssertion(obo:IAO_0000118 obo:ICO_0000001 "informed consent document")
AnnotationAssertion(obo:IAO_0000119 obo:ICO_0000001 "NCIt C16468")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000001 obo:ico.owl)
AnnotationAssertion(obo:ICO_0000091 obo:ICO_0000001 "C0009797 "@en)
AnnotationAssertion(obo:ICO_0000092 obo:ICO_0000001 "C16468 "@en)
AnnotationAssertion(rdfs:label obo:ICO_0000001 "informed consent form")
SubClassOf(obo:ICO_0000001 obo:IAO_0000310)
SubClassOf(obo:ICO_0000001 ObjectSomeValuesFrom(obo:ICO_0000130 obo:ICO_0000111))

# Class: obo:ICO_0000006 (informed consent regulatory body)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000006 "an organization that approves  the clinical study protocol, and ensures the applicable governing rules and laws are upheld.  ")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000006 "AK, FM, YH")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000006 obo:ico.owl)
AnnotationAssertion(rdfs:label obo:ICO_0000006 "informed consent regulatory body")
SubClassOf(obo:ICO_0000006 obo:OBI_0000245)

# Class: obo:ICO_0000023 (completely filled informed consent form)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000023 "an informed consent form that has been filled with all required contents.")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000023 "YH")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000023 obo:ico.owl)
AnnotationAssertion(rdfs:label obo:ICO_0000023 "completely filled informed consent form")
SubClassOf(obo:ICO_0000023 obo:ICO_0000001)
SubClassOf(obo:ICO_0000023 ObjectSomeValuesFrom(obo:OBI_0000312 ObjectIntersectionOf(obo:OBIB_0000018 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OBIB_0000017) ObjectSomeValuesFrom(obo:RO_0000057 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBIB_0000012))) ObjectSomeValuesFrom(obo:RO_0000057 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000093))))))

# Class: obo:ICO_0000086 (consenter role)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000086 "a role that inheres in a patient or the legal guadian when he/she participates the consenting process."@en)
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000086 obo:ico.owl)
AnnotationAssertion(dc:creator obo:ICO_0000086 "YL"@en)
AnnotationAssertion(rdfs:label obo:ICO_0000086 "consenter role"@en)
SubClassOf(obo:ICO_0000086 obo:BFO_0000023)
SubClassOf(obo:ICO_0000086 ObjectSomeValuesFrom(obo:BFO_0000054 obo:ICO_0000156))

# Class: obo:ICO_0000111 (review board approval number)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000111 "A character string that is assigned by the review board upon approval of the study."@en)
AnnotationAssertion(obo:IAO_0000116 obo:ICO_0000111 "For the review board approval, different countries or continents may have different responsible entities for approving the study. For example, in USA, the board is called \"Institutional Review Board\" (IRB). In many countries in Europe, it is called Ethics committee. ")
AnnotationAssertion(obo:IAO_0000116 obo:ICO_0000111 "This term definition is adapted from the definition of the NCIt term 'Review Board Approval Number Text'.")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000111 "YL, EE, YH, AK, MH"@en)
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000111 obo:ico.owl)
AnnotationAssertion(obo:ICO_0000091 obo:ICO_0000111 "C2985863")
AnnotationAssertion(obo:ICO_0000092 obo:ICO_0000111 "C93662")
AnnotationAssertion(rdfs:label obo:ICO_0000111 "review board approval number"@en)
SubClassOf(obo:ICO_0000111 obo:IAO_0000028)
SubClassOf(obo:ICO_0000111 ObjectSomeValuesFrom(obo:ICO_0000132 obo:ICO_0000006))

# Class: obo:ICO_0000155 (informed consent)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000155 "A planned process that a person agrees to participate in a research project, which is a part of an informed consent process.")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000155 "YH, 2018 Little Rock CTSOG ontology workshop")
AnnotationAssertion(obo:IAO_0000119 obo:ICO_0000155 "https://oprs.usc.edu/files/2017/04/Informed-Consent-Booklet-4.4.13.pdf")
AnnotationAssertion(obo:IAO_0000119 obo:ICO_0000155 "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3777303/")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000155 obo:ico.owl)
AnnotationAssertion(rdfs:label obo:ICO_0000155 "informed consent"@en)
SubClassOf(obo:ICO_0000155 obo:OBI_0000011)
SubClassOf(obo:ICO_0000155 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0000810))

# Class: obo:ICO_0000156 (adult consent)

AnnotationAssertion(obo:IAO_0000115 obo:ICO_0000156 "An informed consent by an adult subject,  capable of giving permission to participate in a research study, to provide consent.")
AnnotationAssertion(obo:IAO_0000117 obo:ICO_0000156 "YH, 2018 Little Rock CTSOG ontology workshop")
AnnotationAssertion(obo:IAO_0000119 obo:ICO_0000156 "https://oprs.usc.edu/files/2017/04/Informed-Consent-Booklet-4.4.13.pdf")
AnnotationAssertion(obo:IAO_0000119 obo:ICO_0000156 "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3777303/")
AnnotationAssertion(obo:IAO_0000412 obo:ICO_0000156 obo:ico.owl)
AnnotationAssertion(rdfs:comment obo:ICO_0000156 "Note: The subject must be 18 years of age and competent to make the decision to participate.")
AnnotationAssertion(rdfs:label obo:ICO_0000156 "adult consent"@en)
SubClassOf(obo:ICO_0000156 obo:ICO_0000155)

# Class: obo:NCBITaxon_10239 (Viruses)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_10239 "Viruses"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_10239 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_10239 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_10239 "Vira"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_10239 "Viridae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_10239 "viruses"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_10239 obo:NCBITaxon_superkingdom)
AnnotationAssertion(rdfs:label obo:NCBITaxon_10239 "Viruses")
AnnotationAssertion(rdfs:label obo:NCBITaxon_10239 "Viruses"^^xsd:string)
SubClassOf(obo:NCBITaxon_10239 obo:OBI_0100026)

# Class: obo:NCBITaxon_117571 (Euteleostomi)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_117571 "Euteleostomi"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_117571 "bony vertebrates"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_117571 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_117571 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_117571 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_117571 obo:pdro.owl)
AnnotationAssertion(obo:hasAlternativeId obo:NCBITaxon_117571 "NCBITaxon:40673"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_117571 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_117571 "bony vertebrates"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_117571 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_117571 "Euteleostomi"^^xsd:string)
SubClassOf(obo:NCBITaxon_117571 obo:NCBITaxon_7742)

# Class: obo:NCBITaxon_1437010 (Boreoeutheria)

AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_1437010 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_1437010 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_1437010 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_1437010 "PMID:11743200"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_1437010 "PMID:11791233"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_1437010 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_1437010 "Boreotheria"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_1437010 "Boreoeutheria"^^xsd:string)
SubClassOf(obo:NCBITaxon_1437010 obo:NCBITaxon_40674)

# Class: obo:NCBITaxon_2 (Bacteria)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2 "Bacteria"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2 "eubacteria"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "GC_ID:11"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10425795"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10425796"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10425797"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10490293"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10843050"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10939651"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10939673"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:10939677"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11211268"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11321083"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11321113"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11411719"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11540071"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11542017"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11542087"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:11760965"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:12054223"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:2112744"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:270744"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:8123559"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:8590690"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:9103655"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2 "PMID:9336922"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_2 "eubacteria"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_2 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "Monera"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "Procaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryota"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "bacteria"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "not Bacteria Haeckel 1894"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "prokaryote"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2 "prokaryotes"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "GC_ID:11"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425795"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425796"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10425797"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10490293"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10843050"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939651"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939673"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:10939677"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11211268"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11321083"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11321113"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11411719"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11540071"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11542017"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11542087"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:11760965"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:12054223"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:2112744"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:270744"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:8123559"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:8590690"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:9103655"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2 "PMID:9336922"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:NCBITaxon_2 "eubacteria"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_2 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Monera"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Procaryotae"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryota"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "Prokaryotae"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "bacteria"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "not Bacteria Haeckel 1894"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "prokaryote"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2 "prokaryotes"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2 "Bacteria"^^xsd:string)
SubClassOf(obo:NCBITaxon_2 obo:OBI_0100026)
SubClassOf(obo:NCBITaxon_2 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_1000000002))

# Class: obo:NCBITaxon_2157 (Archaea)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2157 "Archaea"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "GC_ID:11"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10425795"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10425796"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10425797"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10490293"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10843050"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10939651"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10939673"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:10939677"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11211268"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11321083"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11321113"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11411719"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11540071"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11541975"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11542064"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11542149"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:11760965"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:12054223"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:2112744"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:25527841"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:270744"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:8123559"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:8590690"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:9103655"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2157 "PMID:9336922"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_2157 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Archaebacteria"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Mendosicutes"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Metabacteria"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Monera"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Procaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Prokaryota"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "Prokaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "archaea"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "prokaryote"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2157 "prokaryotes"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2157 obo:NCBITaxon_superkingdom)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2157 "Archaea"^^xsd:string)
SubClassOf(obo:NCBITaxon_2157 obo:OBI_0100026)

# Class: obo:NCBITaxon_2759 (Eukaryota)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2759 "Eukaryota"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2759 "eucaryotes"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2759 "eukaryotes"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2759 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_2759 "PMID:23020233"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_2759 "eucaryotes"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_2759 "eukaryotes"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_2759 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2759 "Eucarya"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2759 "Eucaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2759 "Eukarya"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2759 "Eukaryotae"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_2759 "eukaryotes"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_2759 obo:NCBITaxon_superkingdom)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2759 "GC_ID:1"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_2759 "PMID:23020233"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:NCBITaxon_2759 "eucaryotes"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:NCBITaxon_2759 "eukaryotes"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_2759 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eucarya"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eucaryotae"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eukarya"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "Eukaryotae"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:NCBITaxon_2759 "eukaryotes"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2759 "Eukaryota"^^xsd:string)
SubClassOf(obo:NCBITaxon_2759 obo:OBI_0100026)
SubClassOf(obo:NCBITaxon_2759 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_1000002759))

# Class: obo:NCBITaxon_314146 (Euarchontoglires)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_314146 "Euarchontoglires"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314146 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314146 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314146 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314146 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314146 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314146 "PMID:11214319"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314146 "PMID:12082125"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314146 "PMID:12878460"^^xsd:string)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314146 "PMID:15522813"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_314146 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_314146 obo:NCBITaxon_superorder)
AnnotationAssertion(rdfs:label obo:NCBITaxon_314146 "Euarchontoglires"^^xsd:string)
SubClassOf(obo:NCBITaxon_314146 obo:NCBITaxon_1437010)
SubClassOf(obo:NCBITaxon_314146 obo:NCBITaxon_40674)

# Class: obo:NCBITaxon_314293 (Simiiformes)

AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314293 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_314293 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_314293 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_314293 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_314293 "Anthropoidea"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_314293 obo:NCBITaxon_infraorder)
AnnotationAssertion(rdfs:label obo:NCBITaxon_314293 "Simiiformes"^^xsd:string)
SubClassOf(obo:NCBITaxon_314293 obo:NCBITaxon_314146)

# Class: obo:NCBITaxon_32523 (Tetrapoda)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_32523 "Tetrapoda"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_32523 "tetrapods"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32523 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32523 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32523 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32523 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_32523 "Tetrapoda"^^xsd:string)
SubClassOf(obo:NCBITaxon_32523 obo:NCBITaxon_117571)

# Class: obo:NCBITaxon_32524 (Amniota)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_32524 "Amniota"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_32524 "amniotes"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32524 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32524 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32524 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_32524 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_32524 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_32524 "amniotes"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_32524 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_32524 "Amniota"^^xsd:string)
SubClassOf(obo:NCBITaxon_32524 obo:NCBITaxon_117571)
SubClassOf(obo:NCBITaxon_32524 obo:NCBITaxon_32523)

# Class: obo:NCBITaxon_33154 (Opisthokonta)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_33154 "Opisthokonta"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33154 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33154 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33154 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33154 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_33154 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_33154 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_33154 "Fungi/Metazoa group"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_33154 "opisthokonts"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33154 "Opisthokonta"^^xsd:string)
SubClassOf(obo:NCBITaxon_33154 obo:NCBITaxon_2759)

# Class: obo:NCBITaxon_33213 (Bilateria)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_33213 "Bilateria"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33213 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33213 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33213 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_33213 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_33213 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_33213 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_33213 "Bilateria"^^xsd:string)
SubClassOf(obo:NCBITaxon_33213 obo:NCBITaxon_33154)

# Class: obo:NCBITaxon_40674 (Mammalia)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_40674 "Mammalia"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_40674 "mammals"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_40674 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_40674 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_40674 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_40674 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_40674 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_40674 "mammals"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_40674 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_40674 "mammals"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_40674 obo:NCBITaxon_class)
AnnotationAssertion(rdfs:label obo:NCBITaxon_40674 "Mammalia"^^xsd:string)
SubClassOf(obo:NCBITaxon_40674 obo:NCBITaxon_32524)

# Class: obo:NCBITaxon_7742 (Vertebrata <Metazoa>)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_7742 "Vertebrata <Metazoa>"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_7742 "Vertebrata"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_7742 "vertebrates"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_7742 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_7742 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_7742 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_7742 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_7742 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_7742 "Vertebrata"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_7742 "vertebrates"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_7742 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_7742 "vertebrates"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_7742 "Vertebrata <Metazoa>"^^xsd:string)
SubClassOf(obo:NCBITaxon_7742 obo:NCBITaxon_33213)

# Class: obo:NCBITaxon_9606 (Homo sapiens)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_9606 "Homo sapiens"@en)
AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_9606 "Homo sapiens"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_9606 "human"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_9606 "human being"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_9606 "man"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:ncbitaxon.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:pdro.owl)
AnnotationAssertion(obo:hasDbXref obo:NCBITaxon_9606 "GC_ID:1"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_9606 "human"^^xsd:string)
AnnotationAssertion(obo:hasExactSynonym obo:NCBITaxon_9606 "man"^^xsd:string)
AnnotationAssertion(obo:hasOBONamespace obo:NCBITaxon_9606 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(obo:hasRelatedSynonym obo:NCBITaxon_9606 "humans"^^xsd:string)
AnnotationAssertion(ncbitaxon:has_rank obo:NCBITaxon_9606 obo:NCBITaxon_species)
AnnotationAssertion(oboInOwl:hasDbXref obo:NCBITaxon_9606 "GC_ID:1"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:NCBITaxon_9606 "human"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:NCBITaxon_9606 "man"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:NCBITaxon_9606 "ncbi_taxonomy"^^xsd:string)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9606 "Homo sapiens"@en)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9606 "Homo sapiens"^^xsd:string)
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_2759)
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_314146)
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_314293)
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_9606)
SubClassOf(obo:NCBITaxon_9606 obo:OBI_0100026)
SubClassOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_1000009606))

# Class: obo:OBIB_0000012 (human subject recuiter role)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000012 "A worker role of recruiting human subjects to partcipate in a clinical investigation in which data about human subject is collected."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000012 "Person: Jie Zheng, Chris Stoeckert")
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000012 "Penn Group")
AnnotationAssertion(rdfs:label obo:OBIB_0000012 "human subject recuiter role"@en)
SubClassOf(obo:OBIB_0000012 obo:OBI_0000116)

# Class: obo:OBIB_0000017 (data confirm questionnaire)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000017 "A questionnaire that comprises a set of questions about patient, such as height, weight, race, biological sex, clinical history, etc., which will be filled by a recruiter based on an Electronic Medical Record (EMR)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000017 "Person: Jie Zheng, Chris Stoeckert")
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000017 "Penn Group")
AnnotationAssertion(rdfs:label obo:OBIB_0000017 "data confirm questionnaire"@en)
SubClassOf(obo:OBIB_0000017 obo:OBI_0001000)

# Class: obo:OBIB_0000018 (form filling)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000018 "A document editing process in which one or more fields in a form are filled with related information, such as when answering a questionnare."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000018 "Person: Jie Zheng, Chris Stoeckert")
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000018 "Penn Group")
AnnotationAssertion(rdfs:label obo:OBIB_0000018 "form filling"@en)
SubClassOf(obo:OBIB_0000018 obo:OBI_0302908)

# Class: obo:OBIB_0000026 (medication role)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000026 "A role borne by some material entity which can be delivered/administrated into some organism and the role is realized during a clinical treatment process aiming to treat symptoms, signs or diagnosed disease.")
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000026 "Person: Chris Stoeckert, Jie Zheng")
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000026 "Penn Group")
AnnotationAssertion(rdfs:label obo:OBIB_0000026 "medication role"@en)
SubClassOf(obo:OBIB_0000026 obo:BFO_0000023)

# Class: obo:OBIB_0000029 (medication material)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000029 "A material entity that is bearer of a medication role.")
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000029 "Person: Chris Stoeckert, Jie Zheng")
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000029 "Penn Group")
AnnotationAssertion(rdfs:label obo:OBIB_0000029 "medication material"@en)
EquivalentClasses(obo:OBIB_0000029 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBIB_0000026)))
SubClassOf(obo:OBIB_0000029 obo:BFO_0000040)

# Class: obo:OBIB_0000079 (blood draw time)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000079 "A data item that reports the time of day when a blood specimen was collected."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000079 "Person: Chris Stoeckert, Helena Ellis, Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000079 "OBIB"^^xsd:string)
AnnotationAssertion(obo:IAO_0000234 obo:OBIB_0000079 "NCI BBRB"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBIB_0000079 "blood draw time"^^xsd:string)
SubClassOf(obo:OBIB_0000079 obo:IAO_0000027)

# Class: obo:OBIB_0000231 (blood specimen collection)

AnnotationAssertion(obo:IAO_0000115 obo:OBIB_0000231 "A collecting specimen from organism that results in a blood specimen."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBIB_0000231 "Person: Chris Stoeckert, Helena Ellis, Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBIB_0000231 "blood draw"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBIB_0000231 "OBIB"^^xsd:string)
AnnotationAssertion(obo:IAO_0000234 obo:OBIB_0000231 "NCI BBRB"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBIB_0000231 "blood specimen collection"^^xsd:string)
SubClassOf(obo:OBIB_0000231 obo:OBI_0600005)

# Class: obo:OBI_0000011 (planned process)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000011 "planned process"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000011 "planned process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000011 "Injecting mice with a vaccine in order to test its efficacy"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000011 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000011 "A processual entity that realizes a plan which is the concretization of a plan specification."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000011 "'Plan' includes a future direction sense. That can be problematic if plans are changed during their execution. There are however implicit contingencies for protocols that an agent has in his mind that can be considered part of the plan, even if the agent didn't have them in mind before. Therefore, a planned process can diverge from what the agent would have said the plan was before executing it, by adjusting to problems encountered during execution (e.g. choosing another reagent with equivalent properties, if the originally planned one has run out.)"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000011 "We are only considering successfully completed planned processes. A plan may be modified, and details added during execution. For a given planned process, the associated realized plan specification is the one encompassing all changes made during execution. This means that all processes in which an agent acts towards achieving some 
objectives is a planned process."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000011 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000011 "branch derived"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "6/11/9: Edited at workshop. Used to include: is initiated by an agent"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "This class merges the previously separated objective driven process and planned process, as they the separation proved hard to maintain. (1/22/09, branch call)"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 "http://purl.obolibrary.org/obo/obi.owl"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000011 "planned process")
AnnotationAssertion(rdfs:label obo:OBI_0000011 "planned process"@en)
EquivalentClasses(obo:OBI_0000011 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectSomeValuesFrom(obo:RO_0000059 obo:IAO_0000104)))
SubClassOf(obo:OBI_0000011 obo:BFO_0000015)

# Class: obo:OBI_0000015 (biological feature identification objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000015 "biological feature identification objective"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000015 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000015 "Biological_feature_identification_objective is an objective role carried out by the proposition defining the aim of a study designed to examine or characterize a particular biological feature."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000015 "Jennifer Fostel"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000015 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000015 "biological feature identification objective"@en)
SubClassOf(obo:OBI_0000015 obo:IAO_0000005)

# Class: obo:OBI_0000047 (processed material)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000047 "processed material"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000047 "Examples include gel matrices, filter paper, parafilm and buffer solutions, mass spectrometer, tissue samples"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000047 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000047 "Is a material entity that is created or changed during material processing."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000047 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000047 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000047 "processed material"@en)
EquivalentClasses(obo:OBI_0000047 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000094)))
SubClassOf(obo:OBI_0000047 obo:BFO_0000040)

# Class: obo:OBI_0000066 (investigation)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000066 "investigation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000066 "Lung cancer investigation using expression profiling, a stem cell transplant investigation, biobanking is not an investigation, though it may be part of an investigation"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000066 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000066 "a planned process that consists of parts: planning, study design execution, documentation and which produce conclusion(s)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000066 "Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000066 "OBI branch derived"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000066 "Could add specific objective specification"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000066 "Following OBI call November 2012,26th: it was decided there was no need for adding \"achieves objective of drawing conclusion\" as existing relations were providing equivalent ability. this note closes the issue and validates the class definition to be part of the OBI core
editor = PRS"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000066 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000066 obo:obi.owl)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000066 "study"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000066 "investigation"@en)
SubClassOf(obo:OBI_0000066 obo:OBI_0000011)
SubClassOf(obo:OBI_0000066 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000572))
SubClassOf(obo:OBI_0000066 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OBI_0000338))
SubClassOf(obo:OBI_0000066 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OBI_0000471))
SubClassOf(obo:OBI_0000066 ObjectSomeValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(obo:OBI_0000339 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0500000))))

# Class: obo:OBI_0000067 (evaluant role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000067 "evaluant role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000067 "When a specimen of blood is assayed for glucose concentration, the blood has the evaluant role. When measuring the mass of a mouse, the evaluant is the mouse. When measuring the time of DNA replication, the evaluant is the DNA. When measuring the intensity of light on a surface, the evaluant is the light source."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000067 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000067 "a role that inheres in a material entity that is realized in an assay in which data is generated about the bearer of the evaluant role"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000067 "Role call - 17nov-08: JF and MC think an evaluant role is always specified input of a process. Even in the case where we have an assay taking blood as evaluant and outputting blood, the blood is not the specified output at the end of the assay (the concentration of glucose in the blood is)"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000067 "examples of features that could be described in an evaluant: quality.... e.g. \"contains 10 pg/ml IL2\", or \"no glucose detected\")"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000067 "GROUP:  Role Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000067 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000067 "Feb 10, 2009.  changes after discussion at OBI Consortium Workshop Feb 2-6, 2009.  accepted as core term."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000067 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000067 "evaluant role"@en)
SubClassOf(obo:OBI_0000067 obo:BFO_0000023)
SubClassOf(obo:OBI_0000067 ObjectSomeValuesFrom(obo:RO_0000052 obo:BFO_0000040))
SubClassOf(obo:OBI_0000067 ObjectAllValuesFrom(obo:BFO_0000054 obo:OBI_0000070))

# Class: obo:OBI_0000070 (assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000070 "assay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000070 "Assay the wavelength of light emitted by excited Neon atoms. Count of geese flying over a house."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000070 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000070 "A planned process with the objective to produce information about the material entity that is the evaluant, by physically examining it or its proxies."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000070 "12/3/12: BP: the reference to the 'physical examination' is included to point out that a prediction is not an assay, as that does not require physical examiniation. ")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000070 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000070 "measuring"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000070 "scientific observation"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000070 "OBI branch derived"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000070 obo:obi.owl)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000070 "study assay"^^xsd:string)
AnnotationAssertion(obo:OBI_9991118 obo:OBI_0000070 "any method"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000070 "assay"@en)
EquivalentClasses(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441))
SubClassOf(obo:OBI_0000070 obo:OBI_0000011)
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:BFO_0000055 obo:OBI_0000067))
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))))
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectIntersectionOf(obo:IAO_0000027 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))))))
SubClassOf(obo:OBI_0000070 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectIntersectionOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))))))

# Class: obo:OBI_0000079 (culture medium)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000079 "culture medium"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000079 "A growth medium or culture medium is a substance in which microorganisms or cells can grow.  Wikipedia, growth medium, Feb 29, 2008"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000079 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000079 "a processed material that provides the needed nourishment for microorganisms or cells grown in vitro."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000079 "changed from a role to a processed material based on on Aug 22, 2011 dev call. Details see the tracker item: http://sourceforge.net/tracker/?func=detail&aid=3325270&group_id=177891&atid=886178
Modification made by JZ."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000079 "Person: Jennifer Fostel, Jie Zheng"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000079 "OBI"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000079 "culture medium"@en)
SubClassOf(obo:OBI_0000079 obo:OBI_0000047)

# Class: obo:OBI_0000086 (reagent role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000086 "reagent role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000086 "Buffer, dye, a catalyst, a solvating agent."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000086 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000086 "A role inhering in a biological or chemical entity that is intended to be applied in a scientific technique to participate (or have molecular components that participate) in a chemical reaction that facilitates the generation of data about some entity distinct from the bearer, or the generation of some specified material output distinct from the bearer."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000086 "PERSON:Matthew Brush"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000086 "reagent"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000086 "PERSON:Matthew Brush"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000086 "Feb 10, 2009.  changes after discussion at OBI Consortium Workshop Feb 2-6, 2009.  accepted as core term.

May 28 2013. Updated definition taken from ReO based on discussions initiated in Philly 2011 workshop.  Former defnition described a narrower view of reagents in chemistry that restricts bearers of the role to be chemical entities (\"a role played by a molecular entity used to produce a chemical reaction to detect, measure, or produce other substances\").  Updated definition allows for broader view of reagents in the domain of biomedical research to include larger materials that have parts that participate chemically in a molecular reaction or interaction.
"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000086 obo:obi.owl)
AnnotationAssertion(rdfs:comment obo:OBI_0000086 "(copied from ReO)
Reagents are distinguished from instruments or devices that also participate in scientific techniques by the fact that reagents are chemical or biological in nature and necessarily participate in or have parts that participate in some chemical interaction or reaction during their intended participation in some technique.  By contrast, instruments do not participate in a chemical reaction/interaction during the technique.

Reagents are distinguished from study subjects/evaluants in that study subjects and evaluants are that about which conclusions are drawn and knowledge is sought in an investigation - while reagents, by definition, are not.  It should be noted, however, that reagent and study subject/evaluant roles can be borne by instances of the same type of material entity - but a given instance will realize only one of these roles in the execution of a given assay or technique. For example, taq polymerase can bear a reagent role or an evaluant role.  In a DNA sequencing assay aimed at generating sequence data about some plasmid, the reagent role of the taq polymerase is realized. In an assay to evaluate the quality of the taq polymerase itself, the evaluant/study subject role of the taq is realized, but not the reagent role since the taq is the subject about which data is generated.

In regard to the statement that reagents are 'distinct' from the specified outputs of a technique, note that a reagent may be incorporated into a material output of a technique, as long as the IDENTITY of this output is distinct from that of the bearer of the reagent role.  For example, dNTPs input into a PCR are reagents that become part of the material output of this technique, but this output has a new identity (ie that of a 'nucleic acid molecule') that is distinct from the identity of the dNTPs that comprise it.  Similarly, a biotin molecule input into a cell labeling technique are reagents that become part of the specified output, but the identity of the output is that of some modified cell specimen which shares identity with the input unmodified cell specimen, and not with the biotin label. Thus, we see that an important criteria of 'reagent-ness' is that it is a facilitator, and not the primary focus of an investigation or material processing technique (ie not the specified subject/evaluant about which knowledge is sought, or the specified output material of the technique).")
AnnotationAssertion(rdfs:label obo:OBI_0000086 "reagent role"@en)
SubClassOf(obo:OBI_0000086 obo:BFO_0000023)

# Class: obo:OBI_0000093 (patient role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000093 "patient role"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000093 "patient role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000093 "a hospitalized person; a person with controlled diabetes; the patient's role http://www.fertilityjourney.com/testingAndDiagnosis/theRightDoctor/thePatientsRole/index.asp?C=55245395146924652778"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000093 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000093 "a role which inheres in a person and is realized by the process of being under the care of a physician or health care provider"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000093 "GROUP:Role Branch"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000093 "patient"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000093 "OBI, CDISC"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000093 "CDISC definition:  patient. Person under a physician's care for a particular disease or condition. NOTE: A subject in a clinical trial is not necessarily a patient, but a patient in a clinical trial is a subject. See also subject, trial subject, healthy volunteer. Often used interchangeably"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000093 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000093 "patient role"@en)
SubClassOf(obo:OBI_0000093 obo:BFO_0000023)
SubClassOf(obo:OBI_0000093 ObjectSomeValuesFrom(obo:RO_0000052 obo:NCBITaxon_9606))

# Class: obo:OBI_0000094 (material processing)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000094 "material processing"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000094 "A cell lysis, production of a cloning vector, creating a buffer."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000094 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000094 "A planned process which results in physical changes in a specified input material"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000094 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000094 "PERSON: Frank Gibson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000094 "PERSON: Jennifer Fostel"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000094 "PERSON: Melanie Courtot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000094 "PERSON: Philippe Rocca Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000094 "material transformation"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000094 "OBI branch derived"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000094 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000094 "material processing"@en)
EquivalentClasses(obo:OBI_0000094 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000456))
SubClassOf(obo:OBI_0000094 obo:OBI_0000011)
SubClassOf(obo:OBI_0000094 ObjectSomeValuesFrom(obo:OBI_0000293 obo:BFO_0000040))
SubClassOf(obo:OBI_0000094 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0000047))
SubClassOf(obo:OBI_0000094 ObjectAllValuesFrom(obo:OBI_0000293 obo:BFO_0000040))
SubClassOf(obo:OBI_0000094 ObjectAllValuesFrom(obo:OBI_0000299 obo:BFO_0000040))

# Class: obo:OBI_0000097 (participant under investigation role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000097 "study subject role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000097 "Human subjects in a clinical trial, rats in a toxicogenomics study, tissue cutlures subjected to drug tests, fish observed in an ecotoxicology study. 
Parasite example: people are infected with a parasite which is then extracted; the particpant under investigation could be the parasite, the people, or a population of which the people are members, depending on the nature of the study.
Lake example: a lake could realize this role in an investigation that assays pollution levels in samples of water taken from the lake."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000097 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000097 "A role that is realized through the execution of a study design in which the bearer of the role participates and in which data about that bearer is collected."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000097 "A participant can realize both \"specimen role\" and \"participant under investigation role\" at the same time. However \"participant under investigation role\" is distinct from \"specimen role\", since a specimen could somehow be involved in an investigation without being the thing that is under investigation.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000097 "GROUP:  Role Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000097 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000097 "Following OBI call November 2012,26th:
 
1. it was decided there was no need for moving the children class and making them siblings of study subject role.
2. it also settles the disambiguation about 'study subject'. This is about the individual participating in the investigation/study, Not the 'topic' (as in 'toxicity study') of the investigation/study

This note closes the issue and validates the class definition to be part of the OBI core
editor = PRS
"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000097 "participant under investigation role"@en)
SubClassOf(obo:OBI_0000097 obo:BFO_0000023)
SubClassOf(obo:OBI_0000097 ObjectAllValuesFrom(obo:BFO_0000054 obo:OBI_0000471))

# Class: obo:OBI_0000112 (specimen role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000112 "specimen role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000112 "liver section; a portion of a culture of cells; a nemotode or other animal once no longer a subject (generally killed); portion of blood from a patient."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000112 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000112 "a role borne by a material entity that is gained during a specimen collection process and that can be realized by use of the specimen in an investigation"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000112 "22Jun09.  The definition includes whole organisms, and can include a human.  The link between specimen role and study subject role has been removed.  A specimen taken as part of a case study is not considered to be a population representative, while a specimen taken as representing a population, e.g. person taken from a cohort, blood specimen taken from an animal) would be considered a population representative and would also bear material sample role."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000112 "Note: definition is in specimen creation objective which is defined as an objective to obtain and store a material entity for potential use as an input during an investigation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000112 "blood taken from animal: animal continues in study, whereas blood has role specimen.
something taken from study subject, leaves the study and becomes the specimen."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000112 "parasite example
- when parasite in people we study people, people are subjects and parasites are specimen
- when parasite extracted, they become subject in the following study
specimen can later be subject."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000112 "GROUP:  Role Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000112 "OBI"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000112 "specimen role"@en)
SubClassOf(obo:OBI_0000112 obo:BFO_0000023)
SubClassOf(obo:OBI_0000112 ObjectSomeValuesFrom(obo:RO_0000052 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000659))))

# Class: obo:OBI_0000113 (sequence feature identification objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000113 "sequence feature identification objective"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000113 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000113 "Sequence_feature_identification_objective is a biological_feature_identification_objective role describing a study designed to examine or characterize molecular features exhibited at the level of a macromolecular sequence, e.g. nucleic acid, protein, polysaccharide."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000113 "Jennifer Fostel"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000113 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000113 "sequence feature identification objective"@en)
SubClassOf(obo:OBI_0000113 obo:OBI_0000015)

# Class: obo:OBI_0000116 (worker role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000116 "worker role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000116 "Public sector workers in states that run their own OSHA programs are covered by those states.   http://www.osha.gov/as/opa/worker/index.html"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000116 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000116 "a personnel role played by a party who executes a component of the study plan; this can occur before, during, after or outside the study timeline"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000116 "\"executes the study plan\" includes the suppliers and manufacturers of reagents and other materials used in the study"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000116 "Person:Jennifer Fostel"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000116 "worker"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000116 "OBI"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000116 "worker role"@en)
SubClassOf(obo:OBI_0000116 obo:OBI_0000202)

# Class: obo:OBI_0000181 (population)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000181 "population"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000181 "PMID12564891. Environ Sci Technol. 2003 Jan 15;37(2):223-8. Effects of historic PCB exposures on the reproductive success of the Hudson River striped bass population."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000181 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000181 "a population is a collection of individuals from the same taxonomic class living, counted or sampled at a particular site or in a particular area"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000181 "1/28/2013, BP, on the call it was raised that we may want to switch to an external ontology for all populatin terms: 
http://code.google.com/p/popcomm-ontology/")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000181 "PERSON: Philippe Rocca-Serra"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000181 "adapted from Oxford English Dictionnary"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000181 "rem1: collection somehow always involve a selection process"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000181 "population"@en)
SubClassOf(obo:OBI_0000181 obo:BFO_0000040)

# Class: obo:OBI_0000202 (investigation agent role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000202 "investigation agent role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000202 "The person perform microarray experiments and submit microarray results (including raw data, processed data) with experiment description to ArrayExpress."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000202 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000202 "A role borne by an entity and that is realized in a process that is part of an investigation in which an objective is achieved. These processes include, among others: planning, overseeing, funding, reviewing."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000202 "Implementing a study means carrying out or performing the study and providing reagents or other materials used in the study and other tasks without which the study would not happen."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000202 "Philly2013: Historically, this role would have been borne only by humans or organizations. However, we now also want to enable representing investigations run by robot scientists such as ADAM (King et al, Science, 2009)")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000202 "GROUP:  Role Branch"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000202 "investigator"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000202 "OBI"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000202 "Feb 10, 2009.  changes after discussion at OBI Consortium Workshop Feb 2-6, 2009.  accepted as core term."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000202 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000202 obo:obi.owl)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000202 "study person role"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:OBI_0000202 "Philly2013: Historically, this role would have been borne only by humans or organizations. However, we now also want to enable investigations run by robot scientists such as ADAM (King et al, Science, 2009)")
AnnotationAssertion(rdfs:label obo:OBI_0000202 "investigation agent role"^^xsd:string)
EquivalentClasses(obo:OBI_0000202 ObjectIntersectionOf(obo:BFO_0000023 ObjectSomeValuesFrom(obo:RO_0000052 ObjectSomeValuesFrom(obo:RO_0000053 ObjectSomeValuesFrom(obo:RO_0000059 ObjectSomeValuesFrom(obo:OBI_0000833 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0000066)))))))
SubClassOf(obo:OBI_0000202 obo:BFO_0000023)
SubClassOf(obo:OBI_0000202 ObjectAllValuesFrom(obo:BFO_0000054 obo:OBI_0000066))

# Class: obo:OBI_0000245 (organization)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000245 "organization"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000245 "PMID: 16353909.AAPS J. 2005 Sep 22;7(2):E274-80. Review. The joint food and agriculture organization of the United Nations/World Health Organization Expert Committee on Food Additives and its role in the evaluation of the safety of veterinary drug residues in foods."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000245 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000245 "An entity that can bear roles, has members, and has a set of organization rules. Members of organizations are either organizations themselves or individual people. Members can bear specific organization member roles that are determined in the organization rules. The organization rules also determine how decisions are made on behalf of the organization by the organization members."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000245 "An organization is a continuant entity which can play roles,  has members, and has a set of organization rules.  Members of organizations are either organizations themselves or individual people. Members can bear specific organization member roles that are determined in the organization rules. The organization rules also determine how decisions are made on behalf of the organization by the organization members."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000245 "BP: The definition summarizes long email discussions on the OBI developer, roles, biomaterial and denrie branches. It leaves open if an organization is a material entity or a dependent continuant, as no consensus was reached on that.  The current placement as material is therefore temporary, in order to move forward with development. Here is the entire email summary, on which the definition is based:

1) there are organization_member_roles (president, treasurer, branch
editor), with individual persons as bearers

2) there are organization_roles (employer, owner, vendor, patent holder)

3) an organization has a charter / rules / bylaws, which specify what roles
there are, how they should be realized, and how to modify the
charter/rules/bylaws themselves.

It is debatable what the organization itself is (some kind of dependent
continuant or an aggregate of people). This also determines who/what the
bearer of organization_roles' are. My personal favorite is still to define
organization as a kind of 'legal entity', but thinking it through leads to
all kinds of questions that are clearly outside the scope of OBI.

Interestingly enough, it does not seem to matter much where we place
organization itself, as long as we can subclass it (University, Corporation,
Government Agency, Hospital), instantiate it (Affymetrix, NCBI, NIH, ISO,
W3C, University of Oklahoma), and have it play roles.

This leads to my proposal: We define organization through the statements 1 -
3 above, but without an 'is a' statement for now. We can leave it in its
current place in the is_a hierarchy (material entity) or move it up to
'continuant'. We leave further clarifications to BFO, and close this issue
for now."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Susanna Sansone"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000245 "GROUP: OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000245 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000245 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000245 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000245 "organization"@en)
SubClassOf(obo:OBI_0000245 obo:BFO_0000040)

# Class: obo:OBI_0000257 (DNA extraction)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000257 "DNA extraction"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000257 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000257 "A DNA extraction is a nucleic acid extraction where the desired output material is DNA."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000257 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000257 "OBI branch derived"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000257 "DNA extraction"@en)
SubClassOf(obo:OBI_0000257 obo:OBI_0666667)
SubClassOf(obo:OBI_0000257 ObjectSomeValuesFrom(obo:OBI_0000299 obo:CHEBI_16991))

# Class: obo:OBI_0000260 (plan)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000260 "plan"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000260 "The plan of researcher X to perform an experiment according to a protocol."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000260 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000260 "A plan is a realizable entity that is the inheres in a bearer who is committed to realizing it as a planned process."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000260 "This class is included to make clear how the plan specification, the plan, and the planned process relate. OBI will however only subclass and work under the 'plan specification', and 'planned process' class, as we want to avoid to get deep into discussions of 'intend' etc."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000260 "AR, BP, JM, MC, PRS"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000260 "branch derived"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000260 "plan"@en)
SubClassOf(obo:OBI_0000260 obo:BFO_0000017)

# Class: obo:OBI_0000272 (protocol)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000272 "protocol"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000272 "PCR protocol, has objective specification, amplify DNA fragment of interest, and has action specification describes the amounts of experimental reagents used (e..g. buffers, dNTPS, enzyme), and the temperature and cycle time settings for running the PCR."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000272 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000272 "A plan specification which has sufficient level of detail and quantitative information to communicate it between investigation agents, so that different investigation agents will reliably be able to independently reproduce the process."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000272 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000272 "OBI branch derived + wikipedia (http://en.wikipedia.org/wiki/Protocol_%28natural_sciences%29)"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000272 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000272 obo:obi.owl)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000272 "study protocol"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000272 "protocol"@en)
SubClassOf(obo:OBI_0000272 obo:IAO_0000104)

# Class: obo:OBI_0000275 (analyte role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000275 "analyte role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000275 "Glucose in blood (measured in an assay to determine the concentration of glucose)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000275 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000275 "A role borne by a molecular entity or an atom and realized in an analyte assay which achieves the objective to measure the magnitude/concentration/amount of the analyte in the entity bearing evaluant role"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000275 "interestingly, an analyte is still an analyte even if it is not detected.  for this reason it does not bear a specified input role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000275 "pH (technically the inverse log of [H+]) may be considered a quality; this remains to be tested."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000275 "qualities such as weight, color are not assayed but measured, so they do not fall into this category."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000275 "GROUP: Role Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000275 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000275 "Feb 10, 2009.  changes after discussion at OBI Consortium Workshop Feb 2-6, 2009.  accepted as core term."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000275 "analyte role"@en)
SubClassOf(obo:OBI_0000275 obo:BFO_0000023)
SubClassOf(obo:OBI_0000275 ObjectSomeValuesFrom(obo:RO_0000081 ObjectUnionOf(obo:CHEBI_23367 obo:CHEBI_33250)))
SubClassOf(obo:OBI_0000275 ObjectAllValuesFrom(obo:BFO_0000054 obo:OBI_0000443))

# Class: obo:OBI_0000338 (drawing a conclusion based on data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000338 "drawing a conclusion based on data"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000338 "interpreting data"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000338 "Concluding that a gene is upregulated in a tissue sample based on the band intensity in a western blot.  Concluding that a patient has a infection based on measurement of an elevated body temperature and reported headache. Concluding that there were problems in an investigation because data from PCR and microarray are conflicting. Concluding that 'defects in gene XYZ cause cancer due to improper DNA repair' based on data from experiments in that study that gene XYZ is involved in DNA repair, and the conclusion of a previous study that cancer patients have an increased number of mutations in this gene. "^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000338 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000338 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000338 "A planned process in which data gathered in an investigation is evaluated in the context of existing knowledge with the objective to generate more general conclusions or to conclude that the data does not allow one to draw general conclusion"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000338 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000338 "PERSON: Jennifer Fostel"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000338 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000338 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000338 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000338 "drawing a conclusion based on data"@en)
SubClassOf(obo:OBI_0000338 obo:OBI_0000011)
SubClassOf(obo:OBI_0000338 ObjectSomeValuesFrom(obo:OBI_0000293 obo:IAO_0000027))
SubClassOf(obo:OBI_0000338 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0001909))

# Class: obo:OBI_0000339 (planning)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000339 "planning"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000339 "planning"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000339 "The process of a scientist thinking about and deciding what reagents to use as part of a protocol for an experiment. Note that the scientist could be human or a \"robot scientist\" executing software."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000339 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000339 "a process of creating or modifying a plan specification"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000339 "7/18/2011 BP: planning used to itself be a planned process. Barry Smith pointed out that this would lead to an infinite regression, as there would have to be a plan to conduct a planning process, which in itself would be the result of planning etc. Therefore, the restrictions on 'planning' were loosened to allow for informal processes that result in an 'ad hoc plan '. This required changing from 'has_specified_output some plan specifiction' to 'has_participant some plan specification'. "^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000339 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000339 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000339 "Plans and Planned Processes Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000339 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000339 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000339 "planning"@en)
SubClassOf(obo:OBI_0000339 obo:BFO_0000015)
SubClassOf(obo:OBI_0000339 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:RO_0000057 obo:IAO_0000104)))

# Class: obo:OBI_0000372 (material separation function)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000372 "material separation function"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000372 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000372 "A material separation function is a function that increases the resolution between two or more material entities. The  to distinction between the entities is usually based on some associated physical quality."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000372 "Bill Bug"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000372 "Daniel Schober"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000372 "Frank Gibson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000372 "Melanie Courtot"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000372 "material separation function"@en)
SubClassOf(obo:OBI_0000372 obo:BFO_0000034)

# Class: obo:OBI_0000379 (mechanical function)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000379 "mechanical function"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000379 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000379 "A mechanical function is a function that is realised via mechanical work (through an certain amount of energy transferred by some force)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000379 "Bill Bug"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000379 "Daniel Schober"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000379 "Frank Gibson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000379 "Melanie Courtot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000379 "http://en.wikipedia.org/wiki/Mechanical_work"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000379 "mechanical function"@en)
SubClassOf(obo:OBI_0000379 obo:BFO_0000034)

# Class: obo:OBI_0000423 (extract)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000423 "extract"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000423 "Up-regulation of inflammatory signalings by areca nut extract and role of cyclooxygenase-2 -1195G>a polymorphism reveal risk of oral cancer. Cancer Res. 2008 Oct 15;68(20):8489-98. PMID: 18922923"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000423 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000423 "an extract is a material entity which results from an extraction process"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000423 "PERSON: Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000423 "extracted material"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000423 "GROUP: OBI Biomatrial Branch"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000423 "extract"@en)
SubClassOf(obo:OBI_0000423 obo:OBI_0000047)
SubClassOf(obo:OBI_0000423 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0302884))

# Class: obo:OBI_0000433 (DNA sequence feature detection)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000433 "DNA sequence feature detection"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000433 "genotyping using an Affymetrix chip"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000433 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000433 "An assay with the objective to determine a sequence feature of DNA"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000433 "should be a defined class where interpretation of data generated by assay qualifies a DNA sequence"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000433 "Person:Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000433 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000433 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000433 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000433 "DNA sequence feature detection"@en)
SubClassOf(obo:OBI_0000433 obo:OBI_0000070)
SubClassOf(obo:OBI_0000433 ObjectSomeValuesFrom(obo:OBI_0000293 obo:CHEBI_16991))
SubClassOf(obo:OBI_0000433 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000109))
SubClassOf(obo:OBI_0000433 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000113))
SubClassOf(obo:OBI_0000433 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441))

# Class: obo:OBI_0000437 (analyte measurement objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000437 "analyte measurement objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000437 "The objective to measure the concentration of glucose in a blood sample"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000437 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000437 "an assay objective to determine the presence or concentration of an analyte in the evaluant"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000437 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000437 "PPPB branch"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000437 "analyte measurement objective"@en)
SubClassOf(obo:OBI_0000437 obo:OBI_0000441)

# Class: obo:OBI_0000438 (DNA sequence variation detection)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000438 "DNA sequence variation detection"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000438 "Capturing genomic signatures of DNA sequence variation using a standard anonymous microarray platform. Nucleic Acids Res. 2006;34(18):e121. PMID: 17000641"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000438 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000438 "DNA sequence variation detection is a process which aims at finding changes (expansion, amplification, deletion, mutation) in sequence of DNA molecule."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000438 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000438 "OBI Biomaterial"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000438 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000438 "DNA sequence variation detection"@en)
SubClassOf(obo:OBI_0000438 obo:OBI_0000070)
SubClassOf(obo:OBI_0000438 ObjectSomeValuesFrom(obo:OBI_0000293 obo:CHEBI_16991))
SubClassOf(obo:OBI_0000438 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000109))
SubClassOf(obo:OBI_0000438 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000113))
SubClassOf(obo:OBI_0000438 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441))

# Class: obo:OBI_0000441 (assay objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000441 "assay objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000441 "the objective to determine the weight of a mouse."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000441 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000441 "an objective specification to determine a specified type of information about an evaluated entity (the material entity bearing evaluant role)"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000441 "PPPB branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000441 "PPPB branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000441 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000441 "assay objective"@en)
SubClassOf(obo:OBI_0000441 obo:IAO_0000005)

# Class: obo:OBI_0000443 (analyte assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000443 "analyte assay"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000443 "example of usage: In lab test for blood glucose, the test is the assay, the blood bears evaluant_role and glucose bears the analyte role. The evaluant is considered an input to the assay and the information entity that records the measurement of glucose concentration the output"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000443 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000443 "An assay with the objective to capture information about the presence, concentration, or amount of an analyte in an evaluant."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000443 "2013-09-23: simplify equivalent axiom")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000443 "Note: is_realization of some analyte role isn't always true, for example when there is none of the analyte in the evaluant. For the moment we are writing it this way, but when the information ontology is further worked out this will be replaced with a condition discussing the measurement."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000443 "logical def modified to remove expression below, as some analyte assays report below the level of detection, and therefore not a scalar measurement datum, replaced by measurement datum

and 
('has measurement unit label' some 'measurement unit label') and 
('is quality measurement of' some 'molecular concentration'))"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000443 "PERSON:Bjoern Peters, Helen Parkinson, Philippe Rocca-Serra, Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000443 "PERSON:Bjoern Peters
PERSON:Helen Parkinson
PERSON:Philippe Rocca-Serra
PERSON:Alan Ruttenberg
GROUP:OBI Planned process branch"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000443 "analyte assay"@en)
EquivalentClasses(obo:OBI_0000443 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000437))
SubClassOf(obo:OBI_0000443 obo:OBI_0000070)
SubClassOf(obo:OBI_0000443 ObjectSomeValuesFrom(obo:BFO_0000055 obo:OBI_0000275))
SubClassOf(obo:OBI_0000443 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000109))

# Class: obo:OBI_0000445 (mass measurement assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000445 "mass measurement assay"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000445 "The patients was weighed and mass was determined to be 47 kilograms"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000445 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000445 "a process to determine the mass of an evaluant"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000445 "Helen Parkinson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000445 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000445 obo:obi.owl)
AnnotationAssertion(rdfs:comment obo:OBI_0000445 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000445 "mass measurement assay"@en)
SubClassOf(obo:OBI_0000445 obo:OBI_0000070)
SubClassOf(obo:OBI_0000445 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectIntersectionOf(obo:OBI_0000067 ObjectSomeValuesFrom(obo:RO_0000081 obo:BFO_0000040))))
SubClassOf(obo:OBI_0000445 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))))
SubClassOf(obo:OBI_0000445 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000414))
SubClassOf(obo:OBI_0000445 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441))

# Class: obo:OBI_0000453 (measure function)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000453 "measure function"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000453 "A glucometer measures blood glucose concentration, the glucometer has a measure function."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000453 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000453 "Measure function is a function that is borne by a processed material  and realized in a process in which information about some entity is expressed relative to some reference."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000453 "PERSON: Daniel Schober"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000453 "PERSON: Helen Parkinson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000453 "PERSON: Melanie Courtot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000453 "PERSON:Frank Gibson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000453 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000453 "measure function"@en)
SubClassOf(obo:OBI_0000453 obo:BFO_0000034)
SubClassOf(obo:OBI_0000453 ObjectSomeValuesFrom(obo:RO_0000079 obo:OBI_0000047))
SubClassOf(obo:OBI_0000453 ObjectAllValuesFrom(obo:BFO_0000054 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000109)))

# Class: obo:OBI_0000456 (material transformation objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000456 "material transformation objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000456 "The objective to create a mouse infected with LCM virus. The objective to create a defined solution of PBS."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000456 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000456 "an objective specifiction that creates an specific output object from input materials."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000456 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000456 "PERSON: Frank Gibson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000456 "PERSON: Jennifer Fostel"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000456 "PERSON: Melanie Courtot"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000456 "PERSON: Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000456 "artifact  creation objective"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000456 "GROUP: OBI PlanAndPlannedProcess Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000456 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000456 "material transformation objective"@en)
SubClassOf(obo:OBI_0000456 obo:IAO_0000005)

# Class: obo:OBI_0000471 (study design execution)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000471 "study design execution"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000471 "injecting a mouse with PBS solution, weighing it, and recording the weight according to a study design."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000471 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000471 "a planned process that carries out a study design"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000471 "a planned process that realizes the concretization of a study design"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000471 "removed axiom has_part some (assay or 'data transformation') per discussion on protocol application mailing list to improve reasoner performance. The axiom is still desired."^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000471 "branch derived"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000471 "6/11/9: edited at workshop. Used to be: study design execution is a process with the objective to generate data according to a concretized study design. The execution of a study design is part of an investigation, and minimally consists of an assay or data transformation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000471 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000471 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000471 "study design execution"^^xsd:string)
EquivalentClasses(obo:OBI_0000471 ObjectIntersectionOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectSomeValuesFrom(obo:RO_0000059 obo:OBI_0500000))))
SubClassOf(obo:OBI_0000471 obo:OBI_0000011)

# Class: obo:OBI_0000576 (scattered molecular aggregate)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000576 "scattered molecular aggregate"@en)
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000576 "scattered molecular aggregate"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000576 "the sodium and chloride ions in a glass of salt water"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000576 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000576 "A scattered molecular aggregate is a material entity that consists of all the molecules of a specific type that are located in some bounded region and which is part of a more massive material entity that has parts that are other such aggregates"@en)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000576 "a material entity that consists of all the molecules of a specific type that are located in some bounded region and which is part of a more massive material entity that has parts that are other such aggregates"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000576 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000576 "Collective"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000576 "Discussion in Karslruhe with, among others, Alan Rector, Stefan Schulz, Marijke Keet, Melanie Courtot, and Alan Ruttenberg. With inspiration from the paper Granularity, scale and collectivity: When size does and does not matter, Alan Recto, Jeremy Rogers, Thomas Bittner, Journal of Biomedical Informatics 39 (2006) 333-349"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000576 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000576 "scattered molecular aggregate"@en)
SubClassOf(obo:OBI_0000576 obo:BFO_0000027)
SubClassOf(obo:OBI_0000576 obo:BFO_0000040)
SubClassOf(obo:OBI_0000576 ObjectSomeValuesFrom(obo:OBI_0000643 obo:CHEBI_23367))
SubClassOf(obo:OBI_0000576 ObjectAllValuesFrom(obo:OBI_0000643 obo:CHEBI_23367))

# Class: obo:OBI_0000626 (DNA sequencing)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000626 "DNA sequencing"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000626 "Genomic deletions of OFD1 account for 23% of oral-facial-digital type 1 syndrome after negative DNA sequencing. Thauvin-Robinet C, Franco B, Saugier-Veber P, Aral B, Gigot N, Donzel A, Van Maldergem L, Bieth E, Layet V, Mathieu M, Teebi A, Lespinasse J, Callier P, Mugneret F, Masurel-Paulet A, Gautier E, Huet F, Teyssier JR, Tosi M, Frébourg T, Faivre L.  Hum Mutat. 2008 Nov 19. PMID: 19023858"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000626 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000626 "DNA sequencing is a sequencing process which uses deoxyribonucleic acid as input and results in a the creation of DNA sequence information artifact using a DNA sequencer instrument."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000626 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000626 "OBI Branch derived"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000626 obo:obi.owl)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000626 "nucleotide sequencing"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000626 "DNA sequencing"^^xsd:string)
EquivalentClasses(obo:OBI_0000626 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:OBI_0000293 ObjectIntersectionOf(obo:CHEBI_16991 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))) ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0001573)))
SubClassOf(obo:OBI_0000626 obo:OBI_0600047)
SubClassOf(obo:OBI_0000626 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441))
SubClassOf(obo:OBI_0000626 ObjectSomeValuesFrom(obo:RO_0000057 obo:OBI_0400103))

# Class: obo:OBI_0000639 (material separation objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000639 "material separation objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000639 "The objective to obtain multiple aliquots of an enzyme preparation. The objective to obtain cells contained in a sample of blood."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000639 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000639 "is an objective to transform a material entity into spatially separated components."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000639 "PPPB branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000639 "PPPB branch"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000639 "material separation objective"^^xsd:string)
EquivalentClasses(obo:OBI_0000639 ObjectUnionOf(obo:OBI_0000678 obo:OBI_0000681))
SubClassOf(obo:OBI_0000639 obo:OBI_0000456)

# Class: obo:OBI_0000655 (blood specimen)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000655 "blood specimen"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000655 "blood drawn from a human for glucose assay"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000655 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000655 "a material entity derived from a portion of blood collected from an organism"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000655 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000655 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000655 "blood specimen"^^xsd:string)
SubClassOf(obo:OBI_0000655 obo:OBI_0001479)
SubClassOf(obo:OBI_0000655 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0600005))
SubClassOf(obo:OBI_0000655 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000112))
SubClassOf(obo:OBI_0000655 ObjectSomeValuesFrom(obo:RO_0001000 obo:UBERON_0000178))

# Class: obo:OBI_0000659 (specimen collection process)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000659 "specimen collection process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000659 "drawing blood from a patient for analysis, collecting a piece of a plant for depositing in a herbarium, buying meat from a butcher in order to measure its protein content in an investigation")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000659 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000659 "A planned process with the objective of collecting a specimen."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000659 "Note: definition is in specimen creation objective which is defined as an objective to obtain and store a material entity for potential use as an input during an investigation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000659 "Philly2013: A specimen collection can have as part a material entity acquisition, such as ordering from a bank. The distinction is that specimen collection necessarily involves the creation of a specimen role. However ordering cell lines cells from ATCC for use in an investigation is NOT a specimen collection, because the cell lines already have a specimen role.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000659 "Philly2013: The specimen_role for the specimen is created during the specimen collection process.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000659 "label  changed to 'specimen collection process' on 10/27/2014, details see tracker:
http://sourceforge.net/p/obi/obi-terms/716/")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000659 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000659 "specimen collection")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000659 "5/31/2012: This process is not necessarily an acquisition, as specimens may be collected from materials already in posession"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000659 "6/9/09: used at workshop"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000659 "specimen collection process"^^xsd:string)
EquivalentClasses(obo:OBI_0000659 ObjectIntersectionOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000684)))
SubClassOf(obo:OBI_0000659 obo:OBI_0000011)
SubClassOf(obo:OBI_0000659 ObjectSomeValuesFrom(obo:OBI_0000293 obo:BFO_0000040))
SubClassOf(obo:OBI_0000659 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0100051))

# Class: obo:OBI_0000671 (sample from organism)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000671 "sample from organism"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000671 obo:IAO_0000002)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000671 "a material obtained from an organism in order to be a representative of the whole"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000671 "5/29: This is a helper class for now"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000671 "we need to work on this: Is taking a urine sample a material separation process? If not, we will need to specify what 'taking a sample from organism' entails. We can argue that the objective to obtain a urine sample from a patient is enough to call it a material separation process, but it could dilute what material separation was supposed to be about."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000671 "sample from organism"^^xsd:string)
EquivalentClasses(obo:OBI_0000671 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0600005) ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000740)))
SubClassOf(obo:OBI_0000671 obo:OBI_0000747)
SubClassOf(obo:OBI_0000671 obo:OBI_0001479)
SubClassOf(obo:OBI_0000671 ObjectSomeValuesFrom(obo:RO_0001000 obo:UBERON_0000465))

# Class: obo:OBI_0000678 (portioning objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000678 "portioning objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000678 "The objective to obtain multiple aliquots of an enzyme preparation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000678 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000678 "A material separation objective aiming to separate material into multiple portions, each of which contains a similar composition of the input material."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000678 "portioning objective"^^xsd:string)
SubClassOf(obo:OBI_0000678 obo:OBI_0000639)

# Class: obo:OBI_0000681 (separation into different composition objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000681 "separation into different composition objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000681 "The objective to obtain cells contained in a sample of blood."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000681 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000681 "A material separation objective aiming to separate a material entity that has parts of different types, and end with at least one output that is a material with parts of fewer types (modulo impurities)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000681 "We should be using has the grain relations or concentrations to distinguish the portioning and other sub-objectives"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000681 "separation into different composition objective"^^xsd:string)
SubClassOf(obo:OBI_0000681 obo:OBI_0000639)

# Class: obo:OBI_0000684 (specimen collection objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000684 "specimen collection objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000684 "The objective to collect bits of excrement in the rainforest. The objective to obtain a blood sample from a patient."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000684 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000684 "A objective specification to obtain a material entity for potential use as an input during an investigation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000684 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000684 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000684 "specimen collection objective"^^xsd:string)
SubClassOf(obo:OBI_0000684 obo:IAO_0000005)

# Class: obo:OBI_0000740 (material sample role)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000740 "material sample role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000740 "a role borne by a portion of blood taken to represent all the blood in an organism; the role borne by a population of humans with HIV enrolled in a study taken to represent patients with HIV in general."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000740 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000740 "A material sample role is a specimen role borne by a material entity that is the output of a material sampling process."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000740 "7/13/09: Note that this is a relational role: between the sample taken and the 'sampled' material of which the sample is thought to be representative off."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000740 "material sample role"^^xsd:string)
SubClassOf(obo:OBI_0000740 obo:OBI_0000112)

# Class: obo:OBI_0000747 (material sample)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000747 "material sample"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000747 "blood drawn from patient to measure his systemic glucose level. A population of humans with HIV enrolled in a study taken to represent patients with HIV in general."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000747 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000747 "A material entity that has the material sample role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000747 "OBI: workshop"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000747 "sample population"^^xsd:string)
AnnotationAssertion(obo:OBI_0001847 obo:OBI_0000747 "sample"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000747 "material sample"^^xsd:string)
EquivalentClasses(obo:OBI_0000747 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000740)))
SubClassOf(obo:OBI_0000747 obo:OBI_0100051)

# Class: obo:OBI_0000806 (material maintenance objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000806 "material maintenance objective"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000806 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000806 "An objective specification maintains some or all of the qualities of a material over time."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000806 "PERSON: Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000806 "PERSON: Bjoern Peters")
AnnotationAssertion(rdfs:label obo:OBI_0000806 "material maintenance objective"^^xsd:string)
SubClassOf(obo:OBI_0000806 obo:IAO_0000005)

# Class: obo:OBI_0000810 (informed consent process)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000810 "informed consent process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000810 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000810 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000810 "A planned process in which a person or their legal representative is informed about key facts about potential risks and benefits of a process and makes a documented decision as to whether the person in question will participate."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000810 "09/28/2009 Alan Ruttenberg: This is made a subclass of the higher level processual entity in BFO because I don't want to take a stand on whether it is a process aggregate. Analogous to the situation with Material entity."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000810 "Person:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000810 "http://clinicaltrials.gov/ct2/info/glossary#informed"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000810 "2009/09/28 Alan Ruttenberg. Fucoidan-use-case"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000810 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000810 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000810 "informed consent process"^^xsd:string)
SubClassOf(obo:OBI_0000810 obo:OBI_0000011)
SubClassOf(obo:OBI_0000810 ObjectSomeValuesFrom(obo:OBI_0000293 obo:ICO_0000001))
SubClassOf(obo:OBI_0000810 ObjectSomeValuesFrom(obo:OBI_0000293 obo:NCBITaxon_9606))
SubClassOf(obo:OBI_0000810 ObjectSomeValuesFrom(obo:RO_0000057 ObjectSomeValuesFrom(obo:RO_0000087 obo:ICO_0000086)))
SubClassOf(obo:OBI_0000810 ObjectSomeValuesFrom(obo:RO_0000057 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000202)))

# Class: obo:OBI_0000811 (primary structure of DNA macromolecule)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000811 "primary structure of DNA macromolecule"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000811 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000811 "a quality of a DNA molecule that inheres in its bearer due to the order of its DNA nucleotide residues."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000811 "placeholder for SO"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000811 "BP et al"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000811 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000811 "primary structure of DNA macromolecule"^^xsd:string)
EquivalentClasses(obo:OBI_0000811 ObjectSomeValuesFrom(obo:RO_0000058 ObjectSomeValuesFrom(obo:RO_0000052 obo:CHEBI_16991)))
SubClassOf(obo:OBI_0000811 obo:SO_0000001)

# Class: obo:OBI_0000832 (measurement device)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000832 "measurement device"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000832 "A ruler, a microarray scanner, a Geiger counter."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000832 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000832 "A device in which a measure function inheres."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000832 "GROUP:OBI Philly workshop"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000832 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000832 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000832 "measurement device"^^xsd:string)
EquivalentClasses(obo:OBI_0000832 ObjectIntersectionOf(obo:OBI_0000968 ObjectSomeValuesFrom(obo:RO_0000085 obo:OBI_0000453)))
SubClassOf(obo:OBI_0000832 obo:OBI_0000968)

# Class: obo:OBI_0000838 (material maintenance)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000838 "material maintenance"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000838 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000838 "a process with that achieves the objective to maintain some or all of the characteristics of an input material over time"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000838 "material maintenance"^^xsd:string)
EquivalentClasses(obo:OBI_0000838 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000806))
SubClassOf(obo:OBI_0000838 obo:OBI_0000011)

# Class: obo:OBI_0000852 (record of missing knowledge)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000852 "record of missing knowledge"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000852 "A statement in a journal article indicating that the age of a patient at the onset of disease is not known. A statement indicating that the weight of a mouse was not measured."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000852 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000852 "a information content entity created to indicate that information about something is not available to the person recording it."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000852 "This class should probably end up in IAO. It could be further breaken down to indicate different kinds of lack of knowledge, e.g. inability to determine something vs. no attempt made to determine something vs. no informatino available if it was even attempted to determine something. The design pattern should be generalizable. 'unknown sex' is the first example, and needed immediately."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000852 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000852 ""^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000852 "record of missing knowledge"^^xsd:string)
SubClassOf(obo:OBI_0000852 obo:IAO_0000030)

# Class: obo:OBI_0000932 (material separation device)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000932 "material separation device"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000932 "flow cytometer"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000932 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000932 "A device with a separation function realized in a planed process"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0000932 "material separation device"^^xsd:string)
EquivalentClasses(obo:OBI_0000932 ObjectSomeValuesFrom(obo:RO_0000085 obo:OBI_0000372))
SubClassOf(obo:OBI_0000932 obo:OBI_0000968)

# Class: obo:OBI_0000938 (categorical measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000938 "categorical measurement datum"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000938 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000938 "A measurement datum that is reported on a categorical scale"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000938 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000938 "nominal mesurement datum"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000938 "Bjoern Peters
"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000938 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000938 "categorical measurement datum"^^xsd:string)
SubClassOf(obo:OBI_0000938 obo:IAO_0000109)
SubClassOf(obo:OBI_0000938 ObjectSomeValuesFrom(obo:OBI_0001938 obo:OBI_0001930))

# Class: obo:OBI_0000953 (processed specimen)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000953 "processed specimen"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000953 "A tissue sample that has been sliced and stained for a histology study.
A blood specimen that has been centrifuged to obtain the white blood cells.")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000953 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000953 "A specimen that has been intentionally physically modified."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000953 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000953 "Bjoern Peters"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:OBI_0000953 "A tissue sample that has been sliced and stained for a histology study.")
AnnotationAssertion(rdfs:label obo:OBI_0000953 "processed specimen"^^xsd:string)
EquivalentClasses(obo:OBI_0000953 ObjectIntersectionOf(obo:OBI_0000047 obo:OBI_0100051))
SubClassOf(obo:OBI_0000953 obo:OBI_0000047)
SubClassOf(obo:OBI_0000953 obo:OBI_0100051)

# Class: obo:OBI_0000968 (device)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000968 "device"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000968 "A voltmeter is a measurement device which is intended to perform some measure function."^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000968 "An autoclave is a device that sterlizes instruments or contaminated waste by applying high temperature and pressure."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000968 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000968 "A material entity that is designed to perform a function in a scientific investigation, but is not a reagent."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000968 "2012-12-17 JAO: In common lab usage, there is a distinction made between devices and reagents that is difficult to model. Therefore we have chosen to specifically exclude reagents from the definition of \"device\", and are enumerating the types of roles that a reagent can perform.

2013-6-5 MHB: The following clarifications are outcomes of the May 2013 Philly Workshop. Reagents are distinguished from devices that also participate in scientific techniques by the fact that reagents are chemical or biological in nature and necessarily participate in some chemical interaction or reaction during the realization of their experimental role. By contrast, devices do not participate in such chemical reactions/interactions.  Note that there are cases where devices use reagent components during their operation, where the reagent-device distinction is less clear.  For example:

(1) An HPLC machine is considered a device, but has a column that holds a stationary phase resin as an operational component.  This resin qualifies as a device if it participates purely in size exclusion, but bears a reagent role that is realized in the running of a column if it interacts electrostatically or chemically with the evaluant. The container the resin is in (“the column”) considered alone is a device. So the entire column as well as the entire HPLC machine are devices that have a reagent as an operating part.

(2) A pH meter is a device, but its electrode component bears a reagent role in virtue of its interacting directly with the evaluant in execution of an assay.

(3) A gel running  box  is a device that has a metallic lead as a component that participates in a chemical reaction with the running buffer when a charge is passed through it.  This metallic lead is considered to have a reagent role as a component of this device realized in the running of a gel.

In the examples above, a reagent is an operational component of a device, but the device itself does not realize a reagent role (as bearing a reagent role is not transitive across the part_of relation).  In this way, the asserted disjointness between a reagent and device holds, as both roles are never realized in the same bearer during execution of an assay.  "^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000968 "PERSON: Helen Parkinson"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0000968 "instrument"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000968 "OBI development call 2012-12-17."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000968 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000968 "device"^^xsd:string)
SubClassOf(obo:OBI_0000968 obo:OBI_0000047)
SubClassOf(obo:OBI_0000968 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000094))
SubClassOf(obo:OBI_0000968 ObjectSomeValuesFrom(obo:RO_0000085 obo:BFO_0000034))

# Class: obo:OBI_0000973 (sequence data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000973 "sequence data"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000973 "example of usage: the representation of a nucleotide sequence in FASTA format used for a sequence similarity search."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000973 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000973 "A measurement datum that representing the primary structure of a macromolecule(it's sequence) sometimes associated with an indicator of confidence of that measurement.
"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000973 "Person:Chris Stoeckert"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000973 "GROUP: OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000973 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000973 "sequence data"@en)
SubClassOf(obo:OBI_0000973 obo:IAO_0000109)
SubClassOf(obo:OBI_0000973 ObjectIntersectionOf(obo:IAO_0000109 ObjectSomeValuesFrom(obo:IAO_0000136 obo:SO_0000001)))

# Class: obo:OBI_0001000 (questionnaire)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001000 "questionnaire"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001000 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001000 "A document with a set of printed or written questions with a choice of answers, devised for the purposes of a survey or statistical study."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001000 "JT: It plays a role in collecting data that could be fleshed out more; but I'm thinking it is, in itself, an edited document. 
JZ: based on textual definition of edited document, it can be defined as N&S. I prefer to leave questionnaire as a document now. We can add more restrictions in the future and use that to determine it is an edited document or not. "@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001000 "Need to clarify if this is a document or a directive information entity (or what their connection is))"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001000 "PERSON: Jessica Turner"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001000 "Merriam-Webster"@en)
AnnotationAssertion(rdfs:label obo:OBI_0001000 "questionnaire"^^xsd:string)
SubClassOf(obo:OBI_0001000 obo:IAO_0000310)

# Class: obo:OBI_0001010 (nucleic acid extract)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001010 "nucleic acid extract"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001010 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001010 "An extract that is the output of an extraction process in which nucleic acid molecules are isolated from a specimen."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001010 "PERSON: Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001010 "UPenn Group"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001010 "nucleic acid extract"^^xsd:string)
SubClassOf(obo:OBI_0001010 obo:OBI_0000423)
SubClassOf(obo:OBI_0001010 obo:OBI_0000953)
SubClassOf(obo:OBI_0001010 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0666667) ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000112)))
SubClassOf(obo:OBI_0001010 ObjectSomeValuesFrom(obo:OBI_0000643 obo:CHEBI_33696))

# Class: obo:OBI_0001051 (DNA extract)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001051 "DNA extract"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001051 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001051 "The output of an extraction process in which DNA molecules are purified in order to exclude DNA from organellas."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001051 "Person: Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001051 "Group: UPenn group"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001051 "DNA extract"^^xsd:string)
SubClassOf(obo:OBI_0001051 obo:OBI_0001010)
SubClassOf(obo:OBI_0001051 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000257))
SubClassOf(obo:OBI_0001051 ObjectSomeValuesFrom(obo:OBI_0000643 obo:CHEBI_16991))

# Class: obo:OBI_0001158 (age measurement assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001158 "age measurement assay"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001158 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001158 "An assay that measures the duration of temporal interval of a process that is part of the life of the bearer, where the initial time point of the measured process is the beginning of some transitional state of the bearer such as birth or when planted."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001158 "This assay measures time not developmental stage.  we recognize that development takes different time periods under different conditions such as media / temperature. For example, age measurement assay of fly age, the output likes 28 days but not mid-life of age at room temperature."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001158 "PERSON: Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001158 "OBI group"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001158 "age measurement assay"@en)
SubClassOf(obo:OBI_0001158 obo:OBI_0000070)
SubClassOf(obo:OBI_0001158 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0001167))

# Class: obo:OBI_0001167 (age measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001167 "age measurement datum"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001167 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001167 "A time measurement datum that is the result of measurement of age of an organism"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001167 "note that we are currently defining subtypes of age measurement datum that specify when the age is relative to, e.g. planting, as we don't have adequate temporal predicates yet.
life of bearer doesn't imply organism
this assay measures time not developmental stage. we recognize that development can take different time periods under different conditions such as media / temperature
age as a quality is dubious; we plan to revisit
stages in development are currently handled with controlled vocabulary, such as 2-somite stage "^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001167 "PERSON: Alan Ruttenberg, Chris Stoeckert, Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001167 "MO_178 Age"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0001167 "In MageTab file, we use
initialTimePoint (a process) + age (a number expected) + TimeUnit (definied in UO, such as year, hour, day, etc.)
Now we use the term label indicating the start time point of measuring the age, (number + TimeUnit) are expected instances of the class"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0001167 "discussed on Nov 15, dev call
All subtype will be defined by textual definition now."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001167 "age measurement datum"@en)
SubClassOf(obo:OBI_0001167 obo:IAO_0000416)
SubClassOf(obo:OBI_0001167 ObjectSomeValuesFrom(obo:IAO_0000221 obo:PATO_0000011))
SubClassOf(obo:OBI_0001167 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0001158))

# Class: obo:OBI_0001169 (age since birth measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001169 "age since birth measurement datum"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001169 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001169 "An age measurement datum that is the result of the measurement of the age of an organism since birth, the process of emergence and separation of offspring from the mother."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001169 "PERSON:Chris Stoeckert, Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001169 "MO_710 birth"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001169 "age since birth measurement datum"@en)
SubClassOf(obo:OBI_0001169 obo:OBI_0001167)

# Class: obo:OBI_0001225 (genetic population background information)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001225 "genetic population background information"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001225 "genotype information 'C57BL/6J  Hnf1a+/-' in this case, C57BL/6J is the genetic population background information"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001225 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001225 "a genetic characteristics information which is a part of genotype information that identifies the population of organisms"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001225 "proposed and discussed on San Diego OBI workshop, March 2011"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001225 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001225 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001225 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001225 "genetic population background information"@en)
SubClassOf(obo:OBI_0001225 obo:OBI_0001404)
SubClassOf(obo:OBI_0001225 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0001305))

# Class: obo:OBI_0001305 (genotype information)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001305 "genotype information"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001305 "Genotype information can be: Mus musculus wild type (in this case the genetic population background information is Mus musculus), C57BL/6J  Hnf1a+/- (in this case, C57BL/6J is the genetic population background information and Hnf1a+/- is the allele information"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001305 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001305 "a genetic characteristics information that is about the genetic material of an organism and minimally includes information about the genetic background and can in addition contain information about specific alleles, genetic modifications, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001305 "discussed on San Diego OBI workshop, March 2011"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001305 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001305 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001305 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001305 "genotype information"@en)
SubClassOf(obo:OBI_0001305 obo:OBI_0001404)
SubClassOf(obo:OBI_0001305 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 obo:OBI_0001225) ObjectSomeValuesFrom(obo:BFO_0000051 obo:OBI_0001364)))

# Class: obo:OBI_0001352 (allele information)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001352 "allele information"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001352 "genotype information 'C57BL/6J  Hnf1a+/-' in this case, Hnf1a+/- is the allele information"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001352 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001352 "a genetic alteration information that about one of two or more alternative forms of a gene or marker sequence and differing from other alleles at one or more mutational sites based on sequence. Polymorphisms are included in this definition."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001352 "discussed on San Diego OBI workshop, March 2011"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001352 "Person: Chris Stoeckert, Jie Zheng"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001352 "MO_58 Allele"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001352 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001352 "allele information"@en)
SubClassOf(obo:OBI_0001352 obo:OBI_0001364)
SubClassOf(obo:OBI_0001352 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0001305) ObjectSomeValuesFrom(obo:IAO_0000136 obo:SO_0000001)))

# Class: obo:OBI_0001364 (genetic alteration information)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001364 "genetic alteration information"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001364 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001364 "a genetic characteristics information that is about known changes or the lack thereof from the genetic background, including allele information, duplication, insertion, deletion, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001364 "proposed and discussed on San Diego OBI workshop, March 2011"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001364 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001364 "Group: OBI group"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001364 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001364 "genetic alteration information"@en)
SubClassOf(obo:OBI_0001364 obo:OBI_0001404)

# Class: obo:OBI_0001404 (genetic characteristics information)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001404 "genetic characteristics information"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001404 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001404 "a data item that is about genetic material including polymorphisms, disease alleles, and haplotypes."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001404 "Person: Chris Stoeckert, Jie Zheng"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001404 "MO_66 IndividualGeneticCharacteristics"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0001404 "MO definition:
The genotype of the individual organism from which the biomaterial was derived. Individual genetic characteristics include polymorphisms, disease alleles, and haplotypes.

examples in ArrayExpress
wild_type
MutaMouse (CD2F1 mice with lambda-gt10LacZ integration)
AlfpCre; SNF5 flox/knockout
p53 knock out
C57Bl/6 gp130lox/lox MLC2vCRE/+
fer-15; fem-1
df/df
pat1-114/pat1-114 ade6-M210/ade6-M216 h+/h+ (cells are diploid)
"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001404 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001404 "genetic characteristics information"@en)
SubClassOf(obo:OBI_0001404 obo:IAO_0000027)
SubClassOf(obo:OBI_0001404 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:SO_0000001 ObjectSomeValuesFrom(obo:RO_0000058 ObjectSomeValuesFrom(obo:RO_0000052 ObjectIntersectionOf(obo:CHEBI_33696 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0100026)))))))

# Class: obo:OBI_0001479 (specimen from organism)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001479 "specimen from organism"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001479 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001479 "A specimen that derives from an anatomical part or substance arising from an organism. Examples of tissue specimen include tissue, organ, physiological system, blood, or body location (arm)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001479 "PERSON: Chris Stoeckert, Jie Zheng"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0001479 "tissue specimen"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001479 "MO_954 organism_part"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001479 "specimen from organism"@en)
EquivalentClasses(obo:OBI_0001479 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000112) ObjectSomeValuesFrom(obo:RO_0001000 ObjectUnionOf(obo:UBERON_0000465 obo:UBERON_0000477))))
SubClassOf(obo:OBI_0001479 obo:OBI_0100051)

# Class: obo:OBI_0001573 (DNA sequence data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001573 "DNA sequence data"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001573 "The part of a FASTA file that contains the letters ACTGGGAA "^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001573 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001573 "A sequence data item that is about the primary structure of DNA"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001573 "OBI call; Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001573 "OBI call; Melanie Courtout"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0001573 "8/29/11 call: This is added after a request from Melanie and Yu. They should review it further. This should be a child of 'sequence data', and as of the current definition will infer there.  "^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001573 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001573 "DNA sequence data"^^xsd:string)
SubClassOf(obo:OBI_0001573 obo:OBI_0000973)
SubClassOf(obo:OBI_0001573 ObjectSomeValuesFrom(obo:IAO_0000136 obo:OBI_0000811))

# Class: obo:OBI_0001868 (genetic material)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001868 "genetic material")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001868 obo:IAO_0000428)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001868 "A nucleic acid macromolecule that is part of a cell or virion and is inherited from an immediate ancestor, or incorporated in a manner that it has the disposition to be replicated and inherited by descendants.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001868 "MHB 3-22-13: Discussions are ongoing about the label of this class, given consideration of a second class that covers nucleic acid parts of cells or virions that participate in gene expression processes as a template for expression or a direct effector of expression of some other genetic element (e.g. an siRNA), but are not necessarily heritable by progeny or inherited from ancestors.  So things like transiently transfected plasmids and siRNAs would qualify as instances of this second class, but not of 'genetic material' as defined here.

Also, OBI needs to import a class representing virions for an axiom on genetic material (part_of some (cell or virion).")
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0001868 "genomic material")
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0001868 "hereditary genetic material")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001868 "OBI developer calls, March 4 2013 and March 11 2013")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001868 obo:obi.owl)
AnnotationAssertion(rdfs:comment obo:OBI_0001868 "Naturally occurring or experimentally incorporated nucleic acids that meet these criteria can qualify as genetic/genomic material.

Qualifying examples include: (1) inherited chromosomal DNA in germ cells, stem cells, fully differentiated cells, or cell line cells, or the DNA/RNA content of a virion; (2) natural replicons exchanged through horizontal gene transfer mechanisms such as bacterial conjugation, which are capable of replication and inheritance by progeny; (3) a chromosomally integrated  gene targeting DNA construct transfected into a cell; or (4) a stable extra-chromosomal replicon delivered into cells, such as a plasmid in bacterial host with ori allowing indefinite propagation.  

Non-qualifying examples include a transiently transfected plasmid or siRNA oligo (as these are not able to be replicated and inherited by progeny cells).
")
AnnotationAssertion(rdfs:label obo:OBI_0001868 "genetic material")
SubClassOf(obo:OBI_0001868 obo:CHEBI_33696)
SubClassOf(obo:OBI_0001868 ObjectSomeValuesFrom(obo:BFO_0000050 ObjectUnionOf(obo:CL_0000000 obo:NCBITaxon_10239)))

# Class: obo:OBI_0001909 (conclusion based on data)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001909 "conclusion based on data")
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001909 "The conclusion that a gene is upregulated in a tissue sample based on the band intensity in a western blot. The conclusion that a patient has a infection based on measurement of an elevated body temperature and reported headache. The conclusion that there were problems in an investigation because data from PCR and microarray are conflicting.
The following are NOT conclusions based on data: data themselves; results from pure mathematics, e.g. \"13 is prime\".")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001909 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001909 "An information content entity that is inferred from data.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001909 "In the Philly 2013 workshop, we recognized the limitations of \"conclusion textual entity\", and we introduced this as more general. The need for the 'textual entity' term going forward is up for future debate. ")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001909 "Group:2013 Philly Workshop group")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0001909 "Group:2013 Philly Workshop group")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001909 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001909 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001909 "conclusion based on data")
SubClassOf(obo:OBI_0001909 obo:IAO_0000030)
SubClassOf(obo:OBI_0001909 ObjectSomeValuesFrom(obo:OBI_0000124 obo:IAO_0000027))
SubClassOf(obo:OBI_0001909 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0000338))

# Class: obo:OBI_0001912 (cell freezing medium)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001912 "cell freezing medium"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001912 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001912 "A processed material that serves as a liquid vehicle for freezing cells for long term quiescent stroage, which contains chemicls needed to sustain cell viability across freeze-thaw cycles. "^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001912 "PERSON: Matthew Brush"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0001912 "cell freezing medium"@en)
SubClassOf(obo:OBI_0001912 obo:OBI_0000047)

# Class: obo:OBI_0001930 (categorical value specification)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001930 "categorical value specification")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001930 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001930 "A value specification that is specifies one category out of a fixed number of nominal categories")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001930 "PERSON:Bjoern Peters")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001930 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001930 "categorical value specification")
SubClassOf(obo:OBI_0001930 obo:OBI_0001933)

# Class: obo:OBI_0001931 (scalar value specification)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001931 "scalar value specification")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001931 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001931 "A value specification that consists of two parts: a numeral and a unit label")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001931 "PERSON:Bjoern Peters")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001931 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001931 "scalar value specification")
SubClassOf(obo:OBI_0001931 obo:OBI_0001933)
SubClassOf(obo:OBI_0001931 ObjectMinCardinality(1 obo:IAO_0000039))
SubClassOf(obo:OBI_0001931 DataMinCardinality(1 obo:OBI_0001937))

# Class: obo:OBI_0001933 (value specification)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0001933 "value specification")
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0001933 "The value of 'positive' in a classification scheme of \"positive or negative\"; the value of '20g' on the quantitative scale of mass.")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0001933 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0001933 "An information content entity that specifies a value within a classification scheme or on a quantitative scale.")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0001933 "This term is currently a descendant of 'information content entity', which requires that it 'is about' something. A value specification of '20g' for a measurement data item of the mass of a particular mouse 'is about' the mass of that mouse. However there are cases where a value specification is not clearly about any particular. In the future we may change 'value specification' to remove the 'is about' requirement.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0001933 "PERSON:Bjoern Peters")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0001933 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0001933 "value specification")
SubClassOf(obo:OBI_0001933 obo:IAO_0000030)

# Class: obo:OBI_0002118 (exome sequencing assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002118 "exome sequencing assay"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0002118 "DNA was extracted from the Ficoll pellet of blood taken from congenital asplenia patients. Unamplified, high-molecular weight, RNase-treated genomic DNA (4_6 _g) was used for whole exome sequencing (WES) with the use of Agilent 71 Mb (V4 + UTR) singlesample capture and an Illumina HiSeq 2000. Sequencing was carried out so as to obtain 30_ coverage from 2 _ 100-bp paired-end reads. We used the Annovar tool (25) to annotate the resulting highquality (HQ) variants. In the regions targeted by WES capture (81.5% of the consensus coding genome), the mean numbers of single-nucleotide variants (SNVs) and small insertions/deletions (indels) detected per sample were 84,192 and13,325, respectively. After filtering, a mean of 74,398 (95.3%) high-quality (HQ) SNVs and 9,033 (70.6%) HQ indels were called. A mean of 105 coding HQ SNVs and 32 indels was identified."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002118 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002118 "A DNA sequencing assay that intends to provide information about the sequence of the protein coding components of a genome (exons)."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0002118 "ImmPort"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0002118 "WES"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002118 "http://www.ncbi.nlm.nih.gov/pubmed/25827230"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0002118 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0002118 "exome sequencing assay"^^xsd:string)
SubClassOf(obo:OBI_0002118 obo:OBI_0000626)

# Class: obo:OBI_0002139 (volume value specification)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002139 "volume value specification")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002139 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002139 "A value specification that specifies the volume of some thing.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0002139 "Chris Stoeckert")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002139 "OBI")
AnnotationAssertion(rdfs:label obo:OBI_0002139 "volume value specification"@en)
SubClassOf(obo:OBI_0002139 obo:OBI_0001933)
SubClassOf(obo:OBI_0002139 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:OBI_0001927 obo:PATO_0000918) ObjectAllValuesFrom(obo:IAO_0000039 obo:UO_0000095)))

# Class: obo:OBI_0002141 (volume measurement assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002141 "volume measurement assay")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002141 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002141 "An assay to determine the volume of an evaluant.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0002141 "Chris Stoeckert, Bjoern Peters")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002141 "OBI")
AnnotationAssertion(rdfs:label obo:OBI_0002141 "volume measurement assay"@en)
SubClassOf(obo:OBI_0002141 obo:OBI_0000070)
SubClassOf(obo:OBI_0002141 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectIntersectionOf(obo:IAO_0000109 ObjectSomeValuesFrom(obo:OBI_0001938 obo:OBI_0002139))))

# Class: obo:OBI_0002199 (reason for lack of data item)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0002199 "reason for lack of data item"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0002199 "cannot be assessed\", \"not applicable\", \"unknown"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0002199 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0002199 "An information content entity that provides an explanation why a data item is not provided."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0002199 "Chris Stoeckert, Helena Ellis"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0002199 "OBI"^^xsd:string)
AnnotationAssertion(obo:IAO_0000234 obo:OBI_0002199 "NCI BBRB"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0002199 "reason for lack of data item"^^xsd:string)
SubClassOf(obo:OBI_0002199 obo:IAO_0000030)

# Class: obo:OBI_0100026 (organism)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0100026 "organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "animal"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "fungus"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "plant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "virus"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0100026 obo:IAO_0000121)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0100026 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0100026 "A material entity that is an individual living system, such as animal, plant, bacteria or virus, that is capable of replicating or reproducing, growth and maintenance in the right environment. An organism may be unicellular or made up, like humans, of many billions of cells divided into specialized tissues and organs."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100026 "10/21/09: This is a placeholder term, that should ideally be imported from the NCBI taxonomy, but the high level hierarchy there does not suit our needs (includes plasmids and 'other organisms')"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100026 "13-02-2009:
OBI doesn't take position as to  when an organism starts or ends being an organism - e.g. sperm, foetus.
This issue is outside the scope of OBI."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100026 "Stub class to serve as root of hierarchy for imports from NCBI Taxonomy.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0100026 "GROUP: OBI Biomaterial Branch"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0100026 "WEB: http://en.wikipedia.org/wiki/Organism"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:ido.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0100026 "http://purl.obolibrary.org/obo/obi.owl"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0100026 "organism")
AnnotationAssertion(rdfs:label obo:OBI_0100026 "organism"@en)
EquivalentClasses(obo:OBI_0100026 ObjectUnionOf(obo:NCBITaxon_10239 obo:NCBITaxon_2 obo:NCBITaxon_2157 obo:NCBITaxon_2759))
SubClassOf(obo:OBI_0100026 obo:BFO_0000030)
SubClassOf(obo:OBI_0100026 obo:BFO_0000040)
SubClassOf(obo:OBI_0100026 ObjectSomeValuesFrom(obo:BFO_0000050 obo:ENVO_01000254))
SubClassOf(obo:OBI_0100026 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_0000000001))

# Class: obo:OBI_0100051 (specimen)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0100051 "specimen"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100051 "Biobanking of blood taken and stored in a freezer for potential future investigations stores specimen."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0100051 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0100051 "A material entity that has the specimen role."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100051 "Note: definition is in specimen creation objective which is defined as an objective to obtain and store a material entity for potential use as an input during an investigation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0100051 "PERSON: James Malone"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0100051 "PERSON: Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0100051 "GROUP: OBI Biomaterial Branch"@en)
AnnotationAssertion(rdfs:label obo:OBI_0100051 "specimen"@en)
EquivalentClasses(obo:OBI_0100051 ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000112)))
SubClassOf(obo:OBI_0100051 obo:BFO_0000040)

# Class: obo:OBI_0100060 (cultured cell population)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0100060 "cultured cell population"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100060 "A cultured cell population applied in an experiment: \"293 cells expressing TrkA were serum-starved for 18 hours and then neurotrophins were added for 10 min before cell harvest.\"  (Lee, Ramee, et al. \"Regulation of cell survival by secreted proneurotrophins.\" Science 294.5548 (2001): 1945-1948).

A cultured cell population maintained in vitro: \"Rat cortical neurons from 15 day embryos are grown in dissociated cell culture and maintained in vitro for 8–12 weeks\" (Dichter, Marc A. \"Rat cortical neurons in cell culture: culture methods, cell morphology, electrophysiology, and synapse formation.\" Brain Research 149.2 (1978): 279-293).")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0100060 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0100060 "A processed material comprised of a collection of cultured cells that has been continuously maintained together in culture and shares a common propagation history."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100060 "2013-6-5 MHB: This OBI class was formerly called 'cell culture', but label changed and definition updated following CLO alignment efforts in spring 2013, during which the intent of this class was clarified to refer to portions of a culture or line rather than a complete cell culture or line."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0100060 "PERSON:Matthew Brush"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0100060 "cell culture sample")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0100060 "PERSON:Matthew Brush"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:OBI_0100060 "The extent of a 'cultured cell population' is restricted only in that all cell members must share a propagation history (ie be derived through a common lineage of passages from an initial culture). In being defined in this way, this class can be used to refer to the populations that researchers actually use in the practice of science - ie are the inputs to culturing, experimentation, and sharing. The cells in such populations will be a relatively uniform population as they have experienced similar selective pressures due to their continuous co-propagation. And this population will also have a single passage number, again owing to their common passaging history. Cultured cell populations represent only a collection of cells (ie do not include media, culture dishes, etc), and include populations of cultured unicellular organisms or cultured multicellular organism cells. They can exist under active culture, stored in a quiescent state for future use, or applied experimentally."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0100060 "cultured cell population"^^xsd:string)
SubClassOf(obo:OBI_0100060 obo:OBI_0000047)
SubClassOf(obo:OBI_0100060 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0600024))
SubClassOf(obo:OBI_0100060 ObjectSomeValuesFrom(obo:OBI_0000643 obo:CL_0000010))
SubClassOf(obo:OBI_0100060 ObjectAllValuesFrom(obo:OBI_0000643 obo:CL_0000010))

# Class: obo:OBI_0200000 (data transformation)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0200000 "data transformation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0200000 "The application of a clustering protocol to microarray data or the application of a statistical testing method on a primary data set to determine a p-value."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0200000 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0200000 "A planned process that produces output data from input data."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Elisabetta Manduchi"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Helen Parkinson"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "James Malone"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Richard Scheuermann"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Ryan Brinkman"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200000 "Tina Hernandez-Boussard"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0200000 "data analysis"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0200000 "data processing"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0200000 "Branch editors"@en)
AnnotationAssertion(rdfs:label obo:OBI_0200000 "data transformation"@en)
EquivalentClasses(obo:OBI_0200000 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0200166))
SubClassOf(obo:OBI_0200000 obo:OBI_0000011)
SubClassOf(obo:OBI_0200000 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectSomeValuesFrom(obo:RO_0000059 ObjectIntersectionOf(obo:IAO_0000064 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000005)))))
SubClassOf(obo:OBI_0200000 ObjectSomeValuesFrom(obo:OBI_0000293 obo:IAO_0000027))
SubClassOf(obo:OBI_0200000 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000027))
SubClassOf(obo:OBI_0200000 ObjectAllValuesFrom(obo:OBI_0000293 obo:IAO_0000027))
SubClassOf(obo:OBI_0200000 ObjectAllValuesFrom(obo:OBI_0000299 obo:IAO_0000027))

# Class: obo:OBI_0200166 (data transformation objective)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0200166 "data transformation objective"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0200166 "normalize objective"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0200166 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0200166 "An objective specification to transformation input data into output data"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0200166 "Modified definition in 2013 Philly OBI workshop")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0200166 "James Malone"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0200166 "PERSON: James Malone"@en)
AnnotationAssertion(rdfs:label obo:OBI_0200166 "data transformation objective"@en)
SubClassOf(obo:OBI_0200166 obo:IAO_0000005)

# Class: obo:OBI_0302874 (edited document)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302874 "edited document"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302874 "The OBI manuscript is (much) edited imformation"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302874 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302874 "A document which is the output of a document editing process"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302874 "Person:Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302874 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302874 "edited document"@en)
SubClassOf(obo:OBI_0302874 obo:IAO_0000310)
SubClassOf(obo:OBI_0302874 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OBI_0302908))

# Class: obo:OBI_0302884 (extraction)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302884 "extraction"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302884 "nucleic acid extraction using phenol chloroform"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302884 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302884 "A material separation in which a desired component of an input material is separated from the remainder"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0302884 "Current the output of material processing defined as the molecular entity, main component in the output material entity, rather than the material entity that have grain molecular entity. 
'nucleic acid extract' is the output of 'nucleic acid extraction' and has grain 'nucleic acid'. However, the output of 'nucleic acid extraction' is 'nucleic acid' rather than 'nucleic acid extract'. We are aware of this issue and will work it out in the future."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302884 "Person:Bjoern Peters"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302884 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302884 "extraction"@en)
SubClassOf(obo:OBI_0302884 obo:OBI_0600014)
SubClassOf(obo:OBI_0302884 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000681))

# Class: obo:OBI_0302887 (staining)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302887 "staining"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302887 "PMID: 18540298. Role of modified bleach method in staining of acid-fast bacilli in lymph node aspirates. Acta Cytol. 2008 May-Jun;52(3):325-8."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302887 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302887 "Staining is a process which results in the addition a class-specific (DNA, proteins, lipids, carbohydrates) dye to a substrate to qualify or quantify the presence of a specific compound."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302887 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0302887 "adapted from Wikipedia: http://en.wikipedia.org/wiki/Staining"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302887 "staining"@en)
SubClassOf(obo:OBI_0302887 obo:OBI_0000094)
SubClassOf(obo:OBI_0302887 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000456))

# Class: obo:OBI_0302893 (storage)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302893 "storage"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302893 "PMID: 18550121.Total Prostate Specific Antigen Stability Confirmed After Long-Term Storage of Serum at -80C. J Urol. 2008 Jun 10."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302893 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302893 "A maintenance process by which material entities that are not actively metabolizing are placed in well identified location and possibly under controlled environment in ad-hoc devices/structures in order to preserve and protect them from decay/alteration and maintain availability"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302893 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0302893 "OBI-Branch"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302893 "storage"@en)
SubClassOf(obo:OBI_0302893 obo:OBI_0000838)
SubClassOf(obo:OBI_0302893 ObjectSomeValuesFrom(obo:OBI_0000293 obo:BFO_0000040))
SubClassOf(obo:OBI_0302893 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000806))

# Class: obo:OBI_0302908 (document editing)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302908 "document editing"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302908 "Wax DB, Beilin Y, Hossain S, Lin HM, Reich DL.
Manual editing of automatically recorded data in an anesthesia information management system. Anesthesiology. 2008 Nov;109(5):811-5. PMID: 18946292"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302908 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302908 "is a planned process with specified input original document and specified output edited document"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302908 "Philippe Rocca-Serra and OBI consortium"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0302908 "adapted from wikipedia"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302908 "document editing"@en)
SubClassOf(obo:OBI_0302908 obo:OBI_0000011)
SubClassOf(obo:OBI_0302908 ObjectSomeValuesFrom(obo:OBI_0000293 obo:IAO_0000310))
SubClassOf(obo:OBI_0302908 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0302874))

# Class: obo:OBI_0302914 (digital curation)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0302914 "digital curation"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0302914 "PMID: 16901087. Supporting the curation of biological databases with reusable text mining.Genome Inform. 2005;16(2):32-44."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0302914 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0302914 "Digital curation is the process of establishing and developing long term repositories of digital assets for current and future reference by researchers, scientists, and historians, and scholars generally."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0302914 "Philippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0302914 "wikipedia"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0302914 "digital curation"@en)
SubClassOf(obo:OBI_0302914 obo:IAO_0000572)

# Class: obo:OBI_0400103 (DNA sequencer)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0400103 "DNA sequencer"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0400103 "ABI 377 DNA Sequencer, ABI 310 DNA Sequencer"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0400103 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0400103 "A DNA sequencer is an instrument that determines the order of deoxynucleotides in deoxyribonucleic acid sequences."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0400103 "Trish Whetzel"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0400103 "MO"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0400103 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0400103 "DNA sequencer"@en)
SubClassOf(obo:OBI_0400103 obo:OBI_0000832)
SubClassOf(obo:OBI_0400103 ObjectSomeValuesFrom(obo:RO_0000085 obo:OBI_0000453))

# Class: obo:OBI_0400168 (microtome)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0400168 "microtome"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0400168 "PMID: 9974145.Serial sectioning of thick tissue with a novel vibrating blade microtome. Brain Res Brain Res Protoc. 1999 Jan;3(3):302-7."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0400168 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0400168 "A microtome is a mechanical instrument used to cut biological specimens into very thin segments for further treatment (e.g. ISH) and ultimately microscopic or histologic examination. Most microtomes provide cooling facilities (cryo-microtome) and use a steel blade to cut a slice of defined thickness. Some are automatic, and some are driven by hand."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0400168 "PERSON: Phillippe Rocca-Serra"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0400168 "PERSON: Daniel Schober"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_0400168 "microtome"@en)
SubClassOf(obo:OBI_0400168 obo:OBI_0000932)
SubClassOf(obo:OBI_0400168 ObjectSomeValuesFrom(obo:RO_0000085 obo:OBI_0000372))
SubClassOf(obo:OBI_0400168 ObjectSomeValuesFrom(obo:RO_0000085 obo:OBI_0000379))

# Class: obo:OBI_0500000 (study design)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0500000 "study design"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0500000 "a matched pairs study design describes criteria by which subjects are identified as pairs which then undergo the same protocols, and the data generated is analyzed by comparing the differences between the paired subjects, which constitute the results of the executed study design."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0500000 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0500000 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0500000 "A plan specification comprised of protocols (which may specify how and what kinds of data will be gathered) that are executed as part of an investigation and is realized during a study design execution."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0500000 "Editor note: there is at least an implicit restriction on the kind of data transformations that can be done based on the measured data available."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0500000 "PERSON: Chris Stoeckert"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_0500000 "experimental design"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0500000 "rediscussed at length (MC/JF/BP). 12/9/08). The definition was clarified to differentiate it from protocol."@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0500000 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0500000 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0500000 "study design"@en)
SubClassOf(obo:OBI_0500000 obo:IAO_0000104)
SubClassOf(obo:OBI_0500000 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OBI_0000272))

# Class: obo:OBI_0600005 (collecting specimen from organism)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0600005 "collecting specimen from organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0600005 "taking a sputum sample from a cancer patient, taking the spleen from a killed mouse, collecting a urine sample from a patient"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0600005 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0600005 "a process with the objective to obtain a material entity that was part of an organism for potential future use in an investigation"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0600005 "PERSON:Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0600005 "IEDB"@en)
AnnotationAssertion(rdfs:label obo:OBI_0600005 "collecting specimen from organism"@en)
SubClassOf(obo:OBI_0600005 obo:OBI_0000659)
SubClassOf(obo:OBI_0600005 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OBI_0100026))
SubClassOf(obo:OBI_0600005 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0100051))
SubClassOf(obo:OBI_0600005 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000684))

# Class: obo:OBI_0600014 (material component separation)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0600014 "material component separation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0600014 "Using a cell sorter to separate a mixture of T cells into two fractions; one with surface receptor CD8 and the other lacking the receptor, or purification"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0600014 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0600014 "a material processing in which components of an input material become segregated in space"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0600014 "Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0600014 "IEDB"@en)
AnnotationAssertion(rdfs:label obo:OBI_0600014 "material component separation"@en)
EquivalentClasses(obo:OBI_0600014 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000639))
SubClassOf(obo:OBI_0600014 obo:OBI_0000094)
SubClassOf(obo:OBI_0600014 ObjectSomeValuesFrom(obo:OBI_0000293 obo:BFO_0000040))
SubClassOf(obo:OBI_0600014 ObjectSomeValuesFrom(obo:OBI_0000299 obo:BFO_0000040))

# Class: obo:OBI_0600020 (obo:OBI_0600020)

SubClassOf(obo:OBI_0600020 obo:OBI_0000070)

# Class: obo:OBI_0600024 (maintaining cell culture)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0600024 "maintaining cell culture"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0600024 "When harvesting blood from a human, isolating T cells, and then limited dilution cloning of the cells, the maintaining_cell_culture step comprises all steps after the initial dilution and plating of the cells into culture, e.g. placing the culture into an incubator, changing or adding media, and splitting a cell culture"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0600024 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0600024 "a protocol application in which cells are kept alive in a defined environment outside of an organism.  part of cell_culturing"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0600024 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0600024 "OBI branch derived"@en)
AnnotationAssertion(rdfs:label obo:OBI_0600024 "maintaining cell culture"@en)
SubClassOf(obo:OBI_0600024 obo:OBI_0000838)
SubClassOf(obo:OBI_0600024 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OBI_0100060))
SubClassOf(obo:OBI_0600024 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectUnionOf(obo:OBI_0000079 obo:OBI_0001912)))
SubClassOf(obo:OBI_0600024 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0100060))
SubClassOf(obo:OBI_0600024 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000806))

# Class: obo:OBI_0600036 (establishing cell culture)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0600036 "'establishing cell culture'")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0600036 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0600036 "a process through which a new type of cell culture or cell line is created, either through the isolation and culture of one or more cells from a fresh source, or the deliberate experimental modification of an existing cell culture (e.g passaging a primary culture to become a secondary culture or line, or the immortalization or stable genetic modification of an existing culture or line).")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0600036 "PERSON:Matthew Brush")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0600036 "PERSON:Matthew Brush")
AnnotationAssertion(rdfs:comment obo:OBI_0600036 "A 'cell culture' as used here referes to a new lineage of cells in culture deriving from a single biological source.. New cultures are established through the initial isolation and culturing of cells from an organismal source, or through changes in an existing cell culture or line that result in a new culture with unique characteristics.  This can occur through the passaging/selection of a primary culture into a secondary culture or line, or experimental modifications of an existing cell culture or line such as an immortalization process or other stable genetic modification. This class covers establishment of cultures of either multicellular organism cells or unicellular organisms.")
AnnotationAssertion(rdfs:label obo:OBI_0600036 "establishing cell culture")
SubClassOf(obo:OBI_0600036 obo:OBI_0000094)
SubClassOf(obo:OBI_0600036 ObjectSomeValuesFrom(obo:OBI_0000293 obo:CL_0000000))
SubClassOf(obo:OBI_0600036 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OBI_0000079))
SubClassOf(obo:OBI_0600036 ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0100060))
SubClassOf(obo:OBI_0600036 ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000456))

# Class: obo:OBI_0600047 (sequencing assay)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0600047 "sequencing assay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0600047 "The use of the Sanger method of DNA sequencing to determine the order of the nucleotides in a DNA template"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0600047 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0600047 "the use of a chemical or biochemical means to infer the sequence of a biomaterial"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0600047 "has_output should be sequence of input; we don't have sequence well defined yet"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0600047 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0600047 "OBI branch derived"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0600047 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0600047 "sequencing assay"@en)
EquivalentClasses(obo:OBI_0600047 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:OBI_0000299 obo:OBI_0000973) ObjectSomeValuesFrom(obo:OBI_0000417 obo:OBI_0000441)))
SubClassOf(obo:OBI_0600047 obo:OBI_0000070)
SubClassOf(obo:OBI_0600047 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectIntersectionOf(ObjectUnionOf(obo:CHEBI_16991 obo:CHEBI_33697 obo:PR_000000001) ObjectSomeValuesFrom(obo:RO_0000087 obo:OBI_0000067))))

# Class: obo:OBI_0666667 (nucleic acid extraction)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0666667 "nucleic acid extraction"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0666667 "Phenol / chlorophorm extraction disolvation of protein content folllowed by ethanol precipitation of the nucleic acid fraction over night in the fridge followed by centrifugation to obtain a nucleic acid pellet."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0666667 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0666667 "a material separation to recover the nucleic acid fraction of an input material"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0666667 "PlanAndPlannedProcess Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0666667 "OBI branch derived"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0666667 "requested by Helen Parkinson for MO. Could be defined class"@en)
AnnotationAssertion(rdfs:label obo:OBI_0666667 "nucleic acid extraction"@en)
SubClassOf(obo:OBI_0666667 obo:OBI_0302884)
SubClassOf(obo:OBI_0666667 ObjectSomeValuesFrom(obo:OBI_0000293 ObjectUnionOf(obo:OBI_0000671 obo:OBI_0100026 obo:OBI_0100060)))
SubClassOf(obo:OBI_0666667 ObjectSomeValuesFrom(obo:OBI_0000299 obo:CHEBI_33696))

# Class: obo:OBI_1110087 (donor)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_1110087 "donor"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_1110087 "A T cell line from a PPD(+) donor."^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_1110087 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_1110087 "A role which inheres in an organism or part thereof from which any part including cell, organ or tissue is removed with the intention that the donated part will be placed into another organism and/or cultured in vitro."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_1110087 "IEDB"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OBI_1110087 "donor role"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_1110087 "IEDB"@en)
AnnotationAssertion(obo:IAO_0000232 obo:OBI_1110087 "Definition modified by HP to deal with the case where an organ may be removed for donation but is not transplanted as intended."^^xsd:string)
AnnotationAssertion(rdfs:label obo:OBI_1110087 "donor"@en)
SubClassOf(obo:OBI_1110087 obo:BFO_0000023)

# Class: obo:OGG_0000000001 (genome)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000001 "A genome is a material entity that represents the entirety of an organism's hereditary information. The genome includes both the genes and the non-coding sequences of the DNA and RNA.")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000001 "Oliver He")
AnnotationAssertion(obo:IAO_0000119 obo:OGG_0000000001 "Book: Eugene Nester, Denise Anderson, C. Evans Roberts, Jr., Microbiology (Companion Site): A Human Perspective, 7th Edition. Mcgraw Hill, October 18, 2011. ISBN-13: 978-0073375311")
AnnotationAssertion(obo:IAO_0000119 obo:OGG_0000000001 "WEB: http://en.wikipedia.org/wiki/Genome")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000001 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000001 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:OGG_0000000001 "genome"@en)
SubClassOf(obo:OGG_0000000001 obo:BFO_0000040)
SubClassOf(obo:OGG_0000000001 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_0000000002))

# Class: obo:OGG_0000000002 (gene)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000002 "A gene is a material entity that represents the entire DNA sequence required for synthesis of a functional protein or RNA molecule. ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000002 "Oliver He")
AnnotationAssertion(obo:IAO_0000119 obo:OGG_0000000002 "WEB: http://www.ncbi.nlm.nih.gov/books/NBK21640/")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000002 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000002 obo:pdro.owl)
AnnotationAssertion(rdfs:comment obo:OGG_0000000002 "In addition to the coding regions (exons), a gene includes transcription-control regions and sometimes introns. Although the majority of genes encode proteins, some encode tRNAs, rRNAs, and other types of RNA.")
AnnotationAssertion(rdfs:label obo:OGG_0000000002 "gene"@en)
SubClassOf(obo:OGG_0000000002 obo:BFO_0000040)
SubClassOf(obo:OGG_0000000002 ObjectSomeValuesFrom(obo:BFO_0000162 obo:OGG_0000000003))

# Class: obo:OGG_0000000003 (gene disposition)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000003 "a disposition that a gene can be used as a blueprint for generating a new form of product such as protein. ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000003 "Yongqun He")
AnnotationAssertion(obo:IAO_0000119 obo:OGG_0000000003 "WEB: http://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/lxr/source/src/objects/entrezgene/entrezgene.asn ")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000003 obo:ogg.owl)
AnnotationAssertion(rdfs:comment obo:OGG_0000000003 "YH: According to NCBI Gene project, there are two gene types: unknown (0) , tRNA (1) , rRNA (2) , snRNA (3) , scRNA (4) , snoRNA  (5) , protein-coding (6) , pseudo  (7) , transposon  (8) , miscRNA  (9) , ncRNA (10) , other (255). Therefore, we have generated corresponding gene dispositions. Note that we don't use the term \"gene type\" here to differentiate the meanings of \"type\" and \"disposition\". ")
AnnotationAssertion(rdfs:label obo:OGG_0000000003 "gene disposition"@en)
SubClassOf(obo:OGG_0000000003 obo:BFO_0000016)

# Class: obo:OGG_0000000010 (protein-coding gene disposition)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_0000000010 "a gene disposition that a gene can be used as a blueprint for generating a protein (i.e., a gene encodes for a protein). ")
AnnotationAssertion(obo:IAO_0000117 obo:OGG_0000000010 "Yongqun He")
AnnotationAssertion(obo:IAO_0000119 obo:OGG_0000000010 "WEB: http://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/lxr/source/src/objects/entrezgene/entrezgene.asn")
AnnotationAssertion(obo:IAO_0000412 obo:OGG_0000000010 obo:ogg.owl)
AnnotationAssertion(rdfs:label obo:OGG_0000000010 "protein-coding gene disposition"@en)
SubClassOf(obo:OGG_0000000010 obo:OGG_0000000003)

# Class: obo:OGG_1000000002 (genome of Bacteria)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_1000000002 "The genome of an organism of Bacteria"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_1000000002 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_1000000002 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_1000000002 obo:pdro.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_1000000002 "2"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_1000000002 "genome of Bacteria"^^xsd:string)
SubClassOf(obo:OGG_1000000002 obo:OGG_0000000001)
SubClassOf(obo:OGG_1000000002 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_2000000002))
SubClassOf(obo:OGG_1000000002 ObjectSomeValuesFrom(obo:OGG_0000000014 obo:NCBITaxon_2))

# Class: obo:OGG_1000002759 (genome of Eukaryota)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_1000002759 "The genome of an organism of Eukaryota"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_1000002759 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_1000002759 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_1000002759 "2759"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_1000002759 "genome of Eukaryota"^^xsd:string)
SubClassOf(obo:OGG_1000002759 obo:OGG_0000000001)
SubClassOf(obo:OGG_1000002759 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_2000002759))
SubClassOf(obo:OGG_1000002759 ObjectSomeValuesFrom(obo:OGG_0000000014 obo:NCBITaxon_2759))

# Class: obo:OGG_1000009606 (genome of Homo sapiens)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_1000009606 "The genome of an organism of Homo sapiens"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_1000009606 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_1000009606 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_1000009606 "9606"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_1000009606 "genome of Homo sapiens"^^xsd:string)
SubClassOf(obo:OGG_1000009606 obo:OGG_1000002759)
SubClassOf(obo:OGG_1000009606 ObjectSomeValuesFrom(obo:BFO_0000051 obo:OGG_2000009606))
SubClassOf(obo:OGG_1000009606 ObjectSomeValuesFrom(obo:OGG_0000000014 obo:NCBITaxon_9606))

# Class: obo:OGG_2000000002 (gene of Bacteria)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_2000000002 "A gene of an organism of Bacteria"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_2000000002 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_2000000002 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_2000000002 obo:pdro.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_2000000002 "2"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_2000000002 "gene of Bacteria"^^xsd:string)
SubClassOf(obo:OGG_2000000002 obo:OGG_0000000002)
SubClassOf(obo:OGG_2000000002 ObjectSomeValuesFrom(obo:OGG_0000000016 obo:NCBITaxon_2))

# Class: obo:OGG_2000002759 (gene of Eukaryota)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_2000002759 "A gene of an organism of Eukaryota"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_2000002759 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_2000002759 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_2000002759 "2759"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_2000002759 "gene of Eukaryota"^^xsd:string)
SubClassOf(obo:OGG_2000002759 obo:OGG_0000000002)
SubClassOf(obo:OGG_2000002759 ObjectSomeValuesFrom(obo:OGG_0000000016 obo:NCBITaxon_2759))

# Class: obo:OGG_2000009606 (gene of Homo sapiens)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_2000009606 "A gene of an organism of Homo sapiens"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_2000009606 "Yue Liu, Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_2000009606 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_2000009606 "9606"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_2000009606 "gene of Homo sapiens"^^xsd:string)
SubClassOf(obo:OGG_2000009606 obo:OGG_2000002759)
SubClassOf(obo:OGG_2000009606 ObjectSomeValuesFrom(obo:OGG_0000000016 obo:NCBITaxon_9606))

# Class: obo:OGG_2060009606 (protein-coding gene of Homo sapiens)

AnnotationAssertion(obo:IAO_0000115 obo:OGG_2060009606 "A gene of Homo sapiens that has a protein-coding gene disposition"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:OGG_2060009606 "Bin Zhao, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_2060009606 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_2060009606 "9606"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_2060009606 "protein-coding gene of Homo sapiens"^^xsd:string)
SubClassOf(obo:OGG_2060009606 obo:OGG_2000009606)
SubClassOf(obo:OGG_2060009606 ObjectSomeValuesFrom(obo:BFO_0000162 obo:OGG_0000000010))

# Class: obo:OGG_3000000355 (FAS)

AnnotationAssertion(obo:IAO_0000117 obo:OGG_3000000355 "Bin Zhao, Yue Liu, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "ALPS1A"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "APO-1"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "APT1"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "CD95"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "FAS1"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "FASTM"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000000355 "TNFRSF6"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OGG_3000000355 "WEB: http://www.ncbi.nlm.nih.gov/gene"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_3000000355 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000004 obo:OGG_3000000355 "FAS"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000005 obo:OGG_3000000355 "Fas cell surface death receptor"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000006 obo:OGG_3000000355 "355"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000007 obo:OGG_3000000355 "RP11-399O19.7"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000008 obo:OGG_3000000355 "10q24.1"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000009 obo:OGG_3000000355 "20140408"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_3000000355 "9606"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000017 obo:OGG_3000000355 "10"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000018 obo:OGG_3000000355 "protein-coding"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000019 obo:OGG_3000000355 "Official from a nomenclature committee"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000029 obo:OGG_3000000355 "GO_0002377 (EC: IEA); GO_0003014 (EC: IEA); GO_0004871 (EC: TAS, PMID: 10875918); GO_0004872 (EC: NAS, PMID: 7533181); GO_0004888 (EC: IEA); GO_0005515 (EC: IPI, PMID: 10918185); GO_0005634 (EC: IDA); GO_0005737 (EC: IDA); GO_0005829 (EC: NAS, PMID: 7533181); GO_0005886 (EC: IDA); GO_0005886 (EC: IMP); GO_0005886 (EC: TAS); GO_0006461 (EC: TAS, PMID: 10875918); GO_0006915 (EC: IDA, PMID: 9681877); GO_0006915 (EC: TAS); GO_0006919 (EC: TAS); GO_0006924 (EC: IEA); GO_0006925 (EC: IEA); GO_0006927 (EC: IEA); GO_0007165 (EC: TAS, PMID: 9360929); GO_0008625 (EC: IEA); GO_0009636 (EC: IEA); GO_0009897 (EC: IEA); GO_0009986 (EC: IDA); GO_0016021 (EC: IEA); GO_0019724 (EC: IEA); GO_0019900 (EC: IPI, PMID: 7538908); GO_0031264 (EC: IDA, PMID: 11101870); GO_0031265 (EC: IDA); GO_0032464 (EC: IEA); GO_0042802 (EC: IPI); GO_0042981 (EC: NAS, PMID: 7533181); GO_0043065 (EC: IDA); GO_0043065 (EC: IMP); GO_0043066 (EC: IEA); GO_0045060 (EC: IEA); GO_0045121 (EC: IDA); GO_0045619 (EC: IEA); GO_0045637 (EC: IEA); GO_0048536 (EC: IEA); GO_0050869 (EC: IEA); GO_0051260 (EC: IEA); GO_0051384 (EC: IEA); GO_0070062 (EC: IDA); GO_0071260 (EC: IEP, PMID: 19593445); GO_0071285 (EC: IEA); GO_0071455 (EC: IMP); GO_0097049 (EC: IEA); GO_0097190 (EC: TAS); GO_0097191 (EC: IMP); GO_0097192 (EC: IEA); GO_0097527 (EC: IMP, PMID: 16507998); GO_2001239 (EC: TAS); GO_2001241 (EC: IEA)"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000030 obo:OGG_3000000355 "PMID: 1375228; 1385299; 1385309; 1713127; 2469768; 2787530; 7510905; 7514572; 7529798; 7530336; 7533181; 7536190; 7536343; 7538907; 7538908; 7539892; 7540117; 7542559; 7543095; 7575433; 7859281; 8521815; 8524870; 8598453; 8626376; 8648105; 8681376; 8780394; 8864141; 8906799; 8929361; 8940097; 8967952; 8976184; 9002959; 9028321; 9028957; 9039262; 9045686; 9079683; 9082980; 9126929; 9159204; 9199966; 9208847; 9215629; 9223324; 9226175; 9228058; 9247148; 9257699; 9263011; 9267021; 9268734; 9322534; 9325248; 9360929; 9427646; 9475352; 9560245; 9681877; 9721089; 9727492; 9740801; 9751072; 9787134; 9821419; 9835052; 9847311; 9857224; 9920849; 9927496; 9971775; 10068040; 10072505; 10090885; 10200300; 10235259; 10340403; 10462485; 10505674; 10506221; 10535980; 10542291; 10620127; 10625668; 10630977; 10671224; 10706119; 10709732; 10713117; 10799864; 10871852; 10875918; 10918185; 10978533; 11003656; 11034606; 11035039; 11036836; 11048727; 11048730; 11101867; 11101870; 11112409; 11129341; 11177389; 11193028; 11208609; 11298454; 11323689; 11418480; 11436125; 11483955; 11495919; 11550967; 11606059; 11692157; 11733515; 11771526; 11773067; 11779855; 11782802; 11786482; 11786908; 11788891; 11790791; 11809905; 11824955; 11830507; 11836578; 11857317; 11861273; 11864613; 11867183; 11877055; 11891278; 11895550; 11909874; 11920253; 11941452; 11949822; 11961305; 11965496; 11975981; 11986289; 11994542; 12021072; 12032668; 12034188; 12037669; 12040174; 12049185; 12060388; 12060768; 12064832; 12067476; 12096347; 12096925; 12098516; 12107169; 12131184; 12137598; 12139945; 12140383; 12150947; 12163388; 12169207; 12177303; 12185583; 12188927; 12196516; 12198154; 12207331; 12207908; 12220552; 12221075; 12234263; 12244143; 12270344; 12324452; 12372427; 12388693; 12393468; 12393649; 12393889; 12397013; 12414525; 12415011; 12419941; 12452031; 12455036; 12466128; 12477932; 12482410; 12482505; 12485855; 12497631; 12507389; 12513829; 12515395; 12515623; 12516573; 12557947; 12581154; 12583439; 12586732; 12587820; 12604424; 12623840; 12629150; 12646947; 12679613; 12698366; 12699879; 12702723; 12706861; 12710855; 12717632; 12724420; 12742662; 12742739; 12753742; 12757469; 12770553; 12783210; 12788915; 12794152; 12803240; 12824926; 12855571; 12855687; 12867600; 12874203; 12880639; 12883671; 12887920; 12907599; 12923319; 12952224; 12963547; 14506242; 14512182; 14514471; 14530312; 14533029; 14534720; 14557654; 14573612; 14585083; 14594800; 14625033; 14625298; 14625471; 14637155; 14638442; 14644092; 14644197; 14644318; 14647422; 14668794; 14672901; 14676203; 14694156; 14698859; 14714559; 14719092; 14719118; 14724564; 14736971; 14739003; 14739535; 14739941; 14745445; 14759258; 14967838; 14977837; 14981943; 14991945; 15016553; 15019807; 15039424; 15042330; 15054468; 15055260; 15078899; 15138553; 15159312; 15159409; 15160902; 15161716; 15183989; 15203866; 15207703; 15214041; 15215233; 15218339; 15220220; 15238425; 15240787; 15251990; 15277733; 15280387; 15287856; 15289903; 15297424; 15301860; 15345718; 15365741; 15383280; 15390286; 15459302; 15465831; 15467462; 15480430; 15489334; 15492869; 15497017; 15500551; 15502938; 15514680; 15542843; 15556626; 15556941; 15557123; 15563545; 15592292; 15617242; 15632129; 15637757; 15641141; 15645122; 15659383; 15665818; 15670977; 15672026; 15680394; 15688389; 15695771; 15704653; 15723707; 15726829; 15748958; 15786554; 15795317; 15803113; 15806311; 15808689; 15816832; 15818415; 15829968; 15833141; 15838728; 15843521; 15855233; 15858021; 15860671; 15894356; 15907374; 15911745; 15917238; 15929764; 15936090; 15937082; 15938782; 15944736; 15962371; 15963548; 15967797; 15968727; 15972662; 15975999; 15996722; 16000573; 16018969; 16081586; 16087126; 16091761; 16124644; 16129703; 16143308; 16148554; 16157125; 16158329; 16163374; 16169070; 16215672; 16215685; 16255757; 16273638; 16304056; 16306044; 16313826; 16343245; 16344560; 16358967; 16364925; 16368755; 16385451; 16393952; 16403915; 16436054; 16438619; 16441482; 16463650; 16469115; 16472594; 16473667; 16474169; 16507928; 16507998; 16515587; 16524887; 16538171; 16538172; 16643620; 16691186; 16723718; 16736614; 16741989; 16750039; 16765090; 16788566; 16808908; 16820946; 16822901; 16895904; 16899302; 16914910; 16917513; 16921240; 16936193; 16937440; 16948902; 16972019; 16987075; 17000697; 17006606; 17009393; 17014078; 17014925; 17053166; 17056024; 17062728; 17130290; 17135269; 17159907; 17159908; 17161551; 17174268; 17183065; 17194564; 17195092; 17198275; 17203787; 17219051; 17336828; 17376892; 17406980; 17465232; 17485109; 17487740; 17493146; 17504511; 17516614; 17544837; 17545588; 17559541; 17561354; 17564320; 17589525; 17597021; 17598974; 17603079; 17622942; 17657164; 17657791; 17667965; 17684774; 17692455; 17704746; 17704785; 17708363; 17724145; 17762757; 17853317; 17878356; 17891455; 17909299; 17912028; 17912957; 17916181; 17932249; 17938571; 17941899; 17962219; 17962369; 17970696; 17978477; 17982483; 17993614; 17997887; 18000680; 18003704; 18029348; 18045865; 18056484; 18057579; 18068525; 18078642; 18078929; 18088463; 18090928; 18162459; 18174230; 18208868; 18217400; 18220834; 18227168; 18234961; 18243739; 18268284; 18292515; 18302883; 18316328; 18324486; 18328427; 18337305; 18342935; 18361934; 18383830; 18411295; 18422813; 18427836; 18439588; 18441236; 18445624; 18463097; 18473402; 18483392; 18488389; 18494554; 18505906; 18508922; 18508927; 18512812; 18548110; 18552209; 18561948; 18582468; 18588573; 18609513; 18614439; 18635548; 18666137; 18676032; 18679533; 18685642; 18718055; 18727868; 18753860; 18754288; 18757527; 18787411; 18796602; 18800686; 18804468; 18813857; 18818748; 18844072; 18844210; 18851835; 18854777; 18923451; 18948840; 18949391; 18949744; 18972838; 19004284; 19009351; 19010354; 19012493; 19015953; 19019335; 19019483; 19020991; 19037097; 19043361; 19047119; 19067240; 19073786; 19076218; 19077906; 19103758; 19112091; 19118384; 19125371; 19141320; 19141860; 19146781; 19155494; 19161534; 19168581; 19170196; 19173804; 19181929; 19219602; 19225810; 19240174; 19241965; 19262492; 19263494; 19266094; 19270351; 19272297; 19293475; 19298528; 19305072; 19332441; 19336370; 19391241; 19404646; 19458913; 19480241; 19487421; 19509307; 19521670; 19527514; 19538867; 19538884; 19542541; 19561642; 19565204; 19572057; 19573080; 19593445; 19615968; 19625176; 19628789; 19634684; 19653342; 19669200; 19680267; 19692168; 19692467; 19698994; 19716115; 19718569; 19723039; 19726736; 19737931; 19751723; 19758996; 19759548; 19766542; 19773279; 19788921; 19789190; 19798106; 19810143; 19811416; 19812265; 19817952; 19826071; 19890662; 19895798; 19911702; 19913121; 19926197; 19927299; 19937732; 19940360; 19941645; 19950259; 19954064; 19966861; 20012528; 20052288; 20064083; 20074157; 20085233; 20101431; 20106900; 20137575; 20140262; 20164160; 20181888; 20187936; 20193111; 20204402; 20205514; 20219325; 20222173; 20237496; 20301287; 20352431; 20353032; 20359312; 20360470; 20378664; 20380574; 20385987; 20393185; 20394629; 20396760; 20396799; 20408337; 20416077; 20438363; 20438666; 20453000; 20470393; 20501759; 20505730; 20534173; 20547950; 20553075; 20558744; 20568250; 20572163; 20618494; 20620960; 20628086; 20629322; 20638642; 20658220; 20666744; 20673483; 20682001; 20694011; 20726226; 20737708; 20800603; 20802294; 20813889; 20819778; 20822933; 20842669; 20876301; 20934723; 20935634; 20936988; 20947025; 20951677; 20953611; 20959405; 20960177; 20981796; 21036138; 21041692; 21048031; 21049406; 21076068; 21081533; 21087335; 21103345; 21107705; 21120501; 21131755; 21145805; 21167737; 21173302; 21196076; 21233219; 21250890; 21257927; 21271302; 21286777; 21317766; 21321117; 21324892; 21354149; 21359408; 21382479; 21390503; 21430781; 21454681; 21466843; 21468569; 21485506; 21490157; 21516345; 21518761; 21526201; 21526501; 21528407; 21530489; 21549565; 21550977; 21557211; 21557277; 21613217; 21619451; 21625619; 21651830; 21691772; 21706480; 21717192; 21729539; 21741956; 21752354; 21757675; 21762074; 21792914; 21793106; 21803845; 21806408; 21808135; 21852034; 21864388; 21864851; 21869830; 21879377; 21885602; 21906983; 21910009; 21912376; 21917312; 21940365; 21961589; 21963094; 21971214; 21988832; 22027769; 22036455; 22042271; 22065776; 22076446; 22084312; 22095627; 22147197; 22173501; 22182632; 22183068; 22186140; 22194871; 22197557; 22199270; 22207003; 22211869; 22237435; 22252758; 22285488; 22299671; 22331638; 22344564; 22352690; 22357491; 22364882; 22386066; 22398398; 22422199; 22425739; 22431000; 22438247; 22492046; 22499988; 22508480; 22609371; 22622132; 22631677; 22645131; 22649200; 22669972; 22670178; 22677152; 22683265; 22698280; 22702044; 22706245; 22726303; 22752343; 22771321; 22805310; 22806078; 22815944; 22821704; 22842170; 22864571; 22891283; 22898262; 22934709; 22946667; 22983578; 22992806; 23033661; 23045958; 23053964; 23065220; 23114924; 23152563; 23153021; 23166734; 23234803; 23235765; 23240581; 23251661; 23269121; 23280017; 23285481; 23322903; 23326385; 23326448; 23326557; 23327061; 23330016; 23333919; 23338968; 23364796; 23372841; 23392773; 23420824; 23430061; 23434371; 23492187; 23499736; 23524443; 23580232; 23582102; 23582741; 23590971; 23618817; 23619472; 23636796; 23662689; 23667901; 23681795; 23697029; 23762329; 23770605; 23792529; 23846229; 23865866; 23880344; 23894399; 23900676; 23923075; 23932896; 23979975; 24014103; 24043286; 24091673; 24178789; 24331540"^^xsd:string)
AnnotationAssertion(dc:description obo:OGG_3000000355 "Fas cell surface death receptor"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000000355 "Ensembl:ENSG00000026103"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000000355 "HGNC:11920"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000000355 "HPRD:00609"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000000355 "MIM:134637"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000000355 "Vega:OTTHUMG00000018701"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:OGG_3000000355 "Other designations: APO-1 cell surface antigen|CD95 antigen|Delta Fas/APO-1/CD95|FAS 827dupA|FAS receptor variant 9|FASLG receptor|Fas (TNF receptor superfamily, member 6)|Fas AMA|TNF receptor superfamily member 6|apoptosis antigen 1|apoptosis-mediating surface antigen FAS|tumor necrosis factor receptor superfamily member 6|tumor necrosis factor receptor superfamily, member 6"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_3000000355 "FAS"^^xsd:string)
SubClassOf(obo:OGG_3000000355 obo:OGG_2060009606)

# Class: obo:OGG_3000005788 (PTPRC)

AnnotationAssertion(obo:IAO_0000117 obo:OGG_3000005788 "Bin Zhao, Yue Liu, Oliver He"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "B220"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "CD45"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "CD45R"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "GP180"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "L-CA"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "LCA"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "LY5"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:OGG_3000005788 "T200"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:OGG_3000005788 "WEB: http://www.ncbi.nlm.nih.gov/gene"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:OGG_3000005788 obo:ogg.owl)
AnnotationAssertion(obo:OGG_0000000004 obo:OGG_3000005788 "PTPRC"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000005 obo:OGG_3000005788 "protein tyrosine phosphatase, receptor type, C"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000006 obo:OGG_3000005788 "5788"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000007 obo:OGG_3000005788 "RP11-553K8.4"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000008 obo:OGG_3000005788 "1q31-q32"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000009 obo:OGG_3000005788 "20140408"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000015 obo:OGG_3000005788 "9606"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000017 obo:OGG_3000005788 "1"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000018 obo:OGG_3000005788 "protein-coding"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000019 obo:OGG_3000005788 "Official from a nomenclature committee"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000029 obo:OGG_3000005788 "GO_0001915 (EC: ISS); GO_0001960 (EC: ISS); GO_0002244 (EC: IMP); GO_0002378 (EC: IMP, PMID: 1793833); GO_0004725 (EC: IDA, PMID: 2853967); GO_0005001 (EC: TAS, PMID: 2845400); GO_0005515 (EC: IPI, PMID: 10369126); GO_0005886 (EC: TAS); GO_0005887 (EC: ISS); GO_0005925 (EC: ISS); GO_0006469 (EC: IDA, PMID: 9197241); GO_0006469 (EC: ISS); GO_0006470 (EC: ISS); GO_0006933 (EC: IMP); GO_0007166 (EC: TAS, PMID: 2845400); GO_0007411 (EC: TAS); GO_0009897 (EC: IDA, PMID: 17213291); GO_0016311 (EC: ISS); GO_0019901 (EC: IPI, PMID: 14625311); GO_0030217 (EC: ISS); GO_0030890 (EC: IMP, PMID: 1793833); GO_0035335 (EC: IDA, PMID: 2853967); GO_0035335 (EC: TAS, PMID: 2845400); GO_0042100 (EC: ISS); GO_0042102 (EC: ISS); GO_0044770 (EC: IMP, PMID: 1793833); GO_0045121 (EC: IEA); GO_0045860 (EC: NAS, PMID: 15275963); GO_0048539 (EC: IMP); GO_0048864 (EC: IMP); GO_0050852 (EC: IDA, PMID: 10358156); GO_0050852 (EC: TAS); GO_0050853 (EC: ISS); GO_0050857 (EC: ISS); GO_0051209 (EC: ISS); GO_0051607 (EC: ISS); GO_0051726 (EC: ISS); GO_0070062 (EC: IDA, PMID: 12519789); GO_2000473 (EC: IMP); GO_2000648 (EC: IMP)"^^xsd:string)
AnnotationAssertion(obo:OGG_0000000030 obo:OGG_3000005788 "PMID: 1355979; 1373652; 1648262; 1655467; 1680916; 1695146; 1793833; 1834739; 1970422; 1976695; 2169617; 2524382; 2531281; 2550143; 2824653; 2845400; 2853967; 2956090; 2971730; 7516335; 7526385; 7537381; 7539755; 7737297; 7961877; 8157290; 8473339; 8537410; 8557683; 8570203; 8576115; 8663450; 8703037; 8955171; 8980254; 9148925; 9197241; 9368621; 9403695; 9535845; 9573028; 9624153; 9973453; 10066810; 10228003; 10229804; 10330160; 10358156; 10369126; 10415030; 10473580; 10490978; 10683443; 10700239; 10702677; 10921916; 11101853; 11145714; 11201744; 11254687; 11369760; 11528386; 11548742; 11551930; 11564800; 11778694; 11804554; 11827988; 11841494; 11862398; 11877294; 11909961; 11975983; 11994288; 12008046; 12022705; 12028593; 12073144; 12100025; 12147336; 12354383; 12376545; 12386161; 12393728; 12430875; 12477932; 12499376; 12519755; 12519789; 12556471; 12560083; 12574355; 12589038; 12589045; 12595907; 12618866; 12626536; 12633939; 12716971; 12820694; 12864992; 12880639; 14525771; 14565647; 14625311; 14631169; 14636588; 14641523; 14684825; 14726805; 14979481; 14983037; 15014144; 15018649; 15057492; 15085197; 15214936; 15231748; 15240561; 15275963; 15302935; 15314282; 15333587; 15548260; 15584483; 15603882; 15624328; 15626731; 15684325; 15687496; 15808544; 15946252; 15960938; 15963758; 16172127; 16247487; 16269626; 16332974; 16341674; 16344560; 16360841; 16378074; 16393978; 16503409; 16505159; 16524887; 16538473; 16857986; 16955142; 16998493; 16999868; 17122895; 17172930; 17213291; 17242371; 17378731; 17524482; 17591854; 17635802; 17656643; 17692374; 17803443; 17823079; 17897956; 18029348; 18157742; 18174230; 18292296; 18312479; 18511809; 18634151; 18669861; 18680516; 18719244; 18840711; 18992193; 19059880; 19111528; 19167335; 19246294; 19332764; 19454697; 19481264; 19546439; 19585516; 19635795; 19850743; 19879912; 19898481; 20093141; 20119835; 20139978; 20156100; 20164196; 20191119; 20231690; 20309874; 20505149; 20932480; 21054833; 21067564; 21106704; 21179414; 21278234; 21507955; 21599592; 21768350; 21818290; 21890473; 21952639; 21952740; 22171268; 22174689; 22268729; 22386990; 22438252; 22458809; 22505724; 22524693; 22606231; 22689986; 22783574; 22821963; 22937208; 23065155; 23206327; 23394998; 23396948; 23733486; 23747721; 24211716; 24211831; 24231767"^^xsd:string)
AnnotationAssertion(dc:description obo:OGG_3000005788 "protein tyrosine phosphatase, receptor type, C"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000005788 "Ensembl:ENSG00000081237"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000005788 "HGNC:9666"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000005788 "HPRD:01050"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000005788 "MIM:151460"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:OGG_3000005788 "Vega:OTTHUMG00000035702"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:OGG_3000005788 "Other designations: CD45 antigen|T200 glycoprotein|T200 leukocyte common antigen|protein tyrosine phosphatase, receptor type, c polypeptide|receptor-type tyrosine-protein phosphatase C"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGG_3000005788 "PTPRC"^^xsd:string)
SubClassOf(obo:OGG_3000005788 obo:OGG_2060009606)

# Class: obo:OGMS_0000023 (phenotype)

AnnotationAssertion(obo:IAO_0000111 obo:OGMS_0000023 "phenotype")
AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000023 "A (combination of) quality(ies) of an organism determined by the interaction of its genetic make-up and environment that differentiates specific instances of a species from other instances of the same species."@en)
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000023 obo:ogms.owl)
AnnotationAssertion(rdfs:label obo:OGMS_0000023 "phenotype")
SubClassOf(obo:OGMS_0000023 obo:BFO_0000019)

# Class: obo:OGMS_0000045 (disorder)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000045 "A material entity which is clinically abnormal and part of an extended organism. Disorders are the physical basis of disease."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000045 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000045 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000045 obo:ogms.owl)
AnnotationAssertion(rdfs:label obo:OGMS_0000045 "disorder")
SubClassOf(obo:OGMS_0000045 obo:BFO_0000040)

# Class: obo:OGMS_0000073 (diagnosis)

AnnotationAssertion(obo:IAO_0000111 obo:OGMS_0000073 "diagnosis")
AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000073 "The representation of a conclusion of a diagnostic process."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000073 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000073 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000073 obo:ogms.owl)
AnnotationAssertion(rdfs:label obo:OGMS_0000073 "diagnosis")
SubClassOf(obo:OGMS_0000073 obo:IAO_0000027)

# Class: obo:OGMS_0000090 (treatment)

AnnotationAssertion(obo:IAO_0000111 obo:OGMS_0000090 "treatment")
AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000090 "A planned process whose completion is hypothesized by a health care provider to eliminate a disorder or to alleviate the signs and symptoms of a disorder."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000090 "A processual entity whose completion is hypothesized (by a healthcare provider) to alleviate the signs and symptoms associated with a disorder"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000090 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000090 "http://code.google.com/p/ogms/issues/detail?id=35")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000090 "creation date: 2010-03-31T04:51:11Z")
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000090 obo:ogms.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000090 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000090 "http://purl.obolibrary.org/obo/ogms.owl"^^xsd:string)
AnnotationAssertion(rdfs:label obo:OGMS_0000090 "treatment")
SubClassOf(obo:OGMS_0000090 obo:OBI_0000011)
SubClassOf(obo:OGMS_0000090 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectIntersectionOf(obo:BFO_0000017 ObjectSomeValuesFrom(obo:RO_0000059 ObjectIntersectionOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0010018))))))

# Class: obo:OGMS_0000097 (health care encounter)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000097 "A temporally-connected health care process that has as participants an organization or person realizing the health care provider role and a person realizing the patient role.  The health care provider role and patient are realized during the health care encounter"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000097 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000097 "http://groups.google.com/group/ogms-discuss/browse_thread/thread/a2dbc2ed1dff99d6")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000097 "creation date: 2011-02-21T09:57:44Z")
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000097 obo:ogms.owl)
AnnotationAssertion(obo:IAO_0000412 obo:OGMS_0000097 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OGMS_0000097 "health care encounter")
SubClassOf(obo:OGMS_0000097 obo:BFO_0000015)

# Class: obo:OMIABIS_0000000 (biobank)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000000 "A biobank is a collections of samples of biological substances
(e.g. tissue, blood, DNA) which are linked to data about the samples and their donors. They have a dual nature as collections of samples and data."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000000 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000119 obo:OMIABIS_0000000 "definition derived from the definition of 'human biobank', based on http://www.ethikrat.org/files/der_opinion_human-biobanks.pdf"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000000 "biobank"@en)
EquivalentClasses(obo:OMIABIS_0000000 ObjectIntersectionOf(obo:BFO_0000027 ObjectSomeValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(obo:BFO_0000027 ObjectAllValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(obo:OBI_0100051 ObjectSomeValuesFrom(obo:RO_0000056 obo:OBI_0302893))))) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(obo:IAO_0000178 ObjectSomeValuesFrom(obo:RO_0000056 ObjectIntersectionOf(obo:OBI_0302914 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectIntersectionOf(obo:IAO_0000100 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:BFO_0000027 ObjectAllValuesFrom(obo:BFO_0000051 obo:OBI_0100051))))))))) ObjectSomeValuesFrom(obo:OMIABIS_0000048 obo:OMIABIS_0000010)))
SubClassOf(obo:OMIABIS_0000000 obo:BFO_0000027)

# Class: obo:OMIABIS_0000003 (biobank proper name)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000003 "An identifier in natural language referring  to a biobank."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000003 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000118 obo:OMIABIS_0000003 "Name of biobank"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000003 "biobank proper name"@en)
EquivalentClasses(obo:OMIABIS_0000003 ObjectSomeValuesFrom(obo:IAO_0020012 obo:OMIABIS_0000000))
SubClassOf(obo:OMIABIS_0000003 obo:IAO_0020000)

# Class: obo:OMIABIS_0000010 (biobank organization)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000010 "An organization bearing legal personality that ownes or adminstrates a biobank.")
AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000010 "An organization bearing legal personality that ownes or adminstrates a biobank."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000010 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000118 obo:OMIABIS_0000010 "biobank juristic person"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000010 "biobank organization"@en)
EquivalentClasses(obo:OMIABIS_0000010 ObjectIntersectionOf(obo:OBI_0000245 ObjectUnionOf(ObjectSomeValuesFrom(obo:OMIABIS_0000008 obo:OMIABIS_0000000) ObjectSomeValuesFrom(obo:OMIABIS_0000009 obo:OMIABIS_0000000)) ObjectSomeValuesFrom(obo:RO_0000053 obo:OMRSE_00000038)))
SubClassOf(obo:OMIABIS_0000010 obo:OBI_0000245)
SubClassOf(obo:OMIABIS_0000010 ObjectSomeValuesFrom(obo:OBI_0001688 obo:OMIABIS_0000013))

# Class: obo:OMIABIS_0000011 (contacting)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000011 "A planned process that involves a human being and is intended to initiate a communication with another human being."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000011 "Contacting is the process of one human being starting a communication process with another human being. Contacting can be done using all modes of communication used by humans.")
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000011 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:OMIABIS_0000011 "contacting"@en)
SubClassOf(obo:OMIABIS_0000011 obo:OBI_0000011)

# Class: obo:OMIABIS_0000012 (contact role)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000012 "A role borne by a human being that is part of an group of individuals and acts as contact person for the group. This role gets realized by the bearer being a participant in a contacting process."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000012 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000012 "contact role"@en)
SubClassOf(obo:OMIABIS_0000012 obo:OMRSE_00000024)
SubClassOf(obo:OMIABIS_0000012 ObjectSomeValuesFrom(obo:BFO_0000054 obo:OMIABIS_0000011))
SubClassOf(obo:OMIABIS_0000012 ObjectAllValuesFrom(obo:BFO_0000054 obo:OMIABIS_0000011))
SubClassOf(obo:OMIABIS_0000012 ObjectAllValuesFrom(obo:RO_0000052 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:OBI_0000846 obo:OBI_0000245))))

# Class: obo:OMIABIS_0000013 (biobank contact person)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000013 "A human being that is member of a biobank organization and bears the organization contact role."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000013 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:OMIABIS_0000013 "biobank contact person"@en)
EquivalentClasses(obo:OMIABIS_0000013 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:OBI_0000846 obo:OMIABIS_0000010) ObjectSomeValuesFrom(obo:RO_0000053 obo:OMIABIS_0000093)))
SubClassOf(obo:OMIABIS_0000013 obo:NCBITaxon_9606)

# Class: obo:OMIABIS_0000036 (sample collection or study aim description)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000036 "A textual entity describing a study aim or a sample collection."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0000036 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000118 obo:OMIABIS_0000036 "Sample collection or study description"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000036 "sample collection or study aim description"@en)
EquivalentClasses(obo:OMIABIS_0000036 ObjectIntersectionOf(obo:IAO_0000300 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectUnionOf(ObjectIntersectionOf(obo:BFO_0000027 ObjectAllValuesFrom(obo:BFO_0000051 obo:OBI_0100051)) ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:IAO_0000005 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0500000)))))))
SubClassOf(obo:OMIABIS_0000036 obo:IAO_0000300)

# Class: obo:OMIABIS_0000093 (biobank contact role)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000093 "A contact role borne by a member of a biobank organization and realized by serving as the contact for one of its biobanks."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0000093 "A contact role borne by a member of a sample collection or study organization and realized by serving as the contact for the collection or the study."@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0000093 "biobank contact role"@en)
SubClassOf(obo:OMIABIS_0000093 obo:OMIABIS_0000012)

# Class: obo:OMIABIS_0001009 (primary diagnosis)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0001009 "A diagnosis that is the main reason for the inducement of medical care."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0001009 "Alice Nzinga"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OMIABIS_0001009 "main diagnosis"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OMIABIS_0001009 "Hint:
http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0001009 "primary diagnosis"@en)
SubClassOf(obo:OMIABIS_0001009 obo:OGMS_0000073)

# Class: obo:OMIABIS_0001026 (medical record)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0001026 "A document that contains information representing health-relevant qualities of a patient written in a chronological manner and that is primarily used for patient care in a clinical setting."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0001026 "Martin Fransson")
AnnotationAssertion(rdfs:comment obo:OMIABIS_0001026 "It is a chronological written account of examination, treatment, medical history or complaints.")
AnnotationAssertion(rdfs:comment obo:OMIABIS_0001026 "It is used interchangeably with health record and medical chart.
https://en.wikipedia.org/wiki/Medical_record")
AnnotationAssertion(rdfs:label obo:OMIABIS_0001026 "medical record"@en)
SubClassOf(obo:OMIABIS_0001026 obo:IAO_0000310)

# Class: obo:OMIABIS_0001046 (specimen ID)

AnnotationAssertion(obo:IAO_0000115 obo:OMIABIS_0001046 "A proper name that identifies a specimen and is usually in form of a label included in the specimen cassette."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0001046 "Alice Nzinga"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OMIABIS_0001046 "http://biospecimens.cancer.gov/resources/sops/GTEx_SOPs/II/A/GTEx%20Tissue%20Procurement%20SOP%20%28PR-0004%20v1.2.1%29.pdf"@en)
AnnotationAssertion(rdfs:label obo:OMIABIS_0001046 "specimen ID"@en)
SubClassOf(obo:OMIABIS_0001046 obo:IAO_0020000)
SubClassOf(obo:OMIABIS_0001046 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000577) ObjectSomeValuesFrom(obo:IAO_0000136 obo:OBI_0100051)))

# Class: obo:OMIABIS_0001079 (specimen donor)

AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0001079 "Alice Nzinga"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMIABIS_0001079 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OMIABIS_0001079 "sample donor"@en)
AnnotationAssertion(rdfs:comment obo:OMIABIS_0001079 "A Homo sapiens who contributes specimen.")
AnnotationAssertion(rdfs:label obo:OMIABIS_0001079 "specimen donor"@en)
EquivalentClasses(obo:OMIABIS_0001079 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:RO_0000053 ObjectIntersectionOf(obo:BFO_0000023 ObjectSomeValuesFrom(obo:BFO_0000054 obo:OBI_0000659)))))
SubClassOf(obo:OMIABIS_0001079 obo:NCBITaxon_9606)

# Class: obo:OMRSE_00000010 (human health care role)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000010 "A role in human social processes that is realized by health care processes such as seeking or providing treatment for disease and injury, diagnosing disease and injury, or undergoing diagnosis. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000010 "William R. Hogan"@en)
AnnotationAssertion(obo:IAO_0000118 obo:OMRSE_00000010 "health care role"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000010 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000010 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:OMRSE_00000010 "human health care role"@en)
SubClassOf(obo:OMRSE_00000010 obo:OMRSE_00000024)
SubClassOf(obo:OMRSE_00000010 ObjectSomeValuesFrom(obo:BFO_0000054 obo:OGMS_0000097))

# Class: obo:OMRSE_00000012 (health care provider role)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000012 "A human health care role inhering in an organization or human being that is realized by a process of providing health care services to an organism."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000012 "Mathias Brochhausen
"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000012 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000012 "William R. Hogan"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000012 "health care provider role"@en)
SubClassOf(obo:OMRSE_00000012 obo:OMRSE_00000010)
SubClassOf(obo:OMRSE_00000012 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245)) ObjectAllValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:NCBITaxon_9606 obo:OBI_0000245))))

# Class: obo:OMRSE_00000022 (collection of organisms)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000022 "An object aggregate of organisms."@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000022 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000022 "Any arbitrary collection of organisms.  They need not be of the same taxonomic class.  "@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000022 "collection of organisms"@en)
SubClassOf(obo:OMRSE_00000022 obo:BFO_0000040)

# Class: obo:OMRSE_00000023 (collection of humans)

AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000023 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000023 "An object aggregate all of whose components are human beings."@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000023 "collection of humans"@en)
SubClassOf(obo:OMRSE_00000023 obo:OMRSE_00000022)

# Class: obo:OMRSE_00000024 (role in human social processes)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000024 "A role inhering in an entity realized by social interactions in human society."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000024 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000024 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000024 "Previous definition: A role played by an entity in human social processes."@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000024 "role in human social processes"@en)
SubClassOf(obo:OMRSE_00000024 obo:BFO_0000023)
SubClassOf(obo:OMRSE_00000024 ObjectSomeValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:OBI_0000245 obo:OBI_0100026)))
SubClassOf(obo:OMRSE_00000024 ObjectAllValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:OBI_0000245 obo:OBI_0100026)))

# Class: obo:OMRSE_00000033 (aggregate of organizations)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000033 "An object aggregate that is not itself an organization and whose members are only organizations that have some feature in common"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000033 "William R. Hogan
Amanda Hicks"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000033 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000033 "It is often convenient to group organizations together that otherwise might not even interact with one another. "@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000033 "aggregate of organizations"@en)
EquivalentClasses(obo:OMRSE_00000033 ObjectIntersectionOf(ObjectComplementOf(obo:OBI_0000245) ObjectAllValuesFrom(obo:OMRSE_00000020 obo:OBI_0000245) ObjectMinCardinality(2 obo:OMRSE_00000020 obo:OBI_0000245)))
SubClassOf(obo:OMRSE_00000033 obo:BFO_0000040)

# Class: obo:OMRSE_00000038 (legal person role)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000038 "A role borne by a human individual or by a collection of humans regarded as possessing rights and duties enforeable at law."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000038 "Mathias Brochhausen")
AnnotationAssertion(obo:IAO_0000119 obo:OMRSE_00000038 "Malcolm N. Shaw: International Law. Cambridge University Press, Cambridge, 2008.")
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000038 obo:omrse.owl)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000038 "We are aware of the fact that Wikipedia's definition differs from ours by saying that \"Legal personality (...) is the characteristic of a non-living entity regarded by law to have the status of personhood\" (http://en.wikipedia.org/wiki/Legal_personality) 
However, Shaw explicates:
\"In any legal system, certain entities, whether they be individuals or companies, will be regarded as possessing rights and duties enforceable at law. Thus an individual may prosecute or be prosecuted for assault and a company can sue for breach of contract. They are able to do this because the law recognises them as 'legal persons' possessing the capacity to have and to maintain certain rights, and being subject to perform specific duties. (...) In municipal law individuals, limited companies and public corporations are recognized as each possessing a distinct legal personality, the terms of which are circumscribed by the relevant legislation\" (Shaw MN: International Law. Sixth Edition. Cambridge University Press, Cambridge, 2008).                We hold that Shaw's position is ontological more prolific since it not only allows to explain how groups of individuals become recognized as unities at law, but also how different individuals can hold different legal personality roles (always against the context of one legal system). The latter will proof useful when dealing with the representing comatous patients or minorsat law in ontologies."@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000038 "legal person role"@en)
SubClassOf(obo:OMRSE_00000038 obo:OMRSE_00000024)
SubClassOf(obo:OMRSE_00000038 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:NCBITaxon_9606 obo:OMRSE_00000023)) ObjectAllValuesFrom(obo:RO_0000052 ObjectUnionOf(obo:NCBITaxon_9606 obo:OMRSE_00000023))))

# Class: obo:OMRSE_00000100 (ethnic identity datum)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000100 "An ethnic identity datum is an information content entity that is the output of some ethnic identitification process and is intended to be a truthful statement about the cultural or national heritage of a person.  Unlike data items they are not necessilary contributed or acquired by a reliable method."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000100 "Amanda Hicks")
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000100 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OMRSE_00000100 "ethnic identity datum"@en)
EquivalentClasses(obo:OMRSE_00000100 ObjectIntersectionOf(obo:OMRSE_00000132 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0020022) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OMRSE_00000101)) ObjectSomeValuesFrom(obo:IAO_0000136 obo:NCBITaxon_9606)))
SubClassOf(obo:OMRSE_00000100 obo:OMRSE_00000132)

# Class: obo:OMRSE_00000101 (ethnic identification process)

AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000101 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OMRSE_00000101 "ethnic identification process"@en)
SubClassOf(obo:OMRSE_00000101 obo:OMRSE_00000134)
SubClassOf(obo:OMRSE_00000101 ObjectIntersectionOf(obo:OMRSE_00000134 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OMRSE_00000100))))

# Class: obo:OMRSE_00000132 (identity datum)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000132 "An identity datum is an information content entity that is the output of some identitification process and is intended to be a truthful statement about a person's social identity.  Unlike data items they are not necessilary contributed or acquired by a reliable method."@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000132 obo:omrse.owl)
AnnotationAssertion(dc:creator obo:OMRSE_00000132 "Amanda Hicks")
AnnotationAssertion(rdfs:label obo:OMRSE_00000132 "identity datum"@en)
EquivalentClasses(obo:OMRSE_00000132 ObjectIntersectionOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0020022) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OMRSE_00000134)) ObjectSomeValuesFrom(obo:IAO_0000136 obo:NCBITaxon_9606)))
SubClassOf(obo:OMRSE_00000132 obo:IAO_0000030)

# Class: obo:OMRSE_00000133 (gender identity datum)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000133 "A gender identity is an information content entity that is the output of some gender identitification process and is intended to be a truthful statement about a person's subjective sense of their gender.  Unlike data items they are not necessilary contributed or acquired by a reliable method.")
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000133 obo:omrse.owl)
AnnotationAssertion(dc:creator obo:OMRSE_00000133 "Amanda Hicks")
AnnotationAssertion(rdfs:label obo:OMRSE_00000133 "gender identity datum"@en)
EquivalentClasses(obo:OMRSE_00000133 ObjectIntersectionOf(obo:OMRSE_00000132 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0020022) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OMRSE_00000135)) ObjectSomeValuesFrom(obo:IAO_0000136 obo:NCBITaxon_9606)))
SubClassOf(obo:OMRSE_00000133 obo:OMRSE_00000132)

# Class: obo:OMRSE_00000134 (identification process)

AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000134 obo:omrse.owl)
AnnotationAssertion(dc:creator obo:OMRSE_00000134 "Amanda Hicks")
AnnotationAssertion(rdfs:label obo:OMRSE_00000134 "identification process"@en)
SubClassOf(obo:OMRSE_00000134 obo:IAO_0021003)
SubClassOf(obo:OMRSE_00000134 obo:OBI_0000011)

# Class: obo:OMRSE_00000135 (gender identification process)

AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000135 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OMRSE_00000135 "gender identification process"@en)
SubClassOf(obo:OMRSE_00000135 obo:OMRSE_00000134)
SubClassOf(obo:OMRSE_00000135 ObjectIntersectionOf(obo:OMRSE_00000134 ObjectSomeValuesFrom(obo:OBI_0000299 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OMRSE_00000133))))

# Class: obo:OMRSE_00000138 (female gender identity datum)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000138 "a gender identity datum resulting from a gender identification process in which ‘female’ is selected based on the participant's subjective sense of gender"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000138 "Amanda Hicks"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000138 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OMRSE_00000138 "female gender identity datum"@en)
SubClassOf(obo:OMRSE_00000138 obo:OMRSE_00000133)

# Class: obo:OMRSE_00000141 (male gender identity datum)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000141 "a gender identity datum resulting from a gender identification process in which ‘male’ is selected based on the participant's subjective sense of gender"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000141 "Amanda Hicks"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OMRSE_00000141 ""@en)
AnnotationAssertion(obo:IAO_0000412 obo:OMRSE_00000141 obo:omrse.owl)
AnnotationAssertion(rdfs:label obo:OMRSE_00000141 "male gender identity datum"@en)
SubClassOf(obo:OMRSE_00000141 obo:OMRSE_00000133)

# Class: obo:PATO_0000011 (age)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000011 "age"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000011 "A time quality inhering in a bearer by virtue of how long the bearer has existed."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000011 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000011 "age"^^xsd:string)
SubClassOf(obo:PATO_0000011 obo:PATO_0001018)
SubClassOf(obo:PATO_0000011 obo:PATO_0001237)

# Class: obo:PATO_0000047 (biological sex)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000047 "biological sex"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000047 "An organismal quality inhering in a bearer by virtue of the bearer's ability to undergo sexual reproduction in order to differentiate the individuals or types involved."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000047 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000047 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000047 "biological sex"^^xsd:string)
SubClassOf(obo:PATO_0000047 obo:PATO_0001995)

# Class: obo:PATO_0000051 (morphology)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000051 "A quality of a single physical entity inhering in the bearer by virtue of the bearer's size or shape or structure."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000051 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000051 "morphology"^^xsd:string)
SubClassOf(obo:PATO_0000051 obo:PATO_0001241)

# Class: obo:PATO_0000117 (size)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000117 "A morphology quality inhering in a bearer by virtue of the bearer's physical magnitude."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000117 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000117 "size"^^xsd:string)
SubClassOf(obo:PATO_0000117 obo:PATO_0000051)

# Class: obo:PATO_0000119 (height)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000119 "A 1-D extent quality inhering in a bearer by virtue of the bearer's vertical dimension of extension."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000119 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000119 "height"^^xsd:string)
SubClassOf(obo:PATO_0000119 obo:PATO_0000117)

# Class: obo:PATO_0000122 (length)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000122 "length"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000122 "A 1-D extent quality which is equal to the distance between two points."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000122 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000122 "length"^^xsd:string)
SubClassOf(obo:PATO_0000122 obo:BFO_0000019)

# Class: obo:PATO_0000125 (mass)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000125 "mass"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000125 "A physical quality that inheres in a bearer by virtue of the proportion of the bearer's amount of matter."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000125 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000125 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000125 "mass"^^xsd:string)
SubClassOf(obo:PATO_0000125 obo:BFO_0000019)

# Class: obo:PATO_0000128 (weight)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000128 "A physical quality inhering in a bearer that has mass near a gravitational body."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000128 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000128 "weight"^^xsd:string)
SubClassOf(obo:PATO_0000128 obo:PATO_0001018)

# Class: obo:PATO_0000383 (female)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000383 "female"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000383 "A biological sex quality inhering in an individual or a population that only produces gametes that can be fertilised by male gametes."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000383 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000383 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000383 "female"^^xsd:string)
SubClassOf(obo:PATO_0000383 obo:PATO_0000047)

# Class: obo:PATO_0000384 (male)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000384 "male"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000384 "A biological sex quality inhering in an individual or a population whose sex organs contain only male gametes."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000384 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000384 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000384 "male"^^xsd:string)
SubClassOf(obo:PATO_0000384 obo:PATO_0000047)

# Class: obo:PATO_0000918 (volume)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0000918 "volume"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0000918 "A 3-D extent quality inhering in a bearer by virtue of the bearer's amount of 3-dimensional space it occupies."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000918 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000918 "volume"^^xsd:string)
SubClassOf(obo:PATO_0000918 obo:PATO_0000117)
SubClassOf(obo:PATO_0000918 obo:PATO_0001237)

# Class: obo:PATO_0001018 (physical quality)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0001018 "A quality of a physical entity that exists through action of continuants at the physical level of organisation in relation to other entities."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0001018 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001018 "physical quality"^^xsd:string)
SubClassOf(obo:PATO_0001018 obo:PATO_0001241)

# Class: obo:PATO_0001237 (quality of a single physical entity)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0001237 "quality of a single physical entity"@en)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0001237 "A physical object quality which inheres in a single-bearer."@en)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0001237 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001237 "quality of a single physical entity"@en)
SubClassOf(obo:PATO_0001237 obo:BFO_0000019)

# Class: obo:PATO_0001241 (physical object quality)

AnnotationAssertion(obo:IAO_0000115 obo:PATO_0001241 "A quality which inheres in a continuant."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0001241 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001241 "physical object quality"^^xsd:string)
SubClassOf(obo:PATO_0001241 obo:BFO_0000019)

# Class: obo:PATO_0001995 (organismal quality)

AnnotationAssertion(obo:IAO_0000111 obo:PATO_0001995 "organismal quality"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PATO_0001995 "A quality that inheres in an entire organism or part of an organism."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0001995 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PATO_0001995 obo:pato.owl)
AnnotationAssertion(rdfs:label obo:PATO_0001995 "organismal quality"^^xsd:string)
SubClassOf(obo:PATO_0001995 obo:BFO_0000019)
SubClassOf(obo:PATO_0001995 obo:PATO_0001241)

# Class: obo:PDRO_0000001 (health care prescription)

AnnotationAssertion(obo:IAO_0000112 obo:PDRO_0000001 "\"For patient: Mr Smith, should exercise for at least 30 minutes, 3 times weekly. signed Dr. Ronnie Shuz. Date: 15/11/01\"")
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000001 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000001 "A document authored by a health care provider that specifies how to realize some health care process for a particular patient."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000001 "Un document créé par un fournisseur de soin indiquant comment réaliser une partie d'un processus de santé pour un patient particulier."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000001 obo:pdro.owl)
AnnotationAssertion(oboInOwl:hasSynonym obo:PDRO_0000001 "prescription")
AnnotationAssertion(rdfs:label obo:PDRO_0000001 "health care prescription"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000001 "prescription de santé"@fr)
SubClassOf(obo:PDRO_0000001 obo:IAO_0000310)
SubClassOf(obo:PDRO_0000001 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000302) ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000003) ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000005)))
SubClassOf(obo:PDRO_0000001 ObjectSomeValuesFrom(obo:IAO_0000142 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:RO_0000053 obo:OBI_0000093))))

# Class: obo:PDRO_0000003 (identification d'un patient)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000003 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000003 "A written name denoting a particular patient."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000003 "Un nom écrit faisant référence à un patient particulier."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000003 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000003 "identification d'un patient"@fr)
AnnotationAssertion(rdfs:label obo:PDRO_0000003 "patient identification"@en)
SubClassOf(obo:PDRO_0000003 obo:IAO_0000590)

# Class: obo:PDRO_0000005 (document creation time identification)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000005 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000005 "A textual entity that denotes the time of document creation."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000005 "Une entité textuelle indiquant l'instant de création d'un document."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000005 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:PDRO_0000005 "the granular time at which the author considers the document whole, ie ready for interpretation"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000005 "document creation time identification"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000005 "identification de l'instant de création d'un document"@fr)
SubClassOf(obo:PDRO_0000005 obo:IAO_0000300)

# Class: obo:PDRO_0000024 (prescription de médicaments)

AnnotationAssertion(obo:IAO_0000112 obo:PDRO_0000024 "\"Prescription for John Smith : Ativan 2mg tablets, take 1 tablet twice daily by mouth as needed if anxious, dispense 60 tablets, renew 12 times. Signed by Dr Hazard. Date: 15/10/29\"")
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000024 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000024 "A health care prescription specifying how to realize a drug administration."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000024 "Une ordonnance indiquant une administration de médicaments."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000024 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000024 "drug prescription"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000024 "prescription de médicaments"@fr)
SubClassOf(obo:PDRO_0000024 obo:PDRO_0000001)
SubClassOf(obo:PDRO_0000024 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0010022))
SubClassOf(obo:PDRO_0000024 ObjectSomeValuesFrom(obo:IAO_0000142 obo:DRON_00000005))

# Class: obo:PDRO_0000044 (nom de médicament)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000044 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000044 "A textual entity that allows the identification of a drug product."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000044 "Une entité textuelle qui fait référence à un type de médicament."@fr)
AnnotationAssertion(obo:IAO_0000116 obo:PDRO_0000044 "Note that this is a name of a drug product, not the name of an active ingredient contained in a drug product."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000044 "drug name")
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000044 "drug product identification")
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000044 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000044 "drug product name"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000044 "nom de médicament"@fr)
SubClassOf(obo:PDRO_0000044 obo:IAO_0000300)
SubClassOf(obo:PDRO_0000044 ObjectSomeValuesFrom(obo:IAO_0000136 obo:DRON_00000005))

# Class: obo:PDRO_000006 (spécification de médicament)

AnnotationAssertion(obo:IAO_0000111 obo:PDRO_000006 "prescription drug product specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:PDRO_000006 "\"Aspirin 80mg oral tablet\"
\"Amiodarone 50mg/mL injectable solution\""@en)
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_000006 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_000006 "An information content entity specifying a class of drug product intended to be administered in a drug administration."@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_000006 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_000006 "drug product specification"@en)
AnnotationAssertion(rdfs:label obo:PDRO_000006 "spécification de médicament"@fr)
SubClassOf(obo:PDRO_000006 obo:IAO_0000030)
SubClassOf(obo:PDRO_000006 ObjectSomeValuesFrom(obo:BFO_0000051 ObjectUnionOf(obo:PDRO_0000044 obo:PDRO_0040002)))
SubClassOf(obo:PDRO_000006 ObjectSomeValuesFrom(obo:IAO_0000136 obo:DRON_00000005))

# Class: obo:PDRO_0000103 (prescribed dosing specification)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000103 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000103 "A normative specification that directs the dosing in a drug administration."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000103 "Sig."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000103 "dosing instructions"@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000103 "posological instructions"@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000103 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000103 "prescribed dosing specification"@en)
SubClassOf(obo:PDRO_0000103 obo:IAO_0000033)
SubClassOf(obo:PDRO_0000103 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000127))
SubClassOf(obo:PDRO_0000103 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_000019))

# Class: obo:PDRO_0000106 (normative specification)

AnnotationAssertion(obo:IAO_0000111 obo:PDRO_0000106 "normative directive information entity"@en)
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000106 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000106 "A directive information entity that specifies how to realize a normative process"@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000106 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000106 "normative specification"@en)
SubClassOf(obo:PDRO_0000106 obo:IAO_0000033)

# Class: obo:PDRO_0000123 (dose quantification specification)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000123 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000123 "An information content entity that specifies how a dose is quantified in a dose administration."@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000123 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000600 obo:PDRO_0000123 "This part of a prescription usually specifies a fixed amount (like '50 mg' or '500 mL'), but may instead specify a rate in some situations, e.g., in ongiong IV perfusions, where the total dose that will be administered in a single dose is unkown until the administration has ended. In either situation, the dose quantification specification is what enables the calculation of the quantity of active ingredient or drug product in the dose that is administered"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0000123 "dose quantification specification")
SubClassOf(obo:PDRO_0000123 obo:IAO_0000030)

# Class: obo:PDRO_0000127 (continuing drug administration condition)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000127 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000127 "A condition whose truthfulness is a prerequisite for continuing a drug administration."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000127 "continuing condition"@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000127 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000127 "continuing drug administration condition"@en)
SubClassOf(obo:PDRO_0000127 obo:PDRO_0000129)

# Class: obo:PDRO_0000128 (starting drug administration condition)

AnnotationAssertion(obo:IAO_0000112 obo:PDRO_0000128 "'if bronchitis'
'if January 1 2016'"@en)
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000128 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000128 "A condition whose truthfulness is a prerequisite for starting a drug administration."@en)
AnnotationAssertion(obo:IAO_0000118 obo:PDRO_0000128 "starting condition"@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000128 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000128 "starting drug administration condition"@en)
SubClassOf(obo:PDRO_0000128 obo:PDRO_0000129)

# Class: obo:PDRO_0000129 (condition)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0000129 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0000129 "An information content entity that describes some relationships between some entities and whose truthfullness is a prerequisite for something"@en)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0000129 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0000129 "condition"@en)
SubClassOf(obo:PDRO_0000129 obo:IAO_0000030)

# Class: obo:PDRO_000019 (dose administration specification)

AnnotationAssertion(obo:IAO_0000111 obo:PDRO_000019 "drug dose administration specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:PDRO_000019 "\"1 tablet by mouth\"
\"Mix 4g powder with 1 cup of water and drink slowly\"
\"mix 450mg in 250mL of D5% solution, then administrate IV over 12 hours\"
\"nebulize 2.5mg and administrate inhaled over 5-15 minutes\"")
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_000019 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_000019 "An action specification that describes a dose administration."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_000019 "Une spécification d'action qui décrit une administration de dose médicamenteuse."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_000019 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_000019 "dose administration specification"@en)
AnnotationAssertion(rdfs:label obo:PDRO_000019 "spécification d'administration de dose"@fr)
SubClassOf(obo:PDRO_000019 obo:IAO_0000007)
SubClassOf(obo:PDRO_000019 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000123))

# Class: obo:PDRO_0010010 (health care objective specification)

AnnotationAssertion(obo:IAO_0000112 obo:PDRO_0010010 "\"The alleviation of a symptomatic cough\"
\"The prevention of malaria\"
\"The diagnosis of what ails John Smith\"")
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0010010 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0010010 "An objective specification that specifies the objective of a health care process."@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0010010 "Une spécification d'objectif d'un processus de soin ou d'une de ses parties."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0010010 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0010010 "health care objective specification"@en)
AnnotationAssertion(rdfs:label obo:PDRO_0010010 "spécification d'objectif de santé"@fr)
SubClassOf(obo:PDRO_0010010 obo:IAO_0000005)

# Class: obo:PDRO_0010018 (spécification d'objectif de traitement)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0010018 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0010018 "Une spécification d'objectif de santé de traitement."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0010018 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0010018 "spécification d'objectif de traitement"@fr)
AnnotationAssertion(rdfs:label obo:PDRO_0010018 "treatment objective specification")
SubClassOf(obo:PDRO_0010018 obo:PDRO_0010010)

# Class: obo:PDRO_0010022 (drug administration specification)

AnnotationAssertion(obo:IAO_0000111 obo:PDRO_0010022 "prescribed drug administration specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:PDRO_0010022 "\"take Aspirin 81 mg oral tablet, 1 tablet once daily by mouth, start today, Dispense 30 tabs every month for one year\"")
AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0010022 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0010022 "A normative specification that specifies how to perform a drug administration.

It specifies:
- The drug product
- The posology
- The condition(s) for starting"@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0010022 "Une entité informationnelle directive indiquant l'administration d'un médicament.

Elle indique :
- le médicament.
- le(s) condition(s) de distribution du médicament.
- la quantité de médicament à distribuer.
- le(s) condition(s) de début d'administration du médicament.
- le(s) condition(s) de continuation d'administration du médicament
- le(s) condition(s) d'administration d'une dose
- comment administrer une dose, ce qui inclut:
-- Toute préparation du médicament requise avant l'administration.
-- La dose à administrer.
-- Le mode d'administration
-- Toute particularité dans la manière d'administrer le médicament."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0010022 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0010022 "drug administration specification"@en)
SubClassOf(obo:PDRO_0010022 obo:PDRO_0000106)
SubClassOf(obo:PDRO_0010022 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_000006))
SubClassOf(obo:PDRO_0010022 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000103))
SubClassOf(obo:PDRO_0010022 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PDRO_0000128))

# Class: obo:PDRO_0040002 (nom d'ingrédient actif)

AnnotationAssertion(obo:IAO_0000114 obo:PDRO_0040002 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0040002 "A textual entity that allows the identification of an active ingredient"@en)
AnnotationAssertion(obo:IAO_0000115 obo:PDRO_0040002 "Une entité textuelle qui permet l'identification d'un ingrédient actif."@fr)
AnnotationAssertion(obo:IAO_0000412 obo:PDRO_0040002 obo:pdro.owl)
AnnotationAssertion(rdfs:label obo:PDRO_0040002 "active ingredient name")
AnnotationAssertion(rdfs:label obo:PDRO_0040002 "nom d'ingrédient actif"@fr)
SubClassOf(obo:PDRO_0040002 obo:IAO_0000300)
SubClassOf(obo:PDRO_0040002 ObjectSomeValuesFrom(obo:IAO_0000219 obo:DRON_00000028))

# Class: obo:PR_000000001 (protein)

AnnotationAssertion(obo:IAO_0000111 obo:PR_000000001 "protein"^^xsd:string)
AnnotationAssertion(obo:IAO_0000112 obo:PR_000000001 "antithrombin III is a protein"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:PR_000000001 "An amino acid chain that is produced de novo by ribosome-mediated translation of a genetically-encoded mRNA."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000000001 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000000001 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000000001 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000000001 "PR:000000001"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000000001 "Proteins descended from a common ancestor can be classified into families and superfamilies composed of products of evolutionarily-related genes. The domain architecture of a protein is described by the order of its constituent domains. Proteins with the same domains in the same order are defined as homeomorphic [PRO:WCB]."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000000001 "protein"^^xsd:string)
SubClassOf(obo:PR_000000001 obo:CHEBI_16670)
SubClassOf(obo:PR_000000001 obo:CHEBI_23367)
SubClassOf(obo:PR_000000001 obo:PR_000018263)

# Class: obo:PR_000001006 (receptor-type tyrosine-protein phosphatase C)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000001006 "A protein that is a translation product of the human PTPRC gene or a 1:1 ortholog thereof. It is composed of an extracellular domain, a single transmembrane segment and two tandem intracytoplasmic protein-tyrosine phosphatase domains. Contains 1 to 3 copies of the Fibronectin type III domain (Pfam:PF00041) followed by two copies of the Protein-tyrosine phosphatase (Pfam:PF00102) domain. Receptor-type tyrosine-protein phosphatase C (CD45) regulates signal transduction and lymphocyte activation by specific association with receptor molecules on T and B cells. Multiple isoforms of CD45 (180-235 kDa) can be generated asa result of alternative splicing of three variable exons 4(A), 5(B) and 6(C), encoding sequences at the N-terminal extracellular domain of the molecule."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000001006 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:PR_000001006 "T200"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:PR_000001006 "PIRSF:PIRSF002004"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "CD45"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "L-CA"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "PTPRC"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "leukocyte common antigen"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "ly-5"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001006 "lymphocyte antigen 5"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000001006 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000001006 "PR:000001006"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000001006 "Category=gene. Requested by=CL."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000001006 "receptor-type tyrosine-protein phosphatase C"^^xsd:string)
SubClassOf(obo:PR_000001006 obo:PR_000000001)

# Class: obo:PR_000001962 (tumor necrosis factor receptor superfamily member 6)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000001962 "A protein that is a translation product of the human FAS gene or a 1:1 ortholog thereof."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000001962 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasAlternativeId obo:PR_000001962 "PR:000002232"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:PR_000001962 "PIRSF:PIRSF038809"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001962 "CD95"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001962 "FAS"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001962 "FASLG receptor"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001962 "apo-1 antigen"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000001962 "apoptosis-mediating surface antigen FAS"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000001962 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PR_000001962 "APT1"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PR_000001962 "FAS1"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:PR_000001962 "TNFRSF6"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000001962 "PR:000001962"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000001962 "Category=gene."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000001962 "tumor necrosis factor receptor superfamily member 6"^^xsd:string)
SubClassOf(obo:PR_000001962 obo:PR_000000001)

# Class: obo:PR_000018263 (amino acid chain)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000018263 "An organic amino compound that is a polymer of amino acid chain components (unmodified amino-acid residues and/or modified amino-acid residues) linked by peptide bonds or derivatives of such bonds."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000018263 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PR_000018263 "peptide"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PR_000018263 "polypeptide"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000018263 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000018263 "PR:000018263"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000018263 "Category=external."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000018263 "amino acid chain"^^xsd:string)
SubClassOf(obo:PR_000018263 obo:CHEBI_50047)
SubClassOf(obo:PR_000018263 ObjectSomeValuesFrom(obo:BFO_0000051 obo:PR_000036907))

# Class: obo:PR_000025513 (modified amino-acid residue)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000025513 "An organic group that results from covalent modification or chemical alteration to the side chain or backbone atoms of an amino acid residue or derivative thereof, where such alteration maintains the integrity of the amino acid chain containing the residue."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000025513 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000025513 "modified amino acid chain residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PR_000025513 "modified protein residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000025513 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000025513 "PR:000025513"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000025513 "Category=external. Note: This entity is distinct from MOD:00000 \"protein modification\" in that the latter includes proteolytic cleavages. [PRO:DAN, PRO:JSG]"^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000025513 "modified amino-acid residue"^^xsd:string)
EquivalentClasses(obo:PR_000025513 ObjectUnionOf(obo:PR_000036198 obo:PR_000036199))
SubClassOf(obo:PR_000025513 obo:CHEBI_33247)

# Class: obo:PR_000026291 (unmodified amino-acid residue)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000026291 "An amino-acid residue that has not been covalently modified by chemical alteration to the side chain or backbone atoms."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000026291 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:PR_000026291 "unmodified amino acid chain residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:PR_000026291 "unmodified protein residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000026291 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000026291 "PR:000026291"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000026291 "Category=external."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000026291 "unmodified amino-acid residue"^^xsd:string)
SubClassOf(obo:PR_000026291 obo:CHEBI_33708)

# Class: obo:PR_000036198 (peptidyl modified amino-acid residue)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000036198 "An amino-acid residue that results from covalent modification or chemical alteration to the side chain or backbone atoms such that the peptide bonds remain."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000036198 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000036198 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000036198 "PR:000036198"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000036198 "Category=external."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000036198 "peptidyl modified amino-acid residue"^^xsd:string)
SubClassOf(obo:PR_000036198 obo:CHEBI_33708)

# Class: obo:PR_000036199 (non-peptidyl modified amino-acid residue)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000036199 "An organic group that results from covalent modification or chemical alteration to the backbone atoms of amino acid residues so that their peptide bond is altered but the C1 and alpha-N bond is uncleaved."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000036199 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000036199 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000036199 "PR:000036199"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000036199 "Category=external."^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000036199 "non-peptidyl modified amino-acid residue"^^xsd:string)
SubClassOf(obo:PR_000036199 obo:CHEBI_33247)
SubClassOf(obo:PR_000036199 ObjectSomeValuesFrom(obo:RO_0001000 obo:CHEBI_33708))

# Class: obo:PR_000036907 (amino acid chain component)

AnnotationAssertion(obo:IAO_0000115 obo:PR_000036907 "A fiat object part that is either a modified amino-acid residue or an unmodified amino-acid residue."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:PR_000036907 obo:pr.owl)
AnnotationAssertion(oboInOwl:hasBroadSynonym obo:PR_000036907 "amino-acid residue"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:PR_000036907 "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:PR_000036907 "PR:000036907"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:PR_000036907 "Category=external. Note: This entity is distinct from CHEBI: \"amino-acid residue\" in that it includes residues that are technically not part of that class. [PRO:JSG]"^^xsd:string)
AnnotationAssertion(rdfs:label obo:PR_000036907 "amino acid chain component"^^xsd:string)
EquivalentClasses(obo:PR_000036907 ObjectUnionOf(obo:PR_000025513 obo:PR_000026291))
SubClassOf(obo:PR_000036907 obo:BFO_0000024)

# Class: obo:SO_0000001 (region)

AnnotationAssertion(obo:IAO_0000111 obo:SO_0000001 "region"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:SO_0000001 "A sequence_feature with an extent greater than zero. A nucleotide region is composed of bases and a polypeptide region is composed of amino acids."^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:SO_0000001 "primary structure of sequence macromolecule"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:SO_0000001 "sequence"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:SO_0000001 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:SO_0000001 obo:so.owl)
AnnotationAssertion(rdfs:label obo:SO_0000001 "region"^^xsd:string)
SubClassOf(obo:SO_0000001 obo:BFO_0000031)

# Class: obo:SO_0000110 (sequence feature)

AnnotationAssertion(obo:IAO_0000115 obo:SO_0000110 "Any extent of continuous biological sequence.")
AnnotationAssertion(obo:IAO_0000116 obo:SO_0000110 "GENO defines three levels of sequence-related artifacts, which are distinguished by their identity criteria.
1. 'Biological sequence' identity is dependent only on the ordering of units that comprise the sequence.
2. 'Sequence feature' identity is dependent on its sequence and the genomic position if the sequence (aligns with definition of 'sequence feature' in the Sequence Ontology).
3. 'Qualified sequence feature' identity is additionally dependent on some aspect of the physical context of the genetic material bearing the feature, extrinsic to its sequence and its genomic position.  For example, its being targeted by gene knockdown reagents, its being transgenically expressed in a foreign cell from a recombinant expression construct, its having been epigenetically modified in a way that alters its expression level or pattern, or its being located in a specific cellular or anatomical location.")
AnnotationAssertion(obo:IAO_0000412 obo:SO_0000110 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:SO_0000110 "A sequence feature is an extent of biological sequence. An instance of a sequence feature is identified by both its sequence (inherent ordering of units representing nucleic acid or animo acid monomers) and its position (start and stop coordinates based on alignment with some reference feature). By contrast, 'biological sequences' are identified and distinguished only by their inehrent sequence, and not their position.  Accordingly, the 'ATG' start codon in the coding DNA sequence of the human AKT gene is the same 'sequence' as the 'ATG' start codon in the human SHH gene, but these represent two distinct 'sequence features' in virtue of their different positions in the genome.")
AnnotationAssertion(rdfs:label obo:SO_0000110 "sequence feature")
SubClassOf(obo:SO_0000110 obo:GENO_0000701)
SubClassOf(obo:SO_0000110 ObjectSomeValuesFrom(faldo:location ObjectUnionOf(faldo:Position faldo:Region)))
SubClassOf(obo:SO_0000110 ObjectSomeValuesFrom(obo:GENO_0000239 obo:GENO_0000702))

# Class: obo:SO_0001026 (genome)

AnnotationAssertion(obo:IAO_0000115 obo:SO_0001026 "A collection of sequence features (typically a collection of chromosomes) that covers the sum genetic material within a cell or virion (where 'genetic material' refers to any nucleic acid that is part of a cell or virion and has been inherited from an ancestor cell or virion, and/or can be replicated and inherited by its progeny)")
AnnotationAssertion(obo:IAO_0000116 obo:SO_0001026 "Genotype vs Genome in GENO: An (intrinsic) genotype is an information artifact representing an indirect syntax for specifying a genome sequence.  This syntax has reference and variant components -  a 'referrence genome' and 'genomic variation complement' - that must be operated on to resolve a specifie genome sequence.  Specifically, the genome sequence is resolved by substituting all sequences specified by the 'genomic variation complement' for the corresponding sequences in the 'reference genome'.  So, while the total sequence content represented in a genotype may be greater than that in a genome, the intended resolution of these sequences is to arrive at a single genome sequence.")
AnnotationAssertion(obo:IAO_0000118 obo:SO_0001026 "'genome sequence'")
AnnotationAssertion(obo:IAO_0000412 obo:SO_0001026 obo:geno.owl)
AnnotationAssertion(rdfs:comment obo:SO_0001026 "A genome is considered the complement of all heritable sequence features in a given cell or organism (chromosomal or extrachromosomal). This is typically a collection of chromosomes, but in some organisms (e.g. bacteria) it may be a single chromosomal entity. For this reason 'genome' classifies under 'sequence feature complement' rather than 'sequence feature collection'.")
AnnotationAssertion(rdfs:label obo:SO_0001026 "genome")
SubClassOf(obo:SO_0001026 obo:GENO_0000660)
SubClassOf(obo:SO_0001026 ObjectSomeValuesFrom(obo:RO_0002162 obo:OBI_0100026))

# Class: obo:SO_0002054 (loss_of_function_variant)

AnnotationAssertion(obo:IAO_0000115 obo:SO_0002054 "A sequence variant whereby the gene product has diminished or abolished function."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:SO_0002054 obo:so.owl)
AnnotationAssertion(oboInOwl:created_by obo:SO_0002054 "kareneilbeck"^^xsd:string)
AnnotationAssertion(oboInOwl:creation_date obo:SO_0002054 "2015-05-14T11:21:29Z"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:SO_0002054 "loss of function variant"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:SO_0002054 "sequence"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:SO_0002054 "SO:0002054"^^xsd:string)
AnnotationAssertion(rdfs:label obo:SO_0002054 "loss_of_function_variant"^^xsd:string)
SubClassOf(obo:SO_0002054 obo:GENO_0000481)

# Class: obo:UBERON_0000105 (life cycle stage)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000105 "life cycle stage"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000105 "A spatiotemporal region encompassing some part of the life cycle of an organism."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000105 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000105 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000105 "life cycle stage"^^xsd:string)
SubClassOf(obo:UBERON_0000105 obo:GO_0008150)

# Class: obo:UBERON_0000178 (blood)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000178 "blood"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000178 "A fluid that is composed of blood plasma and erythrocytes."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000178 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000178 "blood"^^xsd:string)
SubClassOf(obo:UBERON_0000178 obo:UBERON_0000463)

# Class: obo:UBERON_0000463 (organism substance)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000463 "organism substance"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000463 "Material anatomical entity in a gaseous, liquid, semisolid or solid state; produced by anatomical structures or derived from inhaled and ingested substances that have been modified by anatomical structures as they pass through the body."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000463 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000463 "organism substance"^^xsd:string)
SubClassOf(obo:UBERON_0000463 obo:UBERON_0000465)

# Class: obo:UBERON_0000465 (material anatomical entity)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000465 "material anatomical entity"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000465 "Anatomical entity that has mass."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000465 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000465 "material anatomical entity"^^xsd:string)
SubClassOf(obo:UBERON_0000465 obo:BFO_0000040)

# Class: obo:UBERON_0000477 (anatomical cluster)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000477 "anatomical cluster"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000477 "Anatomical group that has its parts adjacent to one another."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000477 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000477 "anatomical cluster"^^xsd:string)
SubClassOf(obo:UBERON_0000477 obo:BFO_0000040)

# Class: obo:UBERON_0000479 (tissue)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0000479 "tissue"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0000479 "Multicellular anatomical structure that consists of many cells of one or a few types, arranged in an extracellular matrix such that their long-range organisation is at least partly a repetition of their short-range organisation."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0000479 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0000479 "tissue"^^xsd:string)
SubClassOf(obo:UBERON_0000479 obo:UBERON_0000465)

# Class: obo:UBERON_0001013 (adipose tissue)

AnnotationAssertion(obo:IAO_0000111 obo:UBERON_0001013 "adipose tissue"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0001013 "Portion of connective tissue composed of adipocytes enmeshed in areolar tissue"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0001013 obo:uberon.owl)
AnnotationAssertion(rdfs:label obo:UBERON_0001013 "adipose tissue"^^xsd:string)
SubClassOf(obo:UBERON_0001013 obo:UBERON_0000479)
SubClassOf(obo:UBERON_0001013 ObjectSomeValuesFrom(obo:BFO_0000050 obo:OBI_0100026))

# Class: obo:UBERON_0007221 (neonate stage)

AnnotationAssertion(obo:IAO_0000115 obo:UBERON_0007221 "Of or pertaining to the period of time immediately following birth, or to the newborn."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:UBERON_0007221 "consider splitting infant/newborn"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UBERON_0007221 obo:uberon.owl)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 <http://en.wikipedia.org/wiki/Infant>)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 <http://neurolex.org/wiki/Category:Infant_organism>)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 <http://neurolex.org/wiki/Category:Newborn_organism>)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "BTO:0001762"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "EV:0300037"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "HsapDv:0000082"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "MmusDv:0000096"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "NIF_Organism:birnlex_695"^^xsd:string)
AnnotationAssertion(oboInOwl:hasDbXref obo:UBERON_0007221 "OGES:000025"^^xsd:string)
AnnotationAssertion(oboInOwl:hasExactSynonym obo:UBERON_0007221 "neonatal stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "fledgling stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "hatchling"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "hatchling stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "infant stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "nestling stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "pouch stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "puggle"^^xsd:string)
AnnotationAssertion(oboInOwl:hasNarrowSynonym obo:UBERON_0007221 "puggle stage"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBONamespace obo:UBERON_0007221 "uberon"^^xsd:string)
AnnotationAssertion(oboInOwl:hasRelatedSynonym obo:UBERON_0007221 "newborn stage"^^xsd:string)
AnnotationAssertion(oboInOwl:id obo:UBERON_0007221 "UBERON:0007221"^^xsd:string)
AnnotationAssertion(rdfs:label obo:UBERON_0007221 "neonate stage"^^xsd:string)
SubClassOf(obo:UBERON_0007221 obo:UBERON_0000105)

# Class: obo:UO_0000001 (length unit)

AnnotationAssertion(obo:IAO_0000111 obo:UO_0000001 "length unit"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UO_0000001 "A unit which is a standard measure of the distance between two points."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000001 obo:uo.owl)
AnnotationAssertion(rdfs:label obo:UO_0000001 "length unit"^^xsd:string)
SubClassOf(obo:UO_0000001 obo:IAO_0000003)

# Class: obo:UO_0000002 (mass unit)

AnnotationAssertion(obo:IAO_0000111 obo:UO_0000002 "mass unit"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UO_0000002 "A unit which is a standard measure of the amount of matter/energy of a physical object."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000002 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000002 obo:uo.owl)
AnnotationAssertion(rdfs:label obo:UO_0000002 "mass unit"^^xsd:string)
SubClassOf(obo:UO_0000002 obo:IAO_0000003)

# Class: obo:UO_0000003 (time unit)

AnnotationAssertion(obo:IAO_0000111 obo:UO_0000003 "time unit"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UO_0000003 "A unit which is a standard measure of the dimension in which events occur in sequence."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000003 obo:uo.owl)
AnnotationAssertion(rdfs:label obo:UO_0000003 "time unit"^^xsd:string)
SubClassOf(obo:UO_0000003 obo:IAO_0000003)

# Class: obo:UO_0000051 (concentration unit)

AnnotationAssertion(obo:IAO_0000111 obo:UO_0000051 "concentration unit"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UO_0000051 "A unit which represents a standard measurement of how much of a given substance there is mixed with another substance."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000051 obo:uo.owl)
AnnotationAssertion(rdfs:label obo:UO_0000051 "concentration unit"^^xsd:string)
SubClassOf(obo:UO_0000051 obo:IAO_0000003)

# Class: obo:UO_0000095 (volume unit)

AnnotationAssertion(obo:IAO_0000111 obo:UO_0000095 "volume unit"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 obo:UO_0000095 "A unit which is a standard measure of the amount of space occupied by any substance, whether solid, liquid, or gas."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 obo:UO_0000095 obo:uo.owl)
AnnotationAssertion(rdfs:label obo:UO_0000095 "volume unit"^^xsd:string)
SubClassOf(obo:UO_0000095 obo:IAO_0000003)

# Class: ontologies:TURBO_0000502 (biobank consenter)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000502 "BiBaCo")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000502 "biobank_consenter")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000502 "biobank consenter")
EquivalentClasses(ontologies:TURBO_0000502 ObjectIntersectionOf(obo:NCBITaxon_9606 ObjectSomeValuesFrom(obo:RO_0000087 ObjectIntersectionOf(obo:ICO_0000086 ObjectSomeValuesFrom(obo:BFO_0000054 ObjectIntersectionOf(obo:OBI_0000810 ObjectSomeValuesFrom(obo:RO_0000057 obo:OMIABIS_0000010)))))))
SubClassOf(ontologies:TURBO_0000502 obo:NCBITaxon_9606)

# Class: ontologies:TURBO_0000503 (biobank consenter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000503 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000503 "2018-01-16T21:06:07Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000503 "biobank consenter CRID")
EquivalentClasses(ontologies:TURBO_0000503 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 ontologies:TURBO_0000504) ObjectSomeValuesFrom(obo:BFO_0000051 ontologies:TURBO_0000505) ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000502)))
SubClassOf(ontologies:TURBO_0000503 obo:IAO_0000578)
SubClassOf(ontologies:TURBO_0000503 ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000502))

# Class: ontologies:TURBO_0000504 (biobank consenter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000504 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000504 "2018-01-16T21:08:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000504 "biobank consenter symbol")
SubClassOf(ontologies:TURBO_0000504 obo:IAO_0000577)

# Class: ontologies:TURBO_0000505 (biobank consenter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000505 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000505 "2018-01-16T21:16:34Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000505 "biobank consenter registry denoter")
EquivalentClasses(ontologies:TURBO_0000505 ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000506))
SubClassOf(ontologies:TURBO_0000505 obo:IAO_0000027)

# Class: ontologies:TURBO_0000506 (biobank consenter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000506 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000506 "2018-01-16T21:15:30Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000506 "biobank consenter identifier registry")
SubClassOf(ontologies:TURBO_0000506 obo:IAO_0000579)

# Class: ontologies:TURBO_0000508 (health care encounter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000508 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000508 "2018-01-16T21:39:29Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000508 "health care encounter CRID")
EquivalentClasses(ontologies:TURBO_0000508 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 ontologies:TURBO_0000509) ObjectSomeValuesFrom(obo:BFO_0000051 ontologies:TURBO_0000510) ObjectSomeValuesFrom(obo:IAO_0000219 obo:OGMS_0000097)))
SubClassOf(ontologies:TURBO_0000508 obo:IAO_0000578)

# Class: ontologies:TURBO_0000509 (health care encounter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000509 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000509 "2018-01-16T21:45:42Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000509 "health care encounter symbol")
SubClassOf(ontologies:TURBO_0000509 obo:IAO_0000577)

# Class: ontologies:TURBO_0000510 (health care encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000510 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000510 "2018-01-16T21:42:30Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000510 "health care encounter registry denoter")
SubClassOf(ontologies:TURBO_0000510 obo:IAO_0000027)

# Class: ontologies:TURBO_0000511 (health care encounter start)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000511 "A process boundary that starts a health care encounter")
AnnotationAssertion(dc:creator ontologies:TURBO_0000511 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000511 "2018-01-18T20:54:26Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000511 "HealthcareEncStart")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000511 "health care encounter start")
EquivalentClasses(ontologies:TURBO_0000511 ObjectSomeValuesFrom(obo:RO_0002223 obo:OGMS_0000097))
SubClassOf(ontologies:TURBO_0000511 obo:BFO_0000035)

# Class: ontologies:TURBO_0000512 (health care encounter start date)

AnnotationAssertion(dc:creator ontologies:TURBO_0000512 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000512 "2018-01-18T21:00:18Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000512 "health care encounter start date")
EquivalentClasses(ontologies:TURBO_0000512 ObjectIntersectionOf(ontologies:TURBO_0000530 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectSomeValuesFrom(obo:RO_0002223 obo:OGMS_0000097))))
SubClassOf(ontologies:TURBO_0000512 ontologies:TURBO_0000530)

# Class: ontologies:TURBO_0000513 (health care encounter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000513 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000513 "2018-01-16T21:44:09Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000513 "health care encounter identifier registry")
SubClassOf(ontologies:TURBO_0000513 obo:IAO_0000579)

# Class: ontologies:TURBO_0000522 (R2R instantiation)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000522 "a data transformation in which data are consumed from tabular or relational sources and written back out in a semantic/RDF format")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0000522 "Mark A. Miller")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000522 "R2RInstantiation")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000522 "underdefined")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000522 "R2R instantiation")
AnnotationAssertion(rdfs:seeAlso ontologies:TURBO_0000522 "https://www.w3.org/TR/r2rml/")
SubClassOf(ontologies:TURBO_0000522 obo:OBI_0200000)

# Class: ontologies:TURBO_0000527 (biobank encounter)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000527 "a planned process in which the following two kinds of people participate:  a representative from a biobank and someone with a participant under investigation role or a donor role or a consenter role

The output of this process could be demographic or vital statistics data items, like height or weight; case forms, consent documetns, etc.")
AnnotationAssertion(dc:creator ontologies:TURBO_0000527 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000527 "2017-11-09T14:33:02Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000527 "BBEncounter")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000527 "biobank encounter")
SubClassOf(ontologies:TURBO_0000527 obo:OBI_0000011)
SubClassOf(ontologies:TURBO_0000527 ObjectSomeValuesFrom(obo:RO_0000057 obo:OMIABIS_0000010))
SubClassOf(ontologies:TURBO_0000527 ObjectSomeValuesFrom(obo:RO_0000057 ontologies:TURBO_0000502))

# Class: ontologies:TURBO_0000530 (process start time measurement)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0000530 "process start time measurement")
AnnotationAssertion(obo:IAO_0000112 ontologies:TURBO_0000530 "I began collecting stamps at noon, EST on January 1st, 1980.  This is the start time measurement of my stamp collecting process.")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000530 "A time measurement datum that is the measure of the time when some process started")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0000530 "Person: Mark A. Miller, based on OBI_0001619 from Chris Stoeckert and Jie Zheng"@en)
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0000530 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0000530 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0000530 "2017-04-12T14:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000530 "process start time measurement")
SubClassOf(ontologies:TURBO_0000530 obo:IAO_0000416)
SubClassOf(ontologies:TURBO_0000530 ObjectSomeValuesFrom(obo:IAO_0000136 ObjectIntersectionOf(obo:BFO_0000035 ObjectSomeValuesFrom(obo:RO_0002223 obo:BFO_0000015))))

# Class: ontologies:TURBO_0000531 (biobank encounter start)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000531 "A process boundary that starts a biobank encounter")
AnnotationAssertion(dc:creator ontologies:TURBO_0000531 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000531 "2018-01-18T21:11:04Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000531 "BbEncStart")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000531 "biobank encounter start")
EquivalentClasses(ontologies:TURBO_0000531 ObjectSomeValuesFrom(obo:RO_0002223 ontologies:TURBO_0000527))
SubClassOf(ontologies:TURBO_0000531 obo:BFO_0000035)

# Class: ontologies:TURBO_0000532 (biobank encounter start date)

AnnotationAssertion(dc:creator ontologies:TURBO_0000532 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000532 "2018-01-18T21:01:45Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000532 "biobank encounter start date")
SubClassOf(ontologies:TURBO_0000532 ontologies:TURBO_0000530)

# Class: ontologies:TURBO_0000533 (biobank encounter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000533 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000533 "2018-01-18T21:46:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000533 "biobank encounter CRID")
EquivalentClasses(ontologies:TURBO_0000533 ObjectIntersectionOf(ObjectSomeValuesFrom(obo:BFO_0000051 ontologies:TURBO_0000534) ObjectSomeValuesFrom(obo:BFO_0000051 ObjectIntersectionOf(ontologies:TURBO_0000535 ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000543)))))
SubClassOf(ontologies:TURBO_0000533 obo:IAO_0000578)
SubClassOf(ontologies:TURBO_0000533 ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000527))

# Class: ontologies:TURBO_0000534 (biobank encounter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000534 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000534 "2018-01-18T21:47:32Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000534 "biobank encounter symbol")
SubClassOf(ontologies:TURBO_0000534 obo:IAO_0000577)

# Class: ontologies:TURBO_0000535 (biobank encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000535 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000535 "2018-01-18T21:48:11Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000535 "biobank encounter registry denoter")
EquivalentClasses(ontologies:TURBO_0000535 ObjectSomeValuesFrom(obo:IAO_0000219 ontologies:TURBO_0000543))
SubClassOf(ontologies:TURBO_0000535 obo:IAO_0000027)

# Class: ontologies:TURBO_0000543 (biobank encounter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000543 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000543 "2018-01-18T21:49:41Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000543 "biobank encounter identifier registry")
SubClassOf(ontologies:TURBO_0000543 obo:IAO_0000579)

# Class: ontologies:TURBO_0000553 (diagnosis CRID)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000553 "A centrally registered identifier that is about some diagnosis, billing code, etc.  Consists of two parts:  a registry denoter string that points to a particular disease coding registry, and a symbol string like \"J123.5\" that points to a particular disease within that registry.")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000553 "DiagCrid")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000553 "If the turbo shortcut expansion method comes across either an isolated diagnosis code shortcut or an isolated diagnosis code registry URI shortcut, an exception should be thrown (because incomplete diagnosis CRIDs are worse than absent diagnosis CRIDs?)")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000553 "diagnosis CRID")
SubClassOf(ontologies:TURBO_0000553 obo:IAO_0000578)

# Class: ontologies:TURBO_0000554 (diagnosis code symbol)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000554 "EncounterDiagCodeSymbol")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000554 "might be a billing or diagnosis code... something like an ICD9 or ICD10 code")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000554 "diagnosis code symbol")
SubClassOf(ontologies:TURBO_0000554 obo:IAO_0000577)

# Class: ontologies:TURBO_0000555 (diagnosis code registry denoter)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0000555 "A proper name string that denotes a diagnosis code/billing code registry such as ICD-9, having an URI like <http://purl.obolibrary.org/obo/NCIT_C71890>")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000555 "DiagCodeRegistryID")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000555 "diagnosis code registry denoter")
SubClassOf(ontologies:TURBO_0000555 obo:IAO_0000027)

# Class: ontologies:TURBO_0000556 (diagnosis code registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000556 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000556 "2018-01-25T19:39:55Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000556 "diagnosis code registry")
SubClassOf(ontologies:TURBO_0000556 obo:IAO_0000579)

# Class: ontologies:TURBO_0000561 (prescription CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000561 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000561 "2018-02-27T21:30:44Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000561 "prescription CRID")
SubClassOf(ontologies:TURBO_0000561 obo:IAO_0000578)

# Class: ontologies:TURBO_0000562 (prescription CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000562 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000562 "2018-02-27T21:31:30Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000562 "prescription CRID symbol")
SubClassOf(ontologies:TURBO_0000562 obo:IAO_0000577)

# Class: ontologies:TURBO_0000563 (prescription registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000563 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000563 "2018-02-27T21:32:06Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000563 "prescription registry denoter")
SubClassOf(ontologies:TURBO_0000563 obo:IAO_0000027)

# Class: ontologies:TURBO_0000564 (prescription registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000564 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000564 "2018-02-27T21:37:11Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000564 "prescription registry")
SubClassOf(ontologies:TURBO_0000564 obo:IAO_0000579)

# Class: ontologies:TURBO_0000565 (genotype identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000565 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000565 "2018-05-16T20:27:10Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000565 "genotype identifier registry")
SubClassOf(ontologies:TURBO_0000565 obo:IAO_0000579)

# Class: ontologies:TURBO_0000566 (genotype CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000566 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000566 "2018-05-16T20:54:15Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000566 "genotype CRID")
SubClassOf(ontologies:TURBO_0000566 obo:IAO_0000578)

# Class: ontologies:TURBO_0000567 (genotype identifier registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000567 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000567 "2018-05-16T20:55:00Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000567 "genotype identifier registry denoter")
SubClassOf(ontologies:TURBO_0000567 obo:IAO_0000027)

# Class: ontologies:TURBO_0000568 (genotype CRID symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000568 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000568 "2018-05-16T20:56:01Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000568 "genotype CRID symbol")
SubClassOf(ontologies:TURBO_0000568 obo:IAO_0000577)

# Class: ontologies:TURBO_0000571 (zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000571 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000571 "2018-04-09T19:30:07Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000571 "zygosity value specification")
SubClassOf(ontologies:TURBO_0000571 obo:OBI_0001930)

# Class: ontologies:TURBO_0000572 (loss of function zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000572 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000572 "2018-04-09T19:31:31Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000572 "loss of function zygosity value specification")
SubClassOf(ontologies:TURBO_0000572 ontologies:TURBO_0000571)

# Class: ontologies:TURBO_0000902 (retired placeholder for biobank consenter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000902 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000902 "2018-01-16T21:21:52Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000902 ontologies:TURBO_0000502)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000902 "retired placeholder for biobank consenter")
SubClassOf(ontologies:TURBO_0000902 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000903 (retired placeholder for biobank consenter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000903 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000903 "2018-01-16T21:27:36Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000903 ontologies:TURBO_0000503)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000903 "retired placeholder for biobank consenter CRID")
SubClassOf(ontologies:TURBO_0000903 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000904 (retired placeholder for biobank consenter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000904 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000904 "2018-01-16T21:28:21Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000904 ontologies:TURBO_0000504)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000904 "retired placeholder for biobank consenter symbol")
SubClassOf(ontologies:TURBO_0000904 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000905 (retired placeholder for biobank consenter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000905 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000905 "2018-01-16T21:33:51Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000905 ontologies:TURBO_0000505)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000905 "retired placeholder for biobank consenter registry denoter")
SubClassOf(ontologies:TURBO_0000905 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000906 (retired placeholder for biobank consenter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000906 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000906 "2018-01-25T16:47:49Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000906 ontologies:TURBO_0000506)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000906 "retired placeholder for biobank consenter identifier registry")
SubClassOf(ontologies:TURBO_0000906 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000907 (retired placeholder for health care encounter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000907 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000907 "2018-01-16T21:37:32Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000907 obo:OGMS_0000097)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000907 "RetiredHealthcareEncPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000907 "retired placeholder for health care encounter")
SubClassOf(ontologies:TURBO_0000907 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000908 (retired placeholder for health care encounter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000908 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000908 "2018-01-16T21:53:16Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000908 ontologies:TURBO_0000508)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000908 "retired placeholder for health care encounter CRID")
SubClassOf(ontologies:TURBO_0000908 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000909 (retired placeholder for health care encounter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000909 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000909 "2018-01-16T21:56:01Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000909 ontologies:TURBO_0000509)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000909 "retired placeholder for health care encounter symbol")
SubClassOf(ontologies:TURBO_0000909 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000910 (retired placeholder for health care encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000910 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000910 "2018-01-16T22:09:18Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000910 "http://transformunify.org/ontologies/TURBO_0000510")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000910 "retired placeholder for health care encounter registry denoter")
SubClassOf(ontologies:TURBO_0000910 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000911 (retired placeholder for health care encounter start)

AnnotationAssertion(dc:creator ontologies:TURBO_0000911 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000911 "2018-01-18T20:57:47Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000911 "http://transformunify.org/ontologies/TURBO_0000511")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000911 "RetiredHCEncStart")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000911 "RetiredHealthcareEncStart")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000911 "retired placeholder for health care encounter start")
SubClassOf(ontologies:TURBO_0000911 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000912 (retired placeholder for health care encounter start date)

AnnotationAssertion(dc:creator ontologies:TURBO_0000912 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000912 "2018-01-18T21:02:58Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000912 ontologies:TURBO_0000512)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000912 "RetiredEncounterDatePlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000912 "retired placeholder for health care encounter start date")
SubClassOf(ontologies:TURBO_0000912 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000913 (retired placeholder for health care encounter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000913 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000913 "2018-01-25T16:54:15Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000913 ontologies:TURBO_0000513)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000913 "retired placeholder for health care encounter identifier registry")
SubClassOf(ontologies:TURBO_0000913 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000927 (retired placeholder for biobank encounter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000927 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000927 "2018-01-25T17:18:08Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000927 ontologies:TURBO_0000527)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000927 "RetiredBiobankEncPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000927 "retired placeholder for biobank encounter")
SubClassOf(ontologies:TURBO_0000927 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000931 (retired placeholder for biobank encounter start)

AnnotationAssertion(dc:creator ontologies:TURBO_0000931 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000931 "2018-01-18T21:12:32Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000931 ontologies:TURBO_0000531)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000931 "RetiredBbEncStart")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000931 "retired placeholder for biobank encounter start")
SubClassOf(ontologies:TURBO_0000931 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000932 (retired placeholder for biobank encounter start date)

AnnotationAssertion(dc:creator ontologies:TURBO_0000932 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000932 "2018-01-18T21:08:37Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000932 ontologies:TURBO_0000532)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000932 "retired placeholder for biobank encounter start date")
SubClassOf(ontologies:TURBO_0000932 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000933 (retired placeholder for biobank encounter CRID)

AnnotationAssertion(dc:creator ontologies:TURBO_0000933 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000933 "2018-01-18T21:53:55Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000933 ontologies:TURBO_0000533)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000933 "retired placeholder for biobank encounter CRID")
SubClassOf(ontologies:TURBO_0000933 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000934 (retired placeholder for biobank encounter symbol)

AnnotationAssertion(dc:creator ontologies:TURBO_0000934 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000934 "2018-01-18T21:54:46Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000934 ontologies:TURBO_0000534)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000934 "retired placeholder for biobank encounter symbol")
SubClassOf(ontologies:TURBO_0000934 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000935 (retired placeholder for biobank encounter registry denoter)

AnnotationAssertion(dc:creator ontologies:TURBO_0000935 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000935 "2018-01-25T19:20:03Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000935 ontologies:TURBO_0000535)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000935 "retired placeholder for biobank encounter registry denoter")
SubClassOf(ontologies:TURBO_0000935 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000943 (retired placeholder for biobank encounter identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000943 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000943 "2018-01-18T21:55:23Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000943 ontologies:TURBO_0000543)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000943 "retired placeholder for biobank encounter identifier registry")
SubClassOf(ontologies:TURBO_0000943 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0000961 (retired placeholder for neonate life stage)

AnnotationAssertion(obo:IAO_0000114 ontologies:TURBO_0000961 obo:IAO_0000124)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0000961 obo:UBERON_0007221)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000961 "RetiredNeonateStagePlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000961 "retired placeholder for neonate life stage")
SubClassOf(ontologies:TURBO_0000961 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001500 (biobank consenter MRN registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0001500 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001500 "2018-01-30T15:08:47Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001500 "biobank consenter MRN registry")
SubClassOf(ontologies:TURBO_0001500 ontologies:TURBO_0000506)

# Class: ontologies:TURBO_0001501 (ENCOUNTER_PACK_ID biobank encounter registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0001501 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001501 "2018-01-30T15:26:31Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001501 "ENCOUNTER_PACK_ID biobank encounter registry")
SubClassOf(ontologies:TURBO_0001501 ontologies:TURBO_0000543)

# Class: ontologies:TURBO_0001511 (length measurement assay)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0001511 "length measurement assay"@en)
AnnotationAssertion(obo:IAO_0000112 ontologies:TURBO_0001511 "In the doctors office, the nurse used a meter stick to perform a length measurement assay on the patient.  The resulting length mesurement datum, 1.5 meters, is about the patient's height.")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001511 "a process to determine the length of an evaluant"@en)
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0001511 "Mark A. Miller
originally (for mass measurement datum) Helen Parkinson")
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001511 "Mark A. Miller
originally (for mass measurement datum) OBI")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001511 "LengthMeasurementAssay")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001511 "created by Mark A. Miller, based on import of mass measurement assay

originally (for mass measurement datum) Philippe Rocca-Serra")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001511 "length measurement assay")
SubClassOf(ontologies:TURBO_0001511 obo:OBI_0000070)
SubClassOf(ontologies:TURBO_0001511 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0000408))

# Class: ontologies:TURBO_0001520 (TURBO assertion making process)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001520 "A planned process that takes a datum as input and has a rdf:Statement as output")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0001520 "Mark A. Miller")
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001520 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0001520 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0001520 "2017-06-28T13:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001520 "RecodingAssertion")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001520 "TURBO assertion making process")
SubClassOf(ontologies:TURBO_0001520 obo:OBI_0000011)

# Class: ontologies:TURBO_0001521 (TURBO sex recoding process)

AnnotationAssertion(obo:IAO_0000112 ontologies:TURBO_0001521 "I saw the gender identity datum 'M' in a data set describing Joey.  I used an instance of the TURBO sex recoding process (with some plan specification) to draw the conclusion that Joey has a quality of type PATO:male.")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001521 "A planned process that takes a gender identity datum as input and has a PATO:biological_sex as output")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0001521 "Person: Mark A. Miller"@en)
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001521 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0001521 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0001521 "2017-04-12T14:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001521 "SexRecodingProcess")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001521 "TURBO sex recoding process"@en)
SubClassOf(ontologies:TURBO_0001521 ontologies:TURBO_0001520)

# Class: ontologies:TURBO_0001531 (referent tracking)

AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001531 "\"Referent Tracking is a paradigm under which it is possible to refer explicitly to all of the concrete individual entities relevant to the accurate description of each patient's condition, therapies, and outcomes through the assignment of unique identifiers.\"
http://www.referent-tracking.com/RTU/?page=reftrackparadigm.phtml

See also
Clinical Data Wrangling using Ontological Realism and Referent Tracking
http://www.referent-tracking.com/RTU/?page=papers.phtml")
AnnotationAssertion(obo:created_by ontologies:TURBO_0001531 "Mark A. Miller")
AnnotationAssertion(dc:creator ontologies:TURBO_0001531 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001531 "2017-10-19T21:39:41Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001531 "ReferentTracking")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001531 "a data transformation with the objective of referring to entities in reality with a single Instance Unique Identifier (IUI)")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001531 "referent tracking")
SubClassOf(ontologies:TURBO_0001531 obo:OBI_0000011)

# Class: ontologies:TURBO_0001541 (conclusionation frequency threshold value specification)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001541 "a value specification that specifies the minumum frequency at which a value must appear in order for a comclusionation process to conclusde that it is the correct value")
AnnotationAssertion(obo:created_by ontologies:TURBO_0001541 "Mark A. Miller")
AnnotationAssertion(dc:creator ontologies:TURBO_0001541 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001541 "2017-10-19T21:39:41Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0001541 "conclusionation frequency threshold value specification")
SubClassOf(ontologies:TURBO_0001541 obo:OBI_0001931)
SubClassOf(ontologies:TURBO_0001541 ObjectSomeValuesFrom(ObjectInverseOf(obo:OBI_0001938) ontologies:TURBO_0002500))
SubClassOf(ontologies:TURBO_0001541 DataExactCardinality(1 obo:OBI_0001937 owl:real))

# Class: ontologies:TURBO_0001542 (Encounter participation inferencing)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001542 "A planned process in which RDF triples are created (for example)  stating that some biobank study participant participated in some healthcare encounter, based on the co-occurrence of the participants PSC vale and the encounter's identifier value appearing on the same row of a tabular/relational data source")
AnnotationAssertion(dc:creator ontologies:TURBO_0001542 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001542 "2017-09-27T14:25:03Z"^^xsd:dateTime)
AnnotationAssertion(ns3:alternative_term ontologies:TURBO_0001542 "entity linking")
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001542 "share2partInf")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001542 "Encounter participation inferencing")
AnnotationAssertion(rdfs:seeAlso ontologies:TURBO_0001542 ontologies:TURBO_0000302)
SubClassOf(ontologies:TURBO_0001542 obo:OBI_0000338)

# Class: ontologies:TURBO_0001900 (retired placeholder)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0001900 "retired placeholder")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001900 "A class containing individuals that were made obsolete in the course of referent tracking")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0001900 "Person: Mark A. Miller"@en)
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001900 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0001900 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0001900 "2017-04-25T16:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001900 "RetiredPlaceholder")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001900 "elaborate on referent tracking mechanism")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001900 "retired placeholder")
SubClassOf(ontologies:TURBO_0001900 oboInOwl:ObsoleteClass)

# Class: ontologies:TURBO_0001901 (retired placeholder for adipose tissue)

AnnotationAssertion(dc:creator ontologies:TURBO_0001901 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001901 "2017-11-03T20:49:12Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001901 obo:UBERON_0001013)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001901 "RetiredAdiposePlaceholder")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001901 "label was
Placeholder for a retired adipose tissue instance")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001901 "retired placeholder for adipose tissue")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001901 "retired placeholder for adipose tissue")
SubClassOf(ontologies:TURBO_0001901 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001902 (retired placeholder for biological sex)

AnnotationAssertion(obo:IAO_0000111 ontologies:TURBO_0001902 "retired placeholder for biological sex")
AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0001902 "A retired placeholder that used to refer to the biological sex of an organism found in some tabular data set")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0001902 "Person: Mark A. Miller"@en)
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0001902 "Mark A. Miller, TURBO project")
AnnotationAssertion(dc:creator ontologies:TURBO_0001902 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0001902 "2017-04-25T16:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001902 obo:PATO_0000047)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001902 "RetiredBiosexPlaceholder")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001902 "elaborate on referent tracking mechanism")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001902 "retired placeholder for biological sex")
SubClassOf(ontologies:TURBO_0001902 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001903 (retired placeholder for BMI datum)

AnnotationAssertion(dc:creator ontologies:TURBO_0001903 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001903 "2017-12-14T17:50:50Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001903 ns3:EFO_0004340)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001903 "RetiredBMIPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001903 "retired placeholder for BMI datum")
SubClassOf(ontologies:TURBO_0001903 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001904 (retired placeholder for value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0001904 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001904 "2018-01-10T20:59:27Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001904 obo:OBI_0001933)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001904 "RetiredBMIValSpecPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001904 "retired placeholder for value specification")
SubClassOf(ontologies:TURBO_0001904 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001905 (retired placeholder for height quality)

AnnotationAssertion(dc:creator ontologies:TURBO_0001905 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001905 "2017-11-17T15:27:16Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001905 obo:PATO_0000119)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001905 "RetiredHeightPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001905 "retired placeholder for height quality")
SubClassOf(ontologies:TURBO_0001905 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001906 (retired placeholder for process boundary)

AnnotationAssertion(dc:creator ontologies:TURBO_0001906 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001906 "2017-09-21T19:11:02Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001906 obo:BFO_0000035)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001906 "RetiredProcBoundPlaceholder")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001906 "For example, after referent tracking, this class holds all of placeholders for retires instances of peoples births (the start of their neonate stages)")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0001906 "previous label:  Placeholder for a retired proces boundary")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001906 "retired placeholder for process boundary")
SubClassOf(ontologies:TURBO_0001906 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001907 (retired placeholder for process start time measurement)

AnnotationAssertion(obo:IAO_0000114 ontologies:TURBO_0001907 obo:IAO_0000124)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001907 ontologies:TURBO_0000530)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001907 "RetiredProcStartTimeMeasPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001907 "retired placeholder for process start time measurement")
SubClassOf(ontologies:TURBO_0001907 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0001908 (retired placeholder for weight quality)

AnnotationAssertion(dc:creator ontologies:TURBO_0001908 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0001908 "2017-11-17T15:27:06Z"^^xsd:dateTime)
AnnotationAssertion(ontologies:TURBO_0000702 ontologies:TURBO_0001908 obo:PATO_0000128)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0001908 "RetiredWeightPlaceholder")
AnnotationAssertion(rdfs:label ontologies:TURBO_0001908 "retired placeholder for weight quality")
SubClassOf(ontologies:TURBO_0001908 ontologies:TURBO_0001900)

# Class: ontologies:TURBO_0002500 (conclusionating)

AnnotationAssertion(obo:IAO_0000115 ontologies:TURBO_0002500 "A planned process that takes one or more datums as input and has a single datum, statement, and or record of missing knowledge as output")
AnnotationAssertion(obo:IAO_0000117 ontologies:TURBO_0002500 "Mark A. Miller")
AnnotationAssertion(obo:IAO_0000119 ontologies:TURBO_0002500 "Mark A. Miller, TURBO team")
AnnotationAssertion(dc:creator ontologies:TURBO_0002500 "Mark A. Miller")
AnnotationAssertion(dc:date ontologies:TURBO_0002500 "2017-06-28T13:00:00-05:00"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0002500 "Conclusionation")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0002500 "there may be potentially conflicting information about an entity that has gone through a referent tracking process.  For example, Joey's gender could be asserted as male, male, male and female.  Depending on the rules, conclusionating might decide that Joey is in fact male.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0002500 "conclusionating")
SubClassOf(ontologies:TURBO_0002500 obo:OBI_0000011)

# Class: ontologies:TURBO_0002501 (BMI conclusionating)

AnnotationAssertion(dc:creator ontologies:TURBO_0002501 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0002501 "2017-11-17T15:15:20Z"^^xsd:dateTime)
AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0002501 "BMIconclProc")
AnnotationAssertion(rdfs:label ontologies:TURBO_0002501 "BMI conclusionating")
SubClassOf(ontologies:TURBO_0002501 ontologies:TURBO_0002500)

# Class: ns3:EFO_0001799 (ethnic group)

AnnotationAssertion(obo:IAO_0000115 ns3:EFO_0001799 "A group of people with a common cultural heritage that sets them apart from others in a variety of social relationships. (MSH); A social group characterized by a distinctive social and cultural tradition maintained from generation to generation, a common history and origin and a sense of identification with the group; members of the group have distinctive features in their way of life, shared experiences and often a common genetic heritage; these features may be reflected in their experience of health and disease. (NCI); Ethnicity - an arbitrary classification of the social group a person belongs to, and either identifies with or is identified with by others, as a result of a complex of cultural, biological, geographical and other factors such as linguistic, dietary and religion traditions; ancestry, background, allegiance, or association; and physical characteristics traditionally associated with race. Increasingly the concept is used synonymously with race but this use trend has a pragmatic basis rather than scientific. (NCI); The concept of ethnic origin is an attempt to classify people, not according to their current ethnicity, but according to where their ancestors came from. Ethnic origin has become a popular classification in statistics, where the concept of race has been largely discarded. (from Wikipedia) (NCI); a group of people with a common cultural heritage that sets them apart from others in a variety of social relationships. (CSP)"^^xsd:string)
AnnotationAssertion(obo:IAO_0000115 ns3:EFO_0001799 "An ethnic group is a population whose members have a common heritage that is real or presumed such as common culture, language, religion, behaviour or biological trait."^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 ns3:EFO_0001799 "Ethnicity"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 ns3:EFO_0001799 "race"^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 ns3:EFO_0001799 ns3:efo.owl)
AnnotationAssertion(rdfs:label ns3:EFO_0001799 "ethnic group"^^xsd:string)
SubClassOf(ns3:EFO_0001799 obo:OBI_0000181)

# Class: ns3:EFO_0004340 (ns3:EFO_0004340)

SubClassOf(ns3:EFO_0004340 obo:IAO_0000109)
SubClassOf(ns3:EFO_0004340 ObjectSomeValuesFrom(obo:IAO_0000136 obo:UBERON_0001013))

# Class: ns3:EFO_0004950 (date of birth)

AnnotationAssertion(obo:IAO_0000115 ns3:EFO_0004950 "The point in time at which an individual was born.")
AnnotationAssertion(obo:IAO_0000412 ns3:EFO_0004950 ns3:efo.owl)
AnnotationAssertion(rdfs:label ns3:EFO_0004950 "date of birth"@en)
SubClassOf(ns3:EFO_0004950 obo:IAO_0000416)

# Class: oboInOwl:DbXref (database_cross_reference)

AnnotationAssertion(obo:IAO_0000412 oboInOwl:DbXref obo:geno.owl)
AnnotationAssertion(rdfs:label oboInOwl:DbXref "database_cross_reference"@en)
SubClassOf(oboInOwl:DbXref obo:IAO_0000102)

# Class: oboInOwl:ObsoleteClass (Obsolete Class)

AnnotationAssertion(obo:IAO_0000412 oboInOwl:ObsoleteClass obo:iao.owl)
AnnotationAssertion(rdfs:label oboInOwl:ObsoleteClass "Obsolete Class")
AnnotationAssertion(rdfs:label oboInOwl:ObsoleteClass "Obsolete Class"^^xsd:string)
SubClassOf(oboInOwl:ObsoleteClass owl:Thing)

# Class: owl:Nothing (owl:Nothing)

AnnotationAssertion(obo:IAO_0000412 owl:Nothing obo:pdro.owl)
SubClassOf(owl:Nothing owl:Nothing)

# Class: owl:Thing (owl:Thing)

AnnotationAssertion(obo:IAO_0000412 owl:Thing obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 owl:Thing obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 owl:Thing obo:pdro.owl)


############################
#   Named Individuals
############################

# Individual: Thesaurus:C71890 (International Classification of Diseases, Ninth Revision)

AnnotationAssertion(rdfs:label Thesaurus:C71890 "International Classification of Diseases, Ninth Revision")
ClassAssertion(Thesaurus:C49474 Thesaurus:C71890)
DataPropertyAssertion(Thesaurus:code Thesaurus:C71890 "C71890")

# Individual: Thesaurus:C71892 (International Classification of Diseases, Tenth Revision)

AnnotationAssertion(rdfs:label Thesaurus:C71892 "International Classification of Diseases, Tenth Revision")
ClassAssertion(Thesaurus:C49474 Thesaurus:C71892)
DataPropertyAssertion(Thesaurus:code Thesaurus:C71892 "C71892")

# Individual: obo:IAO_0000002 (example to be eventually removed)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000002 "example to be eventually removed"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000002 "example to be eventually removed"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000002)

# Individual: obo:IAO_0000103 (failed exploratory term)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000103 "The term was used in an attempt to structure part of the ontology but in retrospect failed to do a good job"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000103 "Person:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000103 "failed exploratory term"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000103)
ClassAssertion(owl:Thing obo:IAO_0000103)

# Individual: obo:IAO_0000120 (metadata complete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000120 "metadata complete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000120 "Class has all its metadata, but is either not guaranteed to be in its final location in the asserted IS_A hierarchy or refers to another class that is not complete."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000120 "metadata complete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000120)
ClassAssertion(owl:Thing obo:IAO_0000120)

# Individual: obo:IAO_0000121 (organizational term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000121 "organizational term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000121 "term created to ease viewing/sort terms for development purpose, and will not be included in a release"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000121 "PERSON:Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000121 "organizational term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000121)
ClassAssertion(owl:Thing obo:IAO_0000121)

# Individual: obo:IAO_0000122 (ready for release)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000122 "ready for release"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000122 "Class has undergone final review, is ready for use, and will be included in the next release. Any class lacking \"ready_for_release\" should be considered likely to change place in hierarchy, have its definition refined, or be obsoleted in the next release.  Those classes deemed \"ready_for_release\" will also derived from a chain of ancestor classes that are also \"ready_for_release.\""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000122 "ready for release"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000122)
ClassAssertion(owl:Thing obo:IAO_0000122)

# Individual: obo:IAO_0000123 (metadata incomplete)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000123 "metadata incomplete"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000123 "Class is being worked on; however, the metadata (including definition) are not complete or sufficiently clear to the branch editors."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000123 "metadata incomplete"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000123)
ClassAssertion(owl:Thing obo:IAO_0000123)

# Individual: obo:IAO_0000124 (uncurated)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000124 "uncurated"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000124 "Nothing done yet beyond assigning a unique class ID and proposing a preferred term."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000124 "uncurated"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000124)
ClassAssertion(owl:Thing obo:IAO_0000124)

# Individual: obo:IAO_0000125 (pending final vetting)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000125 "pending final vetting"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000125 "All definitions, placement in the asserted IS_A hierarchy and required minimal metadata are complete. The class is awaiting a final review by someone other than the term editor."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000125)
ClassAssertion(owl:Thing obo:IAO_0000125)

# Individual: obo:IAO_0000226 (placeholder removed)

AnnotationAssertion(rdfs:label obo:IAO_0000226 "placeholder removed"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000226)
ClassAssertion(owl:Thing obo:IAO_0000226)

# Individual: obo:IAO_0000227 (terms merged)

AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000227 "An editor note should explain what were the merged terms and the reason for the merge."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000227 "terms merged"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000227)

# Individual: obo:IAO_0000228 (term imported)

AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000228 "This is to be used when the original term has been replaced by a term imported from an other ontology. An editor note should indicate what is the URI of the new term to use."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000228 "term imported"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000228)

# Individual: obo:IAO_0000229 (term split)

AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000229 "This is to be used when a term has been split in two or more new terms. An editor note should indicate the reason for the split and indicate the URIs of the new terms created."@en)
AnnotationAssertion(rdfs:label obo:IAO_0000229 "term split"@en)
ClassAssertion(obo:IAO_0000225 obo:IAO_0000229)

# Individual: obo:IAO_0000410 (universal)

AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000410 "Hard to give a definition for. Intuitively a \"natural kind\" rather than a collection of any old things, which a class is able to be, formally. At the meta level, universals are defined as positives, are disjoint with their siblings, have single asserted parents."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000410 "Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000410 "A Formal Theory of Substances, Qualities, and Universals, http://ontology.buffalo.edu/bfo/SQU.pdf"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000410 "universal"^^xsd:string)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000410)

# Individual: obo:IAO_0000420 (defined class)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000420 "A defined class is a class that is defined by a set of logically necessary and sufficient conditions but is not a universal"^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000420 "\"definitions\", in some readings, always are given by necessary and sufficient conditions. So one must be careful (and this is difficult sometimes) to distinguish between defined classes and universal."^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000420 "Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000420 "defined class"^^xsd:string)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000420)

# Individual: obo:IAO_0000421 (named class expression)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000421 "A named class expression is a logical expression that is given a name. The name can be used in place of the expression."^^xsd:string)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000421 "named class expressions are used in order to have more concise logical definition but their extensions may not be interesting classes on their own. In languages such as OWL, with no provisions for macros, these show up as actuall classes. Tools may with to not show them as such, and to replace uses of the macros with their expansions"^^xsd:string)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000421 "Alan Ruttenberg"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000421 "named class expression"^^xsd:string)
ClassAssertion(obo:IAO_0000409 obo:IAO_0000421)

# Individual: obo:IAO_0000423 (to be replaced with external ontology term)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000423 "to be replaced with external ontology term"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000423 "Terms with this status should eventually replaced with a term from another ontology."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000423 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000423 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000423 "to be replaced with external ontology term"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000423)

# Individual: obo:IAO_0000428 (requires discussion)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000428 "requires discussion"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000428 "A term that is metadata complete, has been reviewed, and problems have been identified that require discussion before release. Such a term requires editor note(s) to identify the outstanding issues."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000428 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000428 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)
ClassAssertion(obo:IAO_0000078 obo:IAO_0000428)

# Individual: obo:RO_0001901 (axiom holds for all times)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0001901 "axiom holds for all times"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001901 "

## Elucidation

This is used when the statement/axiom is assumed to hold true 'eternally'

## How to interpret (informal)

First the \"atemporal\" FOL is derived from the OWL using the standard
interpretation. This axiom is temporalized by embedding the axiom
within a for-all-times quantified sentence. The t argument is added to
all instantiation predicates and predicates that use this relation.

## Example

    Class: nucleus
    SubClassOf: part_of some cell

    forall t :
      forall n :
        instance_of(n,Nucleus,t)
         implies
        exists c :
          instance_of(c,Cell,t)
          part_of(n,c,t)

## Notes

This interpretation is *not* the same as an at-all-times relation

")
AnnotationAssertion(rdfs:label obo:RO_0001901 "axiom holds for all times"@en)

# Individual: obo:obi.owl (obo:obi.owl)

AnnotationAssertion(protege:defaultLanguage obo:obi.owl "en"^^xsd:string)
AnnotationAssertion(dc:contributor obo:obi.owl "Advisors for this project come from the IFOMIS group, Saarbruecken and from the Co-ODE group in Manchester"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Alan Ruttenberg"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Allyson Lister"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Barry Smith"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Bill Bug"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Bjoern Peters"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Carlo Torniai"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Chris Mungall"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Chris Stoeckert"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Chris Taylor"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Christian Bolling"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Cristian Cocos"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Daniel Rubin"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Daniel Schober"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Dawn Field"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Dirk Derom"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Elisabetta Manduchi"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Eric Deutsch"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Frank Gibson"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Gilberto Fragoso"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Helen C. Causton"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Helen Parkinson"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Holger Stenzhorn"@en)
AnnotationAssertion(dc:creator obo:obi.owl "James A. Overton"@en)
AnnotationAssertion(dc:creator obo:obi.owl "James Malone"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Jay Greenbaum"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Jeffrey Grethe"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Jennifer Fostel"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Jessica Turner"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Jie Zheng"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Joe White"@en)
AnnotationAssertion(dc:creator obo:obi.owl "John Westbrook"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Kevin Clancy"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Larisa Soldatova"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Lawrence Hunter"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Liju Fan"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Luisa Montecchi"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Matthew Brush"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Matthew Pocock"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Melanie Courtot"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Melissa Haendel"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Mervi Heiskanen"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Monnie McGee"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Norman Morrison"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Philip Lord"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Philippe Rocca-Serra"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Pierre Grenon"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Richard Bruskiewich"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Richard Scheuermann"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Robert Stevens"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Ryan R. Brinkman"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Stefan Wiemann"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Susanna-Assunta Sansone"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Tanya Gray"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Tina Hernandez-Boussard"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Trish Whetzel"@en)
AnnotationAssertion(dc:creator obo:obi.owl "Yongqun He"@en)
AnnotationAssertion(dc:date obo:obi.owl "2009-07-31"^^xsd:date)
AnnotationAssertion(dc:description obo:obi.owl "The Ontology for Biomedical Investigations (OBI) is build in a collaborative, international effort and will serve as a resource for annotating biomedical investigations, including the study design, protocols and instrumentation used, the data generated and the types of analysis performed on the data. This ontology arose from the Functional Genomics Investigation Ontology (FuGO) and will contain both terms that are common to all biomedical investigations, including functional genomics investigations and those that are more domain specific."@en)
AnnotationAssertion(dc:format obo:obi.owl "OWL-DL"@en)
AnnotationAssertion(dc:license obo:obi.owl <http://creativecommons.org/licenses/by/3.0/>)
AnnotationAssertion(dc:subject obo:obi.owl "An ontology for the annotation of biomedical and functional genomics experiments."@en)
AnnotationAssertion(dc:title obo:obi.owl "Ontology for Biomedical Investigation"@en)
AnnotationAssertion(rdfs:comment obo:obi.owl "Please cite the OBI consortium http://purl.obolibrary.org/obo/obi where traditional citation is called for. However it is adequate that individual terms be attributed simply by use of the identifying PURL for the term, in projects that refer to them."^^xsd:string)
AnnotationAssertion(owl:versionInfo obo:obi.owl "2017-11-07"^^xsd:string)
AnnotationAssertion(owl:versionInfo obo:obi.owl "2018-02-12"^^xsd:string)

# Individual: ontologies:TURBO_0000401 (U. Penn Biobank Organization)

AnnotationAssertion(oboInOwl:shorthand ontologies:TURBO_0000401 "UPBBO")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000401 "U. Penn Biobank Organization")
ClassAssertion(obo:OMIABIS_0000010 ontologies:TURBO_0000401)

# Individual: ontologies:TURBO_0000402 (PDS EMPI biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000402 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000402 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000402 "2018-01-30T14:41:32Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000402 "EMPI - Enterprise Master Patient Identifier - PDS generated internal patient identifier. Should be unique to a person (every person should have at most one EMPI, every EMPI belongs to only one person). This identifier is stable in that it should not change over time, however it is not complete in that not all patients are assigned an EMPI.")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000402 "Heather J Williams")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000402 "PDS EMPI biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0000506 ontologies:TURBO_0000402)

# Individual: ontologies:TURBO_0000403 (PDS PK_PATIENT_ID biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000403 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000403 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000403 "2018-01-30T15:13:50Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000403 "Heather J Williams")
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000403 "PDS generated internal patient identifier. Should be unique to a person (every PK_PATIENT_ID belongs to only one person).PK_PATIENT_ID is complete in that all patients do have PK_PATIENT_IDs, however it is not stable in that the value assigned to a person will change over time. Specifically, PK_PATIENT_IDs are regenerated over the weekend, so PK_PATIENT_IDs can be used to query PDS within the same work week to get consistent results, but particular PK_PATIENT_IDs from the previous week should not be used to requery PDS.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000403 "PDS PK_PATIENT_ID biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0000506 ontologies:TURBO_0000403)

# Individual: ontologies:TURBO_0000410 (HUP MRN biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000410 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000410 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000410 "2018-01-30T14:46:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000410 "HUP MRN biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0001500 ontologies:TURBO_0000410)

# Individual: ontologies:TURBO_0000411 (PMC MRN biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000411 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000411 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000411 "2018-01-30T14:46:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000411 "PMC MRN biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0001500 ontologies:TURBO_0000411)

# Individual: ontologies:TURBO_0000412 (PAH MRN biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000412 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000412 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000412 "2018-01-30T14:46:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000412 "PAH MRN biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0001500 ontologies:TURBO_0000412)

# Individual: ontologies:TURBO_0000413 (CCH MRN biobank consenter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000413 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000413 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000413 "2018-01-30T14:46:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000413 "CCH MRN biobank consenter identifier registry")
ClassAssertion(ontologies:TURBO_0001500 ontologies:TURBO_0000413)

# Individual: ontologies:TURBO_0000420 (CGI ENCOUNTER_PACK_ID biobank encounter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000420 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000420 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000420 "2018-01-30T15:25:43Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000420 "Integer.  Generated when the CRFs are created. All CGI encounters must have this identifier. Used to link to both CRF data and inventory data.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000420 "CGI ENCOUNTER_PACK_ID biobank encounter identifier registry")
ClassAssertion(ontologies:TURBO_0001501 ontologies:TURBO_0000420)

# Individual: ontologies:TURBO_0000421 (PMBB ENCOUNTER_PACK_ID biobank encounter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000421 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000421 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000421 "2018-01-30T15:30:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000421 "UUID. Generated when the CRFs are created. Used to link to CRF data. All PMBB encounters must have this identifier.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000421 "PMBB ENCOUNTER_PACK_ID biobank encounter identifier registry")
ClassAssertion(ontologies:TURBO_0001501 ontologies:TURBO_0000421)

# Individual: ontologies:TURBO_0000422 (PMBB Blood ENCOUNTER_PACK_ID biobank encounter identifier registry)

AnnotationAssertion(rdfs:label ontologies:TURBO_0000422 "PMBB Blood ENCOUNTER_PACK_ID biobank encounter identifier registry")
ClassAssertion(ontologies:TURBO_0001501 ontologies:TURBO_0000422)

# Individual: ontologies:TURBO_0000423 (PMBB Tissue ENCOUNTER_PACK_ID biobank encounter identifier registry)

AnnotationAssertion(rdfs:label ontologies:TURBO_0000423 "PMBB Tissue ENCOUNTER_PACK_ID biobank encounter identifier registry")
ClassAssertion(ontologies:TURBO_0001501 ontologies:TURBO_0000423)

# Individual: ontologies:TURBO_0000430 (PMBB ENCOUNTER_LAB_ID biobank encounter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000430 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000430 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000430 "2018-01-30T15:30:20Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000430 "Integer. Generated when blood specimens are processed. Used to link to inventory data. Not all encounters have this identifier; if no specimens are received, this identifier is not generated.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000430 "PMBB ENCOUNTER_LAB_ID biobank encounter identifier registry")
ClassAssertion(ontologies:TURBO_0000543 ontologies:TURBO_0000430)

# Individual: ontologies:TURBO_0000440 (PDS PK_Encounter_ID health care encounter identifier registry)

AnnotationAssertion(dc:contributor ontologies:TURBO_0000440 "Heather J Williams")
AnnotationAssertion(dc:creator ontologies:TURBO_0000440 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000440 "2018-01-30T15:47:02Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:comment ontologies:TURBO_0000440 "PDS generated internal healthcare encounter identifier. Probably not stable over time.")
AnnotationAssertion(rdfs:label ontologies:TURBO_0000440 "PDS PK_Encounter_ID health care encounter identifier registry")
ClassAssertion(ontologies:TURBO_0000513 ontologies:TURBO_0000440)

# Individual: ontologies:TURBO_0000451 (Regeneron genotype identifier registry)

AnnotationAssertion(dc:creator ontologies:TURBO_0000451 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000451 "2018-05-16T20:29:12Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000451 "Regeneron genotype identifier registry")
ClassAssertion(ontologies:TURBO_0000565 ontologies:TURBO_0000451)

# Individual: ontologies:TURBO_0000580 (-/- loss of function zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000580 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000580 "2018-04-20T19:21:43Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000580 "-/- loss of function zygosity value specification")
ClassAssertion(ontologies:TURBO_0000572 ontologies:TURBO_0000580)

# Individual: ontologies:TURBO_0000581 (-/+ loss of function zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000581 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000581 "2018-04-20T19:22:03Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000581 "-/+ loss of function zygosity value specification")
ClassAssertion(ontologies:TURBO_0000572 ontologies:TURBO_0000581)

# Individual: ontologies:TURBO_0000582 (+/+ loss of function zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000582 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000582 "2018-04-20T19:22:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000582 "+/+ loss of function zygosity value specification")
ClassAssertion(ontologies:TURBO_0000572 ontologies:TURBO_0000582)

# Individual: ontologies:TURBO_0000590 (-/- zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000590 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000590 "2018-04-20T19:21:43Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000590 "-/- zygosity value specification")
ClassAssertion(ontologies:TURBO_0000571 ontologies:TURBO_0000590)

# Individual: ontologies:TURBO_0000591 (-/+ zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000591 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000591 "2018-04-20T19:22:03Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000591 "-/+ zygosity value specification")
ClassAssertion(ontologies:TURBO_0000571 ontologies:TURBO_0000591)

# Individual: ontologies:TURBO_0000592 (+/+ zygosity value specification)

AnnotationAssertion(dc:creator ontologies:TURBO_0000592 "Mark Miller"^^xsd:string)
AnnotationAssertion(dc:date ontologies:TURBO_0000592 "2018-04-20T19:22:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label ontologies:TURBO_0000592 "+/+ zygosity value specification")
ClassAssertion(ontologies:TURBO_0000571 ontologies:TURBO_0000592)


ClassAssertion(oboInOwl:DbXref _:genid2)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0000056 ObjectInverseOf(obo:RO_0002223)) ontologies:TURBO_0000303)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0000087 obo:BFO_0000054) ontologies:TURBO_0000301)
AnnotationAssertion(rdfs:comment obo:geno.owl "GENO is an OWL model of genotypes, their more fundamental sequence components, and links to related biological and experimental entities.  At present many parts of the model are exploratory and set to undergo refactoring.  In addition, many classes and properties have GENO URIs but are place holders for classes that will be imported from an external ontology (e.g. SO, ChEBI, OBI, etc).  Furthermore, ongoing work will implement a model of genotype-to-phenotype associations. This will support description of asserted and inferred relationships between a genotypes, phenotypes, and environments, and the evidence/provenance behind these associations. 

Documentation is under development as well, and for now a slidedeck is available at http://www.slideshare.net/mhb120/brush-icbo-2013")
AnnotationAssertion(dc:contributor obo:ico.owl "Anna Maria Masci")
AnnotationAssertion(dc:contributor obo:ico.owl "Chris Stoeckert")
AnnotationAssertion(dc:contributor obo:ico.owl "Cui Tao"@en)
AnnotationAssertion(dc:contributor obo:ico.owl "Helena Ellis")
AnnotationAssertion(dc:contributor obo:ico.owl "Jian Guan"@en)
AnnotationAssertion(dc:contributor obo:ico.owl "Jihad Obeid")
AnnotationAssertion(dc:contributor obo:ico.owl "Jonathan Bona")
AnnotationAssertion(dc:contributor obo:ico.owl "Mathias Brochhausen")
AnnotationAssertion(dc:contributor obo:ico.owl "Neil Otte"@en)
AnnotationAssertion(dc:contributor obo:ico.owl "William Duncan"@en)
AnnotationAssertion(dc:creator obo:ico.owl "Alla Karnovsky")
AnnotationAssertion(dc:creator obo:ico.owl "Asiyah Yu Lin")
AnnotationAssertion(dc:creator obo:ico.owl "Christoph Brochhausen"@en)
AnnotationAssertion(dc:creator obo:ico.owl "Elizabeth Eisenhauer"@en)
AnnotationAssertion(dc:creator obo:ico.owl "Frank Manion")
AnnotationAssertion(dc:creator obo:ico.owl "Jie Zheng")
AnnotationAssertion(dc:creator obo:ico.owl "Marcy Harris")
AnnotationAssertion(dc:creator obo:ico.owl "Yongqun \"Oliver\" He")
AnnotationAssertion(dc:date obo:ico.owl "2018-03-01"@en)
AnnotationAssertion(dc:description obo:ico.owl "The Informed Consent Ontology (ICO) is an ontology for the informed consent and informed consent process in the medical field.")
AnnotationAssertion(dc:license obo:ico.owl <http://creativecommons.org/licenses/by/3.0/>)
AnnotationAssertion(rdfs:comment obo:ico.owl "Terms were identified from a sample of informed consent templates, and definitions were selected based on concordance between the defintion and the use of the term in the source informed consent template document.  We preferentially selected defintioins from the NCI thesuarus.")
AnnotationAssertion(rdfs:seeAlso obo:ico.owl <https://github.com/ICO-ontology/ICO>)
AnnotationAssertion(owl:versionInfo obo:ico.owl "Arbor version; 1.0.100"@en)
AnnotationAssertion(protege:defaultLanguage obo:ido.owl "en")
AnnotationAssertion(dc:contributor obo:ido.owl "Jie Zheng")
AnnotationAssertion(dc:creator obo:ido.owl "Alan Ruttenberg")
AnnotationAssertion(dc:creator obo:ido.owl "Albert Goldfain")
AnnotationAssertion(dc:creator obo:ido.owl "Alexander Diehl")
AnnotationAssertion(dc:creator obo:ido.owl "Barry Smith")
AnnotationAssertion(dc:creator obo:ido.owl "Bjoern Peters")
AnnotationAssertion(dc:creator obo:ido.owl "Lindsay Cowell")
AnnotationAssertion(dc:date obo:ido.owl "2017-11-03T15:13:52"^^xsd:dateTime)
AnnotationAssertion(dc:license obo:ido.owl <http://creativecommons.org/licenses/by/3.0/>)
AnnotationAssertion(rdfs:comment obo:ido.owl "The core Infectious Disease Ontology is an ontology of entities generally relevant to both the biomedical and clinical aspects of infectious diseases, including terms such as 'pathogen', 'host', 'vector', and 'vaccine'.  The structure of IDO adheres to the Basic Formal Ontology.  Terms in IDO that are within the scope of other OBO Foundry ontologies, such as the Gene Ontology, are derived from those ontologies.  Other terms are defined as cross-products of terms from Foundry ontologies to the extent possible. For more information, see http://www.infectiousdiseaseontology.org/Home.html. "@en)
AnnotationAssertion(rdfs:seeAlso obo:ido.owl "http://www.infectiousdiseaseontology.org")
AnnotationAssertion(owl:versionInfo obo:ido.owl "2017-11-03"^^xsd:string)
AnnotationAssertion(dc:creator obo:ogg.owl "Bin Zhao")
AnnotationAssertion(dc:creator obo:ogg.owl "Yongqun \"Oliver\" He (YH)"@en)
AnnotationAssertion(dc:creator obo:ogg.owl "Yue Liu"@en)
AnnotationAssertion(dc:date obo:ogg.owl "12-01-2016"@en)
AnnotationAssertion(dc:description obo:ogg.owl "OGG is a biological ontology in the area of genes and genomes. OGG uses the Basic Formal Ontology (BFO) as its upper level ontology. This OGG document contains the genes and genomes of a list of selected organisms, including human, two viruses (HIV and influenza virus), and bacteria (B. melitensis strain 16M, E. coli strain K-12 substrain MG1655, M. tuberculosis strain H37Rv, and P. aeruginosa strain PAO1). More OGG information for other organisms (e.g., mouse, zebrafish, fruit fly, yeast, etc.) may be found in other OGG subsets. "@en)
AnnotationAssertion(dc:format obo:ogg.owl "OWL-DL"@en)
AnnotationAssertion(dc:license obo:ogg.owl <http://creativecommons.org/licenses/by/3.0/>)
AnnotationAssertion(dc:subject obo:ogg.owl "A biological ontology in the area of genes and genomes."@en)
AnnotationAssertion(dc:title obo:ogg.owl "OGG: Ontology of Genes and Genomes"@en)
AnnotationAssertion(owl:versionInfo obo:ogg.owl "Vision Release: 1.0.59"@en)
AnnotationAssertion(foaf:mbox obo:ogg.owl <mailto:yongqunh@med.umich.edu>)
AnnotationAssertion(dc:contributor obo:omrse.owl "Daniel Welch")
AnnotationAssertion(dc:creator obo:omrse.owl "Amanda Hicks")
AnnotationAssertion(dc:creator obo:omrse.owl "Mathias Brochhausen"@en)
AnnotationAssertion(dc:creator obo:omrse.owl "Shariq Tariq"@en)
AnnotationAssertion(dc:creator obo:omrse.owl "Swetha Garimalla"@en)
AnnotationAssertion(dc:creator obo:omrse.owl "William Hogan"@en)
AnnotationAssertion(rdfs:comment obo:omrse.owl "This ontology grew out of efforts to represent the reality underlying the demographic information required by the US federal government's \"meaningful use\" criteria for electronic medical records and a presentation by Dr. William Hogan at the Electronic Health Record of the Future conference in Buffalo, NY http://ontology.buffalo.edu/EHR/Demographics_Hogan_Buffalo_2010_09_22.ppt"@en)
AnnotationAssertion(rdfs:label obo:omrse.owl "The Ontology of Medically Related Social Entities"@en)
AnnotationAssertion(owl:versionInfo obo:omrse.owl "2017-06-08")
AnnotationAssertion(dc:license obo:pr.owl <http://creativecommons.org/licenses/by/4.0/>)
AnnotationAssertion(oboInOwl:auto-generated-by obo:pr.owl "OBO-Edit 2.0"^^xsd:string)
AnnotationAssertion(oboInOwl:date obo:pr.owl "15:02:2018 08:11"^^xsd:string)
AnnotationAssertion(oboInOwl:default-namespace obo:pr.owl "protein"^^xsd:string)
AnnotationAssertion(oboInOwl:hasOBOFormatVersion obo:pr.owl "1.2"^^xsd:string)
AnnotationAssertion(oboInOwl:saved-by obo:pr.owl "ceci"^^xsd:string)
AnnotationAssertion(rdfs:comment obo:pr.owl "The PRotein Ontology is licensed under CC BY 4.0. Please see http://obofoundry.org/ontology/pr for details."^^xsd:string)
AnnotationAssertion(rdfs:comment obo:pr.owl "Use reasoner in OBO Edit to see the correct hierarchy."^^xsd:string)
AnnotationAssertion(obo:IAO_0000412 _:genid1119 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1120 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1121 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1122 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1123 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1124 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1125 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1126 obo:omrse.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1127 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1128 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1129 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1130 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1131 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1132 obo:uberon.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1133 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1134 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1135 obo:uberon.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1136 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1137 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1138 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1139 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1140 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1141 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1142 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1143 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1144 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1145 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1146 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1147 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1148 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1149 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1150 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1151 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1152 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1153 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1154 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1155 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1156 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1157 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1158 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1159 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1160 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1161 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1162 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1163 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1164 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1165 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1166 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1167 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1168 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1169 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1170 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1171 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1172 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1173 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1174 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1175 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1176 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1177 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1178 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1179 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1180 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1181 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1182 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1183 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1184 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1185 obo:geno.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1186 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1187 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1188 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1189 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1190 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1191 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1192 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1193 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1194 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1195 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1196 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1197 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1198 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1199 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1200 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1201 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1202 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1203 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1204 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1205 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1206 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1207 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1208 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1209 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1210 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1211 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1212 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1213 obo:ico.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1214 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1215 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1216 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1217 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1218 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1219 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1220 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1221 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1222 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1223 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1224 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1225 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1227 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1228 obo:pr.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1229 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1230 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1231 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1232 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1233 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1234 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1235 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1236 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1237 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1238 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1239 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1240 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1241 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1242 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1243 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1244 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1245 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1246 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1247 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1248 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1249 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1250 obo:obi.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1251 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1252 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1253 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1254 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1255 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1256 obo:ogg.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1257 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1258 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1259 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1260 obo:pdro.owl)
AnnotationAssertion(obo:IAO_0000412 _:genid1261 obo:pdro.owl)
AnnotationAssertion(owl:qualifiedCardinality _:genid1262 "1"^^xsd:nonNegativeInteger)
AnnotationAssertion(owl:qualifiedCardinality _:genid1263 "1"^^xsd:nonNegativeInteger)
AnnotationAssertion(oboInOwl:hasURI _:genid2 "http://purl.org/oboInOwl/owl/oboInOwlFormat#oboInOwlFormat_xref"^^xsd:anyURI)
AnnotationAssertion(rdfs:label _:genid2 "oboFormat:xref")
)